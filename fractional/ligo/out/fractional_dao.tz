{ parameter
    (or (pair %ownership_token
           (pair %nft_token (address %fa2) (nat %token_id))
           (contract %callback nat))
        (or (or %admin (address %set_admin) (or (unit %confirm_admin) (bool %pause)))
            (or (pair %flush_expired
                   (address %to_)
                   (pair %nft_token (address %fa2) (nat %token_id)))
                (or (pair %vote_transfer
                       (pair %vote (address %to_) (pair %nft_token (address %fa2) (nat %token_id)))
                       (option %permit (pair (key %key) (signature %signature))))
                    (or (pair %set_ownership
                           (pair %nft_token (address %fa2) (nat %token_id))
                           (list %ownership (pair (address %owner) (nat %amount)))
                           (nat %voting_threshold)
                           (nat %voting_period))
                        (or %fa2
                           (list %transfer
                              (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount)))))
                           (or (pair %balance_of
                                  (list %requests (pair (address %owner) (nat %token_id)))
                                  (contract %callback
                                     (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                               (list %update_operators
                                  (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                                      (pair %remove_operator (address %owner) (address %operator) (nat %token_id))))))))))) ;
  storage
    (pair (pair %ownership_tokens
             (big_map %ledger (pair address nat) nat)
             (big_map %operators (pair address address nat) unit)
             (big_map %token_total_supply nat nat)
             (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))))
          (nat %next_ownership_token_id)
          (pair %admin (address %admin) (option %pending_admin address) (bool %paused))
          (nat %vote_nonce)
          (big_map %owned_nfts
             (pair (address %fa2) (nat %token_id))
             (pair (nat %voting_threshold) (nat %voting_period) (nat %ownership_token)))
          (big_map %pending_votes
             (pair (address %to_) (pair %nft_token (address %fa2) (nat %token_id)))
             (pair (nat %vote_amount) (set %voters address) (timestamp %timestamp)))
          (big_map %metadata string bytes)) ;
  code { LAMBDA
           (pair address (option address) bool)
           unit
           { CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair address (option address) bool)
           unit
           { GET 4 ; IF { PUSH string "PAUSED" ; FAILWITH } { UNIT } } ;
         PUSH string "FA2_TOKEN_UNDEFINED" ;
         LAMBDA
           (pair (pair address nat) (big_map (pair address nat) nat))
           nat
           { UNPAIR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         DIG 4 ;
         UNPAIR ;
         IF_LEFT
           { DIG 2 ;
             DIG 3 ;
             DIG 4 ;
             DIG 5 ;
             DROP 4 ;
             DUP 2 ;
             GET 9 ;
             DUP 2 ;
             CAR ;
             GET ;
             IF_NONE
               { DROP ; PUSH string "NO_OWNERSHIP" ; FAILWITH }
               { SWAP ; CDR ; PUSH mutez 0 ; DIG 2 ; GET 4 ; TRANSFER_TOKENS } ;
             SWAP ;
             NIL operation ;
             DIG 2 ;
             CONS }
           { IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DIG 4 ;
                 DROP 3 ;
                 DUP 2 ;
                 GET 5 ;
                 SWAP ;
                 IF_LEFT
                   { DUP 2 ; DIG 4 ; SWAP ; EXEC ; DROP ; SOME ; UPDATE 3 }
                   { IF_LEFT
                       { DIG 3 ;
                         DROP 2 ;
                         DUP ;
                         GET 3 ;
                         IF_NONE
                           { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                           { SENDER ;
                             SWAP ;
                             DUP 2 ;
                             COMPARE ;
                             EQ ;
                             IF { SWAP ; NONE address ; UPDATE 3 ; SWAP ; UPDATE 1 }
                                { DROP 2 ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } }
                       { DUP 2 ; DIG 4 ; SWAP ; EXEC ; DROP ; UPDATE 4 } } ;
                 NIL operation ;
                 DUG 2 ;
                 UPDATE 5 ;
                 SWAP }
               { IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 5 ;
                     DROP 3 ;
                     DUP 2 ;
                     GET 5 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP 2 ;
                     GET 9 ;
                     DUP 2 ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH string "NO_OWNERSHIP" ; FAILWITH } {} ;
                     DUP 3 ;
                     GET 11 ;
                     DUP ;
                     DUP 4 ;
                     GET ;
                     IF_NONE
                       { DROP 3 ; PUSH string "VOTE_DOES_NOT_EXIST" ; FAILWITH }
                       { DIG 2 ;
                         GET 3 ;
                         INT ;
                         SWAP ;
                         GET 4 ;
                         NOW ;
                         SUB ;
                         COMPARE ;
                         GT ;
                         IF { SWAP ; NONE (pair nat (set address) timestamp) ; SWAP ; UPDATE }
                            { DROP 2 ; PUSH string "VOTE_NOT_EXPIRED" ; FAILWITH } } ;
                     UPDATE 11 ;
                     NIL operation }
                   { IF_LEFT
                       { DIG 2 ;
                         DIG 3 ;
                         DIG 5 ;
                         DROP 3 ;
                         DUP 2 ;
                         GET 5 ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CDR ;
                         IF_NONE
                           { SENDER }
                           { DUP 2 ;
                             CAR ;
                             DUP 4 ;
                             GET 7 ;
                             PAIR ;
                             SELF_ADDRESS ;
                             CHAIN_ID ;
                             PAIR ;
                             PAIR ;
                             PACK ;
                             DUP 2 ;
                             CDR ;
                             DUP 3 ;
                             CAR ;
                             CHECK_SIGNATURE ;
                             IF { CAR ; HASH_KEY ; IMPLICIT_ACCOUNT ; ADDRESS }
                                { DROP ; PUSH string "MISSIGNED" ; FAILWITH } } ;
                         DUP 3 ;
                         GET 9 ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH string "NO_OWNERSHIP" ; FAILWITH } {} ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         DUP 2 ;
                         GET 4 ;
                         DUP 4 ;
                         PAIR ;
                         GET ;
                         IF_NONE { PUSH string "NOT_OWNER" ; FAILWITH } {} ;
                         DUP 5 ;
                         GET 11 ;
                         DUP 5 ;
                         CAR ;
                         GET ;
                         IF_NONE
                           { NOW ;
                             EMPTY_SET address ;
                             DIG 4 ;
                             PUSH bool True ;
                             SWAP ;
                             UPDATE ;
                             DIG 2 ;
                             PAIR 3 }
                           { DUP ;
                             GET 3 ;
                             DUP 5 ;
                             MEM ;
                             IF { SWAP ; DIG 3 ; DROP 3 ; PUSH string "DUP_VOTE" ; FAILWITH }
                                { DUP 3 ;
                                  GET 3 ;
                                  INT ;
                                  DUP 2 ;
                                  GET 4 ;
                                  NOW ;
                                  SUB ;
                                  COMPARE ;
                                  GT ;
                                  IF { SWAP ; DIG 3 ; DROP 3 ; PUSH string "EXPIRED" ; FAILWITH }
                                     { DUP ;
                                       DIG 2 ;
                                       DUP 3 ;
                                       CAR ;
                                       ADD ;
                                       UPDATE 1 ;
                                       SWAP ;
                                       GET 3 ;
                                       DIG 3 ;
                                       PUSH bool True ;
                                       SWAP ;
                                       UPDATE ;
                                       UPDATE 3 } } } ;
                         DUP 2 ;
                         CAR ;
                         DUP 2 ;
                         CAR ;
                         COMPARE ;
                         LT ;
                         IF { SWAP ;
                              DROP ;
                              DUP 3 ;
                              DUP 4 ;
                              GET 11 ;
                              DIG 2 ;
                              SOME ;
                              DIG 3 ;
                              CAR ;
                              UPDATE ;
                              UPDATE 11 ;
                              PUSH nat 1 ;
                              DIG 2 ;
                              GET 7 ;
                              ADD ;
                              UPDATE 7 ;
                              NIL operation }
                            { DROP ;
                              DUP 2 ;
                              CAR ;
                              NIL (pair address nat nat) ;
                              PUSH nat 1 ;
                              DUP 3 ;
                              CDR ;
                              CDR ;
                              DUP 4 ;
                              CAR ;
                              PAIR 3 ;
                              CONS ;
                              SELF_ADDRESS ;
                              PAIR ;
                              SWAP ;
                              CDR ;
                              CAR ;
                              CONTRACT %transfer
                                (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                              IF_NONE
                                { DROP ; PUSH string "CANNOT_INVOKE_NFT_TRANSFER" ; FAILWITH }
                                { PUSH mutez 0 ;
                                  NIL (pair address (list (pair address nat nat))) ;
                                  DIG 3 ;
                                  CONS ;
                                  TRANSFER_TOKENS } ;
                              DIG 2 ;
                              CAR ;
                              DUP 4 ;
                              PUSH nat 1 ;
                              DUP 6 ;
                              GET 7 ;
                              ADD ;
                              UPDATE 7 ;
                              DUP 5 ;
                              GET 11 ;
                              DUP 3 ;
                              NONE (pair nat (set address) timestamp) ;
                              SWAP ;
                              UPDATE ;
                              UPDATE 11 ;
                              DUP 5 ;
                              GET 9 ;
                              DIG 2 ;
                              CDR ;
                              NONE (pair nat nat nat) ;
                              SWAP ;
                              UPDATE ;
                              UPDATE 9 ;
                              DIG 3 ;
                              CAR ;
                              DIG 3 ;
                              GET 4 ;
                              DUP 2 ;
                              DUP 3 ;
                              GET 6 ;
                              DUP 3 ;
                              NONE (pair nat (map string bytes)) ;
                              SWAP ;
                              UPDATE ;
                              UPDATE 6 ;
                              DIG 2 ;
                              GET 5 ;
                              DIG 2 ;
                              NONE nat ;
                              SWAP ;
                              UPDATE ;
                              UPDATE 5 ;
                              UPDATE 1 ;
                              NIL operation ;
                              DIG 2 ;
                              CONS } }
                       { IF_LEFT
                           { DIG 2 ;
                             DIG 3 ;
                             DIG 4 ;
                             DROP 3 ;
                             DUP 2 ;
                             GET 5 ;
                             DIG 3 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DUP 2 ;
                             GET 9 ;
                             DUP 2 ;
                             CAR ;
                             MEM ;
                             IF { DROP 2 ; PUSH string "DUP_OWNERSHIP" ; FAILWITH }
                                { DUP 2 ;
                                  CAR ;
                                  DUP 3 ;
                                  GET 3 ;
                                  EMPTY_MAP string bytes ;
                                  PUSH string "0" ;
                                  PACK ;
                                  SOME ;
                                  PUSH string "decimals" ;
                                  UPDATE ;
                                  PUSH string "Ownership Token" ;
                                  PACK ;
                                  SOME ;
                                  PUSH string "name" ;
                                  UPDATE ;
                                  PUSH string "OT" ;
                                  PACK ;
                                  SOME ;
                                  PUSH string "symbol" ;
                                  UPDATE ;
                                  DUP 2 ;
                                  PAIR ;
                                  PUSH nat 0 ;
                                  DUP 4 ;
                                  CAR ;
                                  PAIR ;
                                  DUP 5 ;
                                  GET 3 ;
                                  ITER { SWAP ;
                                         UNPAIR ;
                                         DUP 3 ;
                                         CDR ;
                                         DIG 2 ;
                                         ADD ;
                                         SWAP ;
                                         DUP 3 ;
                                         CDR ;
                                         DUP 6 ;
                                         DIG 4 ;
                                         CAR ;
                                         PAIR ;
                                         SWAP ;
                                         SOME ;
                                         SWAP ;
                                         UPDATE ;
                                         PAIR } ;
                                  DUP 6 ;
                                  DUP 7 ;
                                  GET 9 ;
                                  DUP 8 ;
                                  GET 3 ;
                                  DUP 8 ;
                                  GET 6 ;
                                  DUP 9 ;
                                  GET 5 ;
                                  PAIR 3 ;
                                  DIG 7 ;
                                  CAR ;
                                  SWAP ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE ;
                                  UPDATE 9 ;
                                  PUSH nat 1 ;
                                  DIG 6 ;
                                  GET 3 ;
                                  ADD ;
                                  UPDATE 3 ;
                                  SWAP ;
                                  UNPAIR ;
                                  DUP 6 ;
                                  DUP 7 ;
                                  GET 6 ;
                                  DIG 5 ;
                                  DUP 7 ;
                                  SWAP ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE ;
                                  UPDATE 6 ;
                                  SWAP ;
                                  UPDATE 1 ;
                                  DIG 4 ;
                                  GET 5 ;
                                  DIG 2 ;
                                  DIG 4 ;
                                  SWAP ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE ;
                                  UPDATE 5 ;
                                  UPDATE 1 } ;
                             NIL operation }
                           { DIG 5 ;
                             DROP ;
                             DUP 2 ;
                             GET 5 ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DUP 2 ;
                             CAR ;
                             SWAP ;
                             IF_LEFT
                               { DUP 2 ;
                                 CAR ;
                                 SWAP ;
                                 ITER { SWAP ;
                                        DUP 2 ;
                                        CDR ;
                                        ITER { SWAP ;
                                               DUP 4 ;
                                               GET 6 ;
                                               DUP 3 ;
                                               GET 3 ;
                                               MEM ;
                                               NOT ;
                                               IF { DROP 2 ; DUP 5 ; FAILWITH }
                                                  { SENDER ;
                                                    DUP 4 ;
                                                    CAR ;
                                                    DUP 2 ;
                                                    DUP 2 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    IF { DROP 2 }
                                                       { DUP 6 ;
                                                         GET 3 ;
                                                         DUP 5 ;
                                                         GET 3 ;
                                                         DIG 3 ;
                                                         PAIR ;
                                                         DIG 2 ;
                                                         PAIR ;
                                                         MEM ;
                                                         IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } ;
                                                    DUP 2 ;
                                                    GET 3 ;
                                                    DUP 4 ;
                                                    CAR ;
                                                    PAIR ;
                                                    DUP 2 ;
                                                    DUP 2 ;
                                                    PAIR ;
                                                    DUP 8 ;
                                                    SWAP ;
                                                    EXEC ;
                                                    DUP 4 ;
                                                    GET 4 ;
                                                    SWAP ;
                                                    SUB ;
                                                    ISNAT ;
                                                    IF_NONE
                                                      { DROP 2 ; PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH }
                                                      { PUSH nat 0 ;
                                                        DUP 2 ;
                                                        COMPARE ;
                                                        EQ ;
                                                        IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                                           { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } ;
                                                    DUP 2 ;
                                                    GET 3 ;
                                                    DUP 3 ;
                                                    CAR ;
                                                    PAIR ;
                                                    DUP 2 ;
                                                    DUP 2 ;
                                                    PAIR ;
                                                    DUP 8 ;
                                                    SWAP ;
                                                    EXEC ;
                                                    DIG 3 ;
                                                    GET 4 ;
                                                    ADD ;
                                                    PUSH nat 0 ;
                                                    DUP 2 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                                       { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } } ;
                                        SWAP ;
                                        DROP } ;
                                 DIG 3 ;
                                 DIG 4 ;
                                 DROP 2 ;
                                 UPDATE 1 ;
                                 NIL operation }
                               { IF_LEFT
                                   { DUP ;
                                     CAR ;
                                     MAP { DUP 3 ;
                                           GET 6 ;
                                           DUP 2 ;
                                           CDR ;
                                           MEM ;
                                           NOT ;
                                           IF { DROP ; DUP 5 ; FAILWITH }
                                              { DUP 3 ; CAR ; DUP 2 ; PAIR ; DUP 6 ; SWAP ; EXEC ; SWAP ; PAIR } } ;
                                     DIG 4 ;
                                     DIG 5 ;
                                     DROP 2 ;
                                     SWAP ;
                                     CDR ;
                                     PUSH mutez 0 ;
                                     DIG 2 ;
                                     TRANSFER_TOKENS ;
                                     SWAP ;
                                     NIL operation ;
                                     DIG 2 ;
                                     CONS }
                                   { DIG 3 ;
                                     DIG 4 ;
                                     DROP 2 ;
                                     SENDER ;
                                     DUP 3 ;
                                     GET 3 ;
                                     DIG 2 ;
                                     ITER { SWAP ;
                                            DUP 3 ;
                                            DUP 3 ;
                                            IF_LEFT {} {} ;
                                            CAR ;
                                            COMPARE ;
                                            EQ ;
                                            IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                            SWAP ;
                                            IF_LEFT
                                              { SWAP ;
                                                UNIT ;
                                                SOME ;
                                                DUP 3 ;
                                                GET 4 ;
                                                DUP 4 ;
                                                GET 3 ;
                                                PAIR ;
                                                DIG 3 ;
                                                CAR ;
                                                PAIR ;
                                                UPDATE }
                                              { SWAP ;
                                                DUP 2 ;
                                                GET 4 ;
                                                DUP 3 ;
                                                GET 3 ;
                                                PAIR ;
                                                DIG 2 ;
                                                CAR ;
                                                PAIR ;
                                                NONE unit ;
                                                SWAP ;
                                                UPDATE } } ;
                                     SWAP ;
                                     DROP ;
                                     UPDATE 3 ;
                                     NIL operation } } ;
                             DUG 2 ;
                             UPDATE 1 ;
                             SWAP } } } } } ;
         PAIR } }

