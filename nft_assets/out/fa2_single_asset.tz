{ parameter
    (or (or (or %admin (bool %pause) (address %set_admin))
            (or %assets
               (or (or (pair %balance_of
                          (contract %callback
                             (list (pair (nat %balance) (pair %request (address %owner) (nat %token_id)))))
                          (list %requests (pair (address %owner) (nat %token_id))))
                       (pair %is_operator
                          (contract %callback
                             (pair (bool %is_operator)
                                   (pair %operator
                                      (pair (address %operator) (address %owner))
                                      (or %tokens (unit %all_tokens) (set %some_tokens nat)))))
                          (pair %operator
                             (pair (address %operator) (address %owner))
                             (or %tokens (unit %all_tokens) (set %some_tokens nat)))))
                   (or (contract %permissions_descriptor
                          (pair (pair (option %custom (pair (option %config_api address) (string %tag)))
                                      (or %operator
                                         (or (unit %no_transfer) (unit %owner_or_operator_transfer))
                                         (unit %owner_transfer)))
                                (pair (or %receiver
                                         (or (unit %optional_owner_hook) (unit %owner_no_op))
                                         (unit %required_owner_hook))
                                      (or %sender
                                         (or (unit %optional_owner_hook) (unit %owner_no_op))
                                         (unit %required_owner_hook)))))
                       (pair %token_metadata
                          (contract %callback
                             (list (pair (pair (pair (nat %decimals) (map %extras string string))
                                               (pair (string %name) (string %symbol)))
                                         (nat %token_id))))
                          (list %token_ids nat))))
               (or (or (pair %total_supply
                          (contract %callback (list (pair (nat %token_id) (nat %total_supply))))
                          (list %token_ids nat))
                       (list %transfer
                          (pair (pair (nat %amount) (address %from_)) (pair (address %to_) (nat %token_id)))))
                   (list %update_operators
                      (or (pair %add_operator
                             (pair (address %operator) (address %owner))
                             (or %tokens (unit %all_tokens) (set %some_tokens nat)))
                          (pair %remove_operator
                             (pair (address %operator) (address %owner))
                             (or %tokens (unit %all_tokens) (set %some_tokens nat))))))))
        (or %tokens
           (list %burn_tokens (pair (nat %amount) (address %owner)))
           (list %mint_tokens (pair (nat %amount) (address %owner))))) ;
  storage
    (pair (pair %admin (address %admin) (bool %paused))
          (pair %assets
             (pair (pair (big_map %ledger address nat)
                         (pair %metadata
                            (pair (pair (nat %decimals) (map %extras string string))
                                  (pair (string %name) (string %symbol)))
                            (nat %token_id)))
                   (pair (big_map %operators (pair address address) bool)
                         (pair %permissions_descriptor
                            (pair (option %custom (pair (option %config_api address) (string %tag)))
                                  (or %operator
                                     (or (unit %no_transfer) (unit %owner_or_operator_transfer))
                                     (unit %owner_transfer)))
                            (pair (or %receiver
                                     (or (unit %optional_owner_hook) (unit %owner_no_op))
                                     (unit %required_owner_hook))
                                  (or %sender
                                     (or (unit %optional_owner_hook) (unit %owner_no_op))
                                     (unit %required_owner_hook))))))
             (nat %total_supply))) ;
  code { LAMBDA
           (pair address (big_map address nat))
           nat
           { DUP ;
             CAR ;
             DIP { DUP ; CDR } ;
             GET ;
             IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
             DIP { DROP } } ;
         DUP ;
         LAMBDA
           (pair (lambda (pair address (big_map address nat)) nat)
                 (pair (list (pair (pair (nat %amount) (option %from_ address))
                                   (pair (option %to_ address) (nat %token_id))))
                       (big_map address nat)))
           (big_map address nat)
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             DIP { DUP ; CDR } ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    DIP { DUP } ;
                    SWAP ;
                    CDR ;
                    DUP ;
                    CAR ;
                    CDR ;
                    IF_NONE
                      { DIP { DUP } ; SWAP }
                      { DUP ;
                        DIP { DIP { DUP } ; SWAP ; CAR ; CAR } ;
                        PAIR ;
                        DIP { DIP 2 { DUP } ; DIG 2 } ;
                        PAIR ;
                        DUP ;
                        CAR ;
                        CAR ;
                        DIP { DUP } ;
                        SWAP ;
                        CDR ;
                        DIP { DUP } ;
                        SWAP ;
                        DIP { DUP } ;
                        PAIR ;
                        DIP { DIP 8 { DUP } ; DIG 8 } ;
                        EXEC ;
                        DUP ;
                        DIP { DIP 3 { DUP } ; DIG 3 ; CAR ; CDR } ;
                        SUB ;
                        ISNAT ;
                        IF_NONE
                          { PUSH string "INSUFFICIENT_BALANCE" ; FAILWITH }
                          { DUP ;
                            PUSH nat 0 ;
                            SWAP ;
                            COMPARE ;
                            EQ ;
                            IF { DIP 3 { DUP } ;
                                 DIG 3 ;
                                 DIP { DIP 2 { DUP } ; DIG 2 ; NONE nat } ;
                                 UPDATE }
                               { DIP 3 { DUP } ;
                                 DIG 3 ;
                                 DIP { DUP ; SOME ; DIP { DIP 2 { DUP } ; DIG 2 } } ;
                                 UPDATE } ;
                            DIP { DROP } } ;
                        DIP { DROP 5 } } ;
                    DIP { DUP } ;
                    SWAP ;
                    CDR ;
                    CAR ;
                    IF_NONE
                      { DUP }
                      { DUP ;
                        DIP { DIP 2 { DUP } ; DIG 2 ; CAR ; CAR } ;
                        PAIR ;
                        DIP { DIP { DUP } ; SWAP } ;
                        PAIR ;
                        DUP ;
                        CAR ;
                        CAR ;
                        DIP { DUP } ;
                        SWAP ;
                        CDR ;
                        DIP { DUP } ;
                        SWAP ;
                        DIP { DUP } ;
                        PAIR ;
                        DIP { DIP 9 { DUP } ; DIG 9 } ;
                        EXEC ;
                        DUP ;
                        DIP { DIP 3 { DUP } ; DIG 3 ; CAR ; CDR } ;
                        ADD ;
                        DIP 3 { DUP } ;
                        DIG 3 ;
                        DIP { DUP ; SOME ; DIP { DIP 2 { DUP } ; DIG 2 } } ;
                        UPDATE ;
                        DIP { DROP 6 } } ;
                    DUP ;
                    DIP { DROP 5 } } ;
             DIP { DROP 2 } } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (or (unit %all_tokens) (set %some_tokens nat))
           unit
           { DUP ;
             IF_LEFT
               { DROP ; UNIT }
               { DUP ;
                 SIZE ;
                 PUSH nat 1 ;
                 SWAP ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "TOKEN_UNDEFINED" ; FAILWITH }
                    { DUP ;
                      PUSH nat 0 ;
                      MEM ;
                      IF { UNIT } { PUSH string "TOKEN_UNDEFINED" ; FAILWITH } } ;
                 DIP { DROP } } ;
             DIP { DROP } } ;
         LAMBDA
           (list nat)
           unit
           { DUP ;
             IF_CONS
               { DIP { DUP } ;
                 SWAP ;
                 SIZE ;
                 PUSH nat 0 ;
                 SWAP ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "TOKEN_UNDEFINED" ; FAILWITH }
                    { DUP ;
                      PUSH nat 0 ;
                      SWAP ;
                      COMPARE ;
                      EQ ;
                      IF { UNIT } { PUSH string "TOKEN_UNDEFINED" ; FAILWITH } } ;
                 DIP { DROP 2 } }
               { PUSH string "NO_TOKEN_ID" ; FAILWITH } ;
             DIP { DROP } } ;
         LAMBDA
           (list (pair (nat %amount) (address %owner)))
           nat
           { DUP ;
             PUSH nat 0 ;
             SWAP ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    DIP { DUP ; CDR ; CAR } ;
                    ADD ;
                    DIP { DROP } } ;
             DIP { DROP } } ;
         LAMBDA
           (pair (address %admin) (bool %paused))
           unit
           { DUP ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } ;
             DIP { DROP } } ;
         DIP 6 { DUP } ;
         DIG 6 ;
         CDR ;
         DIP 7 { DUP } ;
         DIG 7 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIP 2 { DUP } ;
                 DIG 2 ;
                 CAR ;
                 DIP { DIP 3 { DUP } ; DIG 3 } ;
                 EXEC ;
                 DIP { DUP } ;
                 SWAP ;
                 DIP { DIP 3 { DUP } ; DIG 3 ; CAR } ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIP { DUP } ;
                 SWAP ;
                 CAR ;
                 IF_LEFT
                   { DUP ;
                     DIP { DIP { DUP } ; SWAP } ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DIP { DUP } ;
                     SWAP ;
                     CAR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DIP { DROP } ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP } }
                   { DUP ;
                     DIP { DIP { DUP } ; SWAP } ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DIP { DUP } ;
                     SWAP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     SWAP ;
                     PAIR ;
                     DIP { DROP } ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP } } ;
                 DIP { DROP 2 } ;
                 DUP ;
                 CAR ;
                 DIP { DIP 4 { DUP } ;
                       DIG 4 ;
                       DIP { DUP } ;
                       SWAP ;
                       CDR ;
                       SWAP ;
                       CDR ;
                       SWAP ;
                       PAIR } ;
                 PAIR ;
                 DIP { DROP 3 } }
               { DIP 2 { DUP } ;
                 DIG 2 ;
                 CAR ;
                 CDR ;
                 IF { PUSH string "PAUSED" ; FAILWITH } { UNIT } ;
                 DIP { DUP } ;
                 SWAP ;
                 DIP { DIP 3 { DUP } ; DIG 3 ; CDR } ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIP { DUP } ;
                 SWAP ;
                 CAR ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DUP ;
                         IF_LEFT
                           { DUP ;
                             DIP { DIP 3 { DUP } ; DIG 3 ; CAR ; CAR ; CAR } ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             MAP { DUP ;
                                   CDR ;
                                   PUSH nat 0 ;
                                   SWAP ;
                                   COMPARE ;
                                   NEQ ;
                                   IF { PUSH string "TOKEN_UNDEFINED" ; FAILWITH }
                                      { DUP ;
                                        CAR ;
                                        DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                                        PAIR ;
                                        DIP { DIP 17 { DUP } ; DIG 17 } ;
                                        EXEC ;
                                        DUP ;
                                        DIP { DIP { DUP } ; SWAP } ;
                                        PAIR ;
                                        DIP { DROP } } ;
                                   DIP { DROP } } ;
                             DUP ;
                             DIP { DIP { DUP } ; SWAP ; CAR ; PUSH mutez 0 } ;
                             TRANSFER_TOKENS ;
                             DIP { DROP 3 } ;
                             DUP ;
                             NIL operation ;
                             SWAP ;
                             CONS ;
                             DIP { DIP 4 { DUP } ; DIG 4 } ;
                             PAIR ;
                             DIP { DROP 2 } }
                           { DUP ;
                             CDR ;
                             CDR ;
                             DIP { DIP 12 { DUP } ; DIG 12 } ;
                             EXEC ;
                             DIP { DUP } ;
                             SWAP ;
                             CDR ;
                             CAR ;
                             CDR ;
                             DIP { DIP { DUP } ; SWAP ; CDR ; CAR ; CAR } ;
                             PAIR ;
                             DIP { DIP 4 { DUP } ; DIG 4 ; CAR ; CDR ; CAR } ;
                             GET ;
                             IF_NONE { PUSH bool False } { DUP ; DIP { DROP } } ;
                             DIP { DIP { DUP } ; SWAP ; CDR } ;
                             PAIR ;
                             DIP { DIP { DUP } ; SWAP ; CAR ; PUSH mutez 0 } ;
                             TRANSFER_TOKENS ;
                             DUP ;
                             NIL operation ;
                             SWAP ;
                             CONS ;
                             DIP { DIP 5 { DUP } ; DIG 5 } ;
                             PAIR ;
                             DIP { DROP 3 } } ;
                         DIP { DROP } }
                       { DUP ;
                         IF_LEFT
                           { DIP 3 { DUP } ;
                             DIG 3 ;
                             CAR ;
                             CDR ;
                             CDR ;
                             DIP { DUP ; PUSH mutez 0 } ;
                             TRANSFER_TOKENS ;
                             DUP ;
                             NIL operation ;
                             SWAP ;
                             CONS ;
                             DIP { DIP 4 { DUP } ; DIG 4 } ;
                             PAIR ;
                             DIP { DROP 2 } }
                           { DUP ;
                             CDR ;
                             DIP { DIP 11 { DUP } ; DIG 11 } ;
                             EXEC ;
                             DIP 4 { DUP } ;
                             DIG 4 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             NIL (pair (pair (pair (nat %decimals) (map %extras string string))
                                             (pair (string %name) (string %symbol)))
                                       (nat %token_id)) ;
                             SWAP ;
                             CONS ;
                             DIP { DIP { DUP } ; SWAP ; CAR ; PUSH mutez 0 } ;
                             TRANSFER_TOKENS ;
                             DUP ;
                             NIL operation ;
                             SWAP ;
                             CONS ;
                             DIP { DIP 5 { DUP } ; DIG 5 } ;
                             PAIR ;
                             DIP { DROP 3 } } ;
                         DIP { DROP } } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT
                       { DUP ;
                         IF_LEFT
                           { DUP ;
                             CDR ;
                             DIP { DIP 11 { DUP } ; DIG 11 } ;
                             EXEC ;
                             DIP 4 { DUP } ;
                             DIG 4 ;
                             CDR ;
                             PUSH nat 0 ;
                             PAIR ;
                             NIL (pair (nat %token_id) (nat %total_supply)) ;
                             SWAP ;
                             CONS ;
                             DIP { DIP { DUP } ; SWAP ; CAR ; PUSH mutez 0 } ;
                             TRANSFER_TOKENS ;
                             DUP ;
                             NIL operation ;
                             SWAP ;
                             CONS ;
                             DIP { DIP 5 { DUP } ; DIG 5 } ;
                             PAIR ;
                             DIP { DROP 3 } }
                           { DUP ;
                             MAP { DUP ;
                                   CDR ;
                                   CDR ;
                                   PUSH nat 0 ;
                                   SWAP ;
                                   COMPARE ;
                                   NEQ ;
                                   IF { PUSH string "TOKEN_UNDEFINED" ; FAILWITH }
                                      { DUP ;
                                        CAR ;
                                        CAR ;
                                        DIP { DUP ; CAR ; CDR ; SOME } ;
                                        PAIR ;
                                        DIP { DUP ; CDR ; CAR ; SOME ; DIP { DUP ; CDR ; CDR } ; PAIR } ;
                                        PAIR } ;
                                   DIP { DROP } } ;
                             DUP ;
                             DIP { DIP 4 { DUP } ; DIG 4 ; CAR ; CDR ; CDR ; CAR ; CDR } ;
                             PAIR ;
                             DIP { DIP 4 { DUP } ; DIG 4 ; CAR ; CDR ; CAR } ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             CDR ;
                             IF_LEFT
                               { DUP ;
                                 IF_LEFT
                                   { PUSH string "TX_DENIED" ; FAILWITH }
                                   { PUSH bool True ; PUSH bool True ; PAIR ; DIP { DROP } } ;
                                 DIP { DROP } }
                               { PUSH bool False ; PUSH bool True ; PAIR ; DIP { DROP } } ;
                             SENDER ;
                             DIP 2 { DUP } ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             EMPTY_SET address ;
                             SWAP ;
                             ITER { SWAP ;
                                    PAIR ;
                                    DUP ;
                                    CAR ;
                                    DIP { DUP } ;
                                    SWAP ;
                                    CDR ;
                                    CAR ;
                                    CDR ;
                                    IF_NONE
                                      { DUP }
                                      { DUP ;
                                        DIP { DIP { DUP } ; SWAP ; PUSH bool True } ;
                                        UPDATE ;
                                        DIP { DROP } } ;
                                    DIP { DROP 2 } } ;
                             DUP ;
                             ITER { DIP 3 { DUP } ;
                                    DIG 3 ;
                                    CAR ;
                                    DIP { DUP ; DIP { DIP 2 { DUP } ; DIG 2 } ; COMPARE ; EQ } ;
                                    AND ;
                                    IF { UNIT }
                                       { DIP 3 { DUP } ;
                                         DIG 3 ;
                                         CDR ;
                                         NOT ;
                                         IF { PUSH string "NOT_OWNER" ; FAILWITH }
                                            { DUP ;
                                              DIP { DIP 2 { DUP } ; DIG 2 } ;
                                              PAIR ;
                                              DIP { DIP 4 { DUP } ; DIG 4 ; CDR } ;
                                              GET ;
                                              IF_NONE { PUSH string "NOT_OPERATOR" ; FAILWITH } { DROP ; UNIT } } } ;
                                    DROP 2 } ;
                             DROP 4 ;
                             DUP ;
                             PUSH unit Unit ;
                             SWAP ;
                             DIP { DIP 5 { DUP } ; DIG 5 ; CAR ; CAR ; CAR } ;
                             PAIR ;
                             DIP { DIP 15 { DUP } ; DIG 15 } ;
                             EXEC ;
                             DIP 6 { DUP } ;
                             DIG 6 ;
                             DIP { DUP } ;
                             SWAP ;
                             DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR ;
                             DIP { DROP 4 } } ;
                         DIP { DROP } }
                       { DUP ;
                         DIP { DIP 2 { DUP } ; DIG 2 ; CAR ; CDR ; CAR } ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         DIP { DUP ; CDR } ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                CAR ;
                                DIP { DUP } ;
                                SWAP ;
                                CDR ;
                                IF_LEFT
                                  { DUP ;
                                    CDR ;
                                    DIP { DIP 15 { DUP } ; DIG 15 } ;
                                    EXEC ;
                                    DIP { DUP } ;
                                    SWAP ;
                                    CAR ;
                                    CDR ;
                                    DIP { DIP { DUP } ; SWAP ; CAR ; CAR } ;
                                    PAIR ;
                                    DIP { PUSH bool True ; SOME ; DIP { DIP 2 { DUP } ; DIG 2 } } ;
                                    UPDATE ;
                                    DIP { DROP 2 } }
                                  { DUP ;
                                    CDR ;
                                    DIP { DIP 15 { DUP } ; DIG 15 } ;
                                    EXEC ;
                                    DIP { DUP } ;
                                    SWAP ;
                                    CAR ;
                                    CDR ;
                                    DIP { DIP { DUP } ; SWAP ; CAR ; CAR } ;
                                    PAIR ;
                                    DIP { DIP 2 { DUP } ; DIG 2 ; NONE bool } ;
                                    UPDATE ;
                                    DIP { DROP 2 } } ;
                                DIP { DROP 2 } } ;
                         DIP { DROP } ;
                         DIP 3 { DUP } ;
                         DIG 3 ;
                         DIP { DUP } ;
                         SWAP ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP 2 } } ;
                     DIP { DROP } } ;
                 DIP { DROP 2 } ;
                 DUP ;
                 CAR ;
                 DIP { DIP 4 { DUP } ;
                       DIG 4 ;
                       DIP { DUP } ;
                       SWAP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       PAIR } ;
                 PAIR ;
                 DIP { DROP 3 } } ;
             DIP { DROP } }
           { DIP { DUP } ;
             SWAP ;
             CAR ;
             DIP { DIP 2 { DUP } ; DIG 2 } ;
             EXEC ;
             DIP { DUP } ;
             SWAP ;
             DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
             PAIR ;
             DUP ;
             CDR ;
             DIP { DUP } ;
             SWAP ;
             CAR ;
             IF_LEFT
               { DUP ;
                 DIP { DIP { DUP } ; SWAP } ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIP { DUP } ;
                 SWAP ;
                 CDR ;
                 DIP { DUP } ;
                 SWAP ;
                 MAP { DUP ;
                       CAR ;
                       DIP { DUP ; CDR ; SOME } ;
                       PAIR ;
                       DIP { PUSH nat 0 ; NONE address ; PAIR } ;
                       PAIR ;
                       DIP { DROP } } ;
                 DUP ;
                 DIP { SELF ; ADDRESS } ;
                 PAIR ;
                 SENDER ;
                 SWAP ;
                 PAIR ;
                 DIP { DROP } ;
                 DUP ;
                 CAR ;
                 CAR ;
                 DIP { DIP { DUP } ; SWAP ; CAR ; CAR ; CAR } ;
                 PAIR ;
                 DIP { DIP 14 { DUP } ; DIG 14 } ;
                 EXEC ;
                 DIP 3 { DUP } ;
                 DIG 3 ;
                 DIP { DIP 12 { DUP } ; DIG 12 } ;
                 EXEC ;
                 DIP 3 { DUP } ;
                 DIG 3 ;
                 CDR ;
                 DIP { DUP } ;
                 SUB ;
                 ISNAT ;
                 DUP ;
                 IF_NONE
                   { PUSH string "INSUFFICIENT_BALANCE" ; FAILWITH }
                   { DUP ; DIP { DROP } } ;
                 DIP 5 { DUP } ;
                 DIG 5 ;
                 DIP 4 { DUP } ;
                 DIG 4 ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 CAR ;
                 DIP { DUP } ;
                 PAIR ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 9 } }
               { DUP ;
                 DIP { DIP { DUP } ; SWAP } ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIP { DUP } ;
                 SWAP ;
                 CDR ;
                 DIP { DUP } ;
                 SWAP ;
                 MAP { DUP ;
                       CAR ;
                       NONE address ;
                       SWAP ;
                       PAIR ;
                       DIP { DUP ; CDR ; SOME ; PUSH nat 0 ; SWAP ; PAIR } ;
                       PAIR ;
                       DIP { DROP } } ;
                 DUP ;
                 DIP { SELF ; ADDRESS } ;
                 PAIR ;
                 SENDER ;
                 SWAP ;
                 PAIR ;
                 DIP { DROP } ;
                 DUP ;
                 CAR ;
                 CAR ;
                 DIP { DIP { DUP } ; SWAP ; CAR ; CAR ; CAR } ;
                 PAIR ;
                 DIP { DIP 14 { DUP } ; DIG 14 } ;
                 EXEC ;
                 DIP 3 { DUP } ;
                 DIG 3 ;
                 DIP { DIP 12 { DUP } ; DIG 12 } ;
                 EXEC ;
                 DIP 3 { DUP } ;
                 DIG 3 ;
                 DIP 2 { DUP } ;
                 DIG 2 ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIP 4 { DUP } ;
                 DIG 4 ;
                 CDR ;
                 DIP { DIP { DUP } ; SWAP } ;
                 ADD ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DUP ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 8 } } ;
             DIP { DROP 2 } ;
             DUP ;
             CAR ;
             DIP { DIP 3 { DUP } ;
                   DIG 3 ;
                   DIP { DUP } ;
                   SWAP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   PAIR } ;
             PAIR ;
             DIP { DROP 3 } } ;
         DIP { DROP 8 } } }

