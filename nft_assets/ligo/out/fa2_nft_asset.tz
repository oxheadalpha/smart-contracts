{ parameter
    (or (or (or %admin (or (unit %confirm_admin) (bool %pause)) (address %set_admin))
            (or %assets
               (or %fa2
                  (or (pair %balance_of
                         (list %requests (pair (address %owner) (nat %token_id)))
                         (contract %callback
                            (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                      (contract %token_metadata_registry address))
                  (or (list %transfer
                         (pair (address %from_)
                               (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                      (list %update_operators
                         (or (pair %add_operator (address %owner) (address %operator))
                             (pair %remove_operator (address %owner) (address %operator))))))
               (pair %metadata
                  (list %token_ids nat)
                  (contract %callback
                     (list (pair (nat %token_id)
                                 (pair (string %symbol)
                                       (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))))
        (or %tokens
           (pair %burn_tokens (nat %from_) (nat %to_))
           (pair %mint_tokens
              (pair (pair %metadata
                       (pair (pair (nat %decimals) (map %extras string string))
                             (pair (string %name) (string %symbol)))
                       (nat %token_id))
                    (list %owners address))
              (pair %token_def (nat %from_) (nat %to_))))) ;
  storage
    (pair (pair %admin (pair (address %admin) (bool %paused)) (option %pending_admin address))
          (pair %assets
             (pair (big_map %ledger nat address)
                   (pair %metadata
                      (pair (nat %last_used_id)
                            (big_map %metadata
                               (pair nat nat)
                               (pair (pair (pair (nat %decimals) (map %extras string string))
                                           (pair (string %name) (string %symbol)))
                                     (nat %token_id))))
                      (set %token_defs (pair nat nat))))
             (big_map %operators (pair address address) unit))) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
         LAMBDA
           (pair (address %owner) (address %operator))
           (pair (address %operator) (address %owner))
           { DUP ; CAR ; DIG 1 ; DUP ; DUG 2 ; CDR ; PAIR ; DIP { DROP } } ;
         LAMBDA
           (pair (pair (address %admin) (bool %paused)) (option %pending_admin address))
           unit
           { DUP ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } ;
             DIP { DROP } } ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CDR ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         IF_NONE
                           { PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                           { DUP ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF { DIG 3 ;
                                  DUP ;
                                  DUG 4 ;
                                  CAR ;
                                  NONE address ;
                                  SWAP ;
                                  PAIR ;
                                  DUP ;
                                  CDR ;
                                  SWAP ;
                                  CAR ;
                                  CDR ;
                                  SENDER ;
                                  PAIR ;
                                  PAIR }
                                { PUSH string "NOT_AN_ADMIN" ; FAILWITH } ;
                             DIP { DROP } } ;
                         DUP ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP 2 } }
                       { DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         SWAP ;
                         EXEC ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DIP { DROP } ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP 2 } } ;
                     DIP { DROP } }
                   { DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SOME ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DIP { DROP } ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 2 } } ;
                 DIP { DROP 2 } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 PAIR ;
                 DIP { DROP 2 } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 IF { PUSH string "PAUSED" ; FAILWITH } { UNIT } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 IF_LEFT
                   { DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     IF_LEFT
                       { DUP ;
                         IF_LEFT
                           { DUP ;
                             CAR ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             MAP { DUP ; DIP { DROP } } ;
                             DUP ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             PAIR ;
                             DIP { DROP 2 } ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CAR ;
                             CAR ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             MAP { DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CDR ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE
                                     { DIG 18 ; DUP ; DUG 19 ; FAILWITH }
                                     { DIG 1 ;
                                       DUP ;
                                       DUG 2 ;
                                       DIG 2 ;
                                       DUP ;
                                       DUG 3 ;
                                       CAR ;
                                       DIG 2 ;
                                       DUP ;
                                       DUG 3 ;
                                       COMPARE ;
                                       EQ ;
                                       IF { PUSH nat 1 } { PUSH nat 0 } ;
                                       PAIR ;
                                       DIP { DROP } } ;
                                   DUP ;
                                   CDR ;
                                   CDR ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   CAR ;
                                   PAIR ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   PAIR ;
                                   DUP ;
                                   CAR ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   PAIR ;
                                   DIP { DROP 3 } } ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             PUSH mutez 0 ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             TRANSFER_TOKENS ;
                             DIP { DROP 3 } ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             NIL operation ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CONS ;
                             PAIR ;
                             DIP { DROP 3 } }
                           { DUP ;
                             PUSH mutez 0 ;
                             SELF ;
                             ADDRESS ;
                             TRANSFER_TOKENS ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             NIL operation ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CONS ;
                             PAIR ;
                             DIP { DROP 2 } } ;
                         DIP { DROP } }
                       { DUP ;
                         IF_LEFT
                           { DUP ;
                             MAP { DUP ;
                                   CDR ;
                                   MAP { DUP ;
                                         CDR ;
                                         CAR ;
                                         DIG 1 ;
                                         DUP ;
                                         DUG 2 ;
                                         CAR ;
                                         DIG 2 ;
                                         DUP ;
                                         DUG 3 ;
                                         CDR ;
                                         CDR ;
                                         PAIR ;
                                         PAIR ;
                                         DIP { DROP } } ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   PAIR ;
                                   DIP { DROP } } ;
                             SENDER ;
                             DUP ;
                             LAMBDA
                               (pair address (pair address (big_map (pair address address) unit)))
                               unit
                               { DUP ;
                                 CAR ;
                                 SWAP ;
                                 CDR ;
                                 DUP ;
                                 CAR ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 DIG 1 ;
                                 DUP ;
                                 DUG 2 ;
                                 COMPARE ;
                                 EQ ;
                                 IF { UNIT }
                                    { DIG 1 ;
                                      DUP ;
                                      DUG 2 ;
                                      CDR ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      PAIR ;
                                      MEM ;
                                      IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } ;
                                 DIP { DROP 3 } } ;
                             SWAP ;
                             APPLY ;
                             DIP { DROP } ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             CAR ;
                             CAR ;
                             DIG 5 ;
                             DUP ;
                             DUG 6 ;
                             CDR ;
                             PAIR ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             CDR ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             ITER { SWAP ;
                                    PAIR ;
                                    DUP ;
                                    CDR ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CDR ;
                                    CAR ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    PAIR ;
                                    DIG 3 ;
                                    DUP ;
                                    DUG 4 ;
                                    CAR ;
                                    CDR ;
                                    SWAP ;
                                    EXEC ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CAR ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CDR ;
                                    ITER { SWAP ;
                                           PAIR ;
                                           DUP ;
                                           CAR ;
                                           DIG 1 ;
                                           DUP ;
                                           DUG 2 ;
                                           CDR ;
                                           PUSH nat 0 ;
                                           DIG 1 ;
                                           DUP ;
                                           DUG 2 ;
                                           CAR ;
                                           CAR ;
                                           COMPARE ;
                                           EQ ;
                                           IF { DIG 1 ; DUP ; DUG 2 }
                                              { PUSH nat 1 ;
                                                DIG 1 ;
                                                DUP ;
                                                DUG 2 ;
                                                CAR ;
                                                CAR ;
                                                COMPARE ;
                                                NEQ ;
                                                IF { DIG 22 ; DUP ; DUG 23 ; FAILWITH }
                                                   { DIG 1 ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     DIG 1 ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     CDR ;
                                                     GET ;
                                                     IF_NONE
                                                       { DIG 23 ; DUP ; DUG 24 ; FAILWITH }
                                                       { DIG 5 ;
                                                         DUP ;
                                                         DUG 6 ;
                                                         CAR ;
                                                         DIG 1 ;
                                                         DUP ;
                                                         DUG 2 ;
                                                         COMPARE ;
                                                         NEQ ;
                                                         IF { DIG 23 ; DUP ; DUG 24 ; FAILWITH }
                                                            { DIG 2 ;
                                                              DUP ;
                                                              DUG 3 ;
                                                              DIG 2 ;
                                                              DUP ;
                                                              DUG 3 ;
                                                              CAR ;
                                                              CDR ;
                                                              SOME ;
                                                              DIG 3 ;
                                                              DUP ;
                                                              DUG 4 ;
                                                              CDR ;
                                                              UPDATE } ;
                                                         DIP { DROP } } } } ;
                                           DIP { DROP 3 } } ;
                                    DIP { DROP 3 } } ;
                             DIP { DROP } ;
                             DIG 5 ;
                             DUP ;
                             DUG 6 ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR ;
                             DIP { DROP 4 } }
                           { DUP ;
                             MAP { DUP ;
                                   IF_LEFT
                                     { DUP ; LEFT (pair (address %owner) (address %operator)) ; DIP { DROP } }
                                     { DUP ; RIGHT (pair (address %owner) (address %operator)) ; DIP { DROP } } ;
                                   DUP ;
                                   IF_LEFT
                                     { DUP ;
                                       DIG 16 ;
                                       DUP ;
                                       DUG 17 ;
                                       SWAP ;
                                       EXEC ;
                                       LEFT (pair (address %operator) (address %owner)) ;
                                       DIP { DROP } }
                                     { DUP ;
                                       DIG 16 ;
                                       DUP ;
                                       DUG 17 ;
                                       SWAP ;
                                       EXEC ;
                                       RIGHT (pair (address %operator) (address %owner)) ;
                                       DIP { DROP } } ;
                                   DIP { DROP 2 } } ;
                             SENDER ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             CDR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             ITER { SWAP ;
                                    PAIR ;
                                    DUP ;
                                    CDR ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    PAIR ;
                                    DUP ;
                                    CDR ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    IF_LEFT { DUP ; DIP { DROP } } { DUP ; DIP { DROP } } ;
                                    CDR ;
                                    COMPARE ;
                                    EQ ;
                                    IF { UNIT } { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                    DIP { DROP } ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CAR ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    PAIR ;
                                    DUP ;
                                    CDR ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    IF_LEFT
                                      { DIG 1 ;
                                        DUP ;
                                        DUG 2 ;
                                        UNIT ;
                                        SOME ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CAR ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CDR ;
                                        PAIR ;
                                        UPDATE ;
                                        DIP { DROP } }
                                      { DIG 1 ;
                                        DUP ;
                                        DUG 2 ;
                                        DIG 1 ;
                                        DUP ;
                                        DUG 2 ;
                                        CAR ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CDR ;
                                        PAIR ;
                                        NONE unit ;
                                        SWAP ;
                                        UPDATE ;
                                        DIP { DROP } } ;
                                    DIP { DROP 5 } } ;
                             DIG 5 ;
                             DUP ;
                             DUG 6 ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             NIL operation ;
                             PAIR ;
                             DIP { DROP 4 } } ;
                         DIP { DROP } } ;
                     DIP { DROP 3 } }
                   { DUP ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     PAIR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     MAP { DIG 1 ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           DIG 1 ;
                           DUP ;
                           DUG 2 ;
                           PAIR ;
                           DUP ;
                           CAR ;
                           NONE (pair (nat %from_) (nat %to_)) ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CDR ;
                           ITER { SWAP ;
                                  PAIR ;
                                  DUP ;
                                  CAR ;
                                  DIG 1 ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  DIG 1 ;
                                  DUP ;
                                  DUG 2 ;
                                  IF_NONE
                                    { DUP ;
                                      CDR ;
                                      DIG 4 ;
                                      DUP ;
                                      DUG 5 ;
                                      COMPARE ;
                                      LT ;
                                      DIG 1 ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      DIG 5 ;
                                      DUP ;
                                      DUG 6 ;
                                      COMPARE ;
                                      GE ;
                                      AND ;
                                      IF { DUP ; SOME } { NONE (pair (nat %from_) (nat %to_)) } }
                                    { DIG 2 ; DUP ; DUG 3 ; DIP { DROP } } ;
                                  DIP { DROP 3 } } ;
                           DUP ;
                           IF_NONE { DIG 17 ; DUP ; DUG 18 ; FAILWITH } { DUP ; DIP { DROP } } ;
                           DIP { DROP 3 } ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CAR ;
                           CDR ;
                           DIG 1 ;
                           DUP ;
                           DUG 2 ;
                           GET ;
                           IF_NONE
                             { PUSH string "NO_DATA" ; FAILWITH }
                             { DUP ; DIG 3 ; DUP ; DUG 4 ; SWAP ; CAR ; PAIR ; DIP { DROP } } ;
                           DIP { DROP 2 } } ;
                     DIP { DROP 2 } ;
                     DUP ;
                     MAP { DUP ;
                           CAR ;
                           CAR ;
                           CDR ;
                           DIG 1 ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           DIG 1 ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           PAIR ;
                           DIG 1 ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           PAIR ;
                           DIG 1 ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           PAIR ;
                           DIP { DROP } } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     TRANSFER_TOKENS ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CONS ;
                     PAIR ;
                     DIP { DROP 5 } } ;
                 DIP { DROP 2 } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 PAIR ;
                 DIP { DROP 3 } } ;
             DIP { DROP } }
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PAIR ;
             DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             IF_LEFT
               { DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 MEM ;
                 NOT ;
                 IF { PUSH string "INVALID_PARAM" ; FAILWITH }
                    { DUP ;
                      CAR ;
                      CDR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      PUSH bool False ;
                      SWAP ;
                      UPDATE ;
                      SWAP ;
                      CAR ;
                      PAIR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      CDR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      NONE (pair (pair (pair (nat %decimals) (map %extras string string))
                                       (pair (string %name) (string %symbol)))
                                 (nat %token_id)) ;
                      SWAP ;
                      UPDATE ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CAR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      LEFT (pair (pair (nat %from_) (big_map %ledger nat address)) (nat %to_)) ;
                      LOOP_LEFT
                        { DUP ;
                          CDR ;
                          DIG 1 ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          COMPARE ;
                          EQ ;
                          IF { DUP ; RIGHT (pair (pair (nat %from_) (big_map %ledger nat address)) (nat %to_)) }
                             { DUP ;
                               CDR ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               CDR ;
                               DIG 2 ;
                               DUP ;
                               DUG 3 ;
                               CAR ;
                               CAR ;
                               NONE address ;
                               SWAP ;
                               UPDATE ;
                               PUSH nat 1 ;
                               DIG 3 ;
                               DUP ;
                               DUG 4 ;
                               CAR ;
                               CAR ;
                               ADD ;
                               PAIR ;
                               PAIR ;
                               DUP ;
                               LEFT (pair (pair (nat %from_) (big_map %ledger nat address)) (nat %to_)) ;
                               DIP { DROP } } ;
                          DIP { DROP } } ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                      PAIR ;
                      PAIR ;
                      DIP { DROP 2 } } ;
                 DIP { DROP 4 } }
               { DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 SUB ;
                 ISNAT ;
                 DUP ;
                 IF_NONE
                   { PUSH string "INVALID_PARAM" ; FAILWITH }
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     SIZE ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "INVALID_PARAM" ; FAILWITH } { UNIT } ;
                     DIP { DROP } } ;
                 DIP { DROP } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 COMPARE ;
                 GT ;
                 IF { PUSH string "INVALID_PARAM" ; FAILWITH }
                    { DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CAR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CDR ;
                      PAIR ;
                      NIL (pair address nat) ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      PAIR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      ITER { SWAP ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CDR ;
                             PAIR ;
                             CONS ;
                             PUSH nat 1 ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             ADD ;
                             PAIR ;
                             DIP { DROP 2 } } ;
                      DUP ;
                      CDR ;
                      DIP { DROP 2 } ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CAR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      ITER { SWAP ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             DIP { DROP 2 } } ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CDR ;
                      PUSH bool True ;
                      SWAP ;
                      UPDATE ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      CDR ;
                      DIG 7 ;
                      DUP ;
                      DUG 8 ;
                      CAR ;
                      CAR ;
                      DIG 8 ;
                      DUP ;
                      DUG 9 ;
                      CDR ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      DIG 7 ;
                      DUP ;
                      DUG 8 ;
                      CDR ;
                      CDR ;
                      PAIR ;
                      PAIR ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                      PAIR ;
                      PAIR ;
                      DIP { DROP 2 } } ;
                 DIP { DROP 5 } } ;
             DUP ;
             NIL operation ;
             PAIR ;
             DIP { DROP 3 } ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             CAR ;
             PAIR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             PAIR ;
             DIP { DROP 3 } } ;
         DIP { DROP 6 } } }

