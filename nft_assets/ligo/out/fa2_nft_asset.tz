{ parameter
    (or (or (or %admin (or (unit %confirm_admin) (bool %pause)) (address %set_admin))
            (or %assets
               (or %fa2
                  (or (pair %balance_of
                         (list %requests (pair (address %owner) (nat %token_id)))
                         (contract %callback
                            (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                      (contract %token_metadata_registry address))
                  (or (list %transfer
                         (pair (address %from_)
                               (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                      (list %update_operators
                         (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                             (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))))
               (pair %metadata
                  (list %token_ids nat)
                  (lambda %handler
                     (list (pair (nat %token_id)
                                 (pair (string %symbol)
                                       (pair (string %name) (pair (nat %decimals) (map %extras string string))))))
                     unit))))
        (or %tokens
           (pair %burn_tokens (nat %from_) (nat %to_))
           (pair %mint_tokens
              (pair %token_def (nat %from_) (nat %to_))
              (pair (pair %metadata
                       (nat %token_id)
                       (pair (string %symbol)
                             (pair (string %name) (pair (nat %decimals) (map %extras string string)))))
                    (list %owners address))))) ;
  storage
    (pair (pair %admin (pair (address %admin) (bool %paused)) (option %pending_admin address))
          (pair %assets
             (pair (big_map %ledger nat address)
                   (pair %metadata
                      (pair (big_map %metadata
                               (pair (nat %from_) (nat %to_))
                               (pair (nat %token_id)
                                     (pair (string %symbol)
                                           (pair (string %name) (pair (nat %decimals) (map %extras string string))))))
                            (nat %next_token_id))
                      (set %token_defs (pair (nat %from_) (nat %to_)))))
             (big_map %operators (pair address (pair address nat)) unit))) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
         LAMBDA
           (pair (pair address bool) (option address))
           unit
           { CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } } ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CDR ;
         DIG 4 ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 SWAP ;
                 IF_LEFT
                   { IF_LEFT
                       { DIG 3 ;
                         DROP 2 ;
                         DUP ;
                         CDR ;
                         IF_NONE
                           { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                           { SENDER ;
                             COMPARE ;
                             EQ ;
                             IF { CAR ; NONE address ; SWAP ; CDR ; SENDER ; PAIR ; PAIR }
                                { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } ;
                         NIL operation ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SOME ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR }
               { DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 IF { PUSH string "PAUSED" ; FAILWITH } { UNIT } ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 IF_LEFT
                   { IF_LEFT
                       { DIG 3 ;
                         DROP ;
                         IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             SWAP ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             DUP ;
                             CAR ;
                             MAP { DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE
                                     { DROP ; DIG 4 ; DUP ; DUG 5 ; FAILWITH }
                                     { SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CAR ;
                                       SWAP ;
                                       COMPARE ;
                                       EQ ;
                                       IF { PUSH nat 1 } { PUSH nat 0 } ;
                                       SWAP ;
                                       PAIR } } ;
                             DIG 2 ;
                             DROP ;
                             DIG 4 ;
                             DROP ;
                             SWAP ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 2 ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             NIL operation ;
                             DIG 2 ;
                             CONS ;
                             PAIR }
                           { DIG 3 ;
                             DROP ;
                             PUSH mutez 0 ;
                             SELF ;
                             ADDRESS ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             NIL operation ;
                             DIG 2 ;
                             CONS ;
                             PAIR } }
                       { IF_LEFT
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             PAIR ;
                             LAMBDA
                               (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                               unit
                               { DUP ;
                                 CAR ;
                                 CAR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 CDR ;
                                 DUP ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 COMPARE ;
                                 EQ ;
                                 IF { DROP 3 ; UNIT }
                                    { DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      CDR ;
                                      CDR ;
                                      DIG 3 ;
                                      CDR ;
                                      CAR ;
                                      DIG 2 ;
                                      PAIR ;
                                      DIG 2 ;
                                      PAIR ;
                                      MEM ;
                                      IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } } ;
                             DIG 2 ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CAR ;
                             ITER { DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    ITER { PUSH nat 0 ;
                                           SWAP ;
                                           DUP ;
                                           DUG 2 ;
                                           CDR ;
                                           CDR ;
                                           COMPARE ;
                                           EQ ;
                                           IF { DROP }
                                              { PUSH nat 1 ;
                                                SWAP ;
                                                DUP ;
                                                DUG 2 ;
                                                CDR ;
                                                CDR ;
                                                COMPARE ;
                                                NEQ ;
                                                IF { DROP 2 ; DIG 4 ; DUP ; DUG 5 ; FAILWITH }
                                                   { SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     CDR ;
                                                     CAR ;
                                                     GET ;
                                                     IF_NONE
                                                       { DROP 2 ; DIG 5 ; DUP ; DUG 6 ; FAILWITH }
                                                       { DIG 3 ;
                                                         DUP ;
                                                         DUG 4 ;
                                                         CAR ;
                                                         SWAP ;
                                                         DUP ;
                                                         DUG 2 ;
                                                         COMPARE ;
                                                         NEQ ;
                                                         IF { DROP 3 ; DIG 4 ; DUP ; DUG 5 ; FAILWITH }
                                                            { DIG 4 ;
                                                              DUP ;
                                                              DUG 5 ;
                                                              CDR ;
                                                              CAR ;
                                                              DIG 2 ;
                                                              DUP ;
                                                              DUG 3 ;
                                                              CDR ;
                                                              CAR ;
                                                              PAIR ;
                                                              SENDER ;
                                                              DIG 2 ;
                                                              PAIR ;
                                                              PAIR ;
                                                              DIG 4 ;
                                                              DUP ;
                                                              DUG 5 ;
                                                              CAR ;
                                                              CDR ;
                                                              SWAP ;
                                                              EXEC ;
                                                              DROP ;
                                                              DUP ;
                                                              DUG 2 ;
                                                              CAR ;
                                                              SOME ;
                                                              DIG 2 ;
                                                              CDR ;
                                                              CAR ;
                                                              UPDATE } } } } } ;
                                    SWAP ;
                                    DROP } ;
                             SWAP ;
                             DROP ;
                             DIG 3 ;
                             DROP ;
                             DIG 3 ;
                             DROP ;
                             DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR }
                           { DIG 3 ;
                             DROP ;
                             DIG 3 ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             SWAP ;
                             PAIR ;
                             SENDER ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             DIG 2 ;
                             CAR ;
                             ITER { SWAP ;
                                    PAIR ;
                                    DUP ;
                                    CDR ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    IF_LEFT {} {} ;
                                    CAR ;
                                    COMPARE ;
                                    EQ ;
                                    IF { UNIT } { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                    DROP ;
                                    SWAP ;
                                    CAR ;
                                    SWAP ;
                                    IF_LEFT
                                      { SWAP ;
                                        UNIT ;
                                        SOME ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CDR ;
                                        CDR ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DIG 3 ;
                                        CAR ;
                                        PAIR ;
                                        UPDATE }
                                      { DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        CDR ;
                                        CAR ;
                                        PAIR ;
                                        DIG 2 ;
                                        CAR ;
                                        PAIR ;
                                        NONE unit ;
                                        SWAP ;
                                        UPDATE } } ;
                             SWAP ;
                             DROP ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } } }
                   { DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     MAP { SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           PAIR ;
                           DUP ;
                           CAR ;
                           NONE (pair nat nat) ;
                           DIG 2 ;
                           CDR ;
                           ITER { SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  IF_NONE
                                    { SWAP ;
                                      DROP ;
                                      DUP ;
                                      CDR ;
                                      DIG 2 ;
                                      DUP ;
                                      DUG 3 ;
                                      COMPARE ;
                                      LT ;
                                      SWAP ;
                                      DUP ;
                                      DUG 2 ;
                                      CAR ;
                                      DIG 3 ;
                                      DUP ;
                                      DUG 4 ;
                                      COMPARE ;
                                      GE ;
                                      AND ;
                                      IF { SOME } { DROP ; NONE (pair nat nat) } }
                                    { SWAP ; DROP 2 } } ;
                           SWAP ;
                           DROP ;
                           IF_NONE { DIG 5 ; DUP ; DUG 6 ; FAILWITH } {} ;
                           DIG 2 ;
                           DUP ;
                           DUG 3 ;
                           CAR ;
                           CAR ;
                           SWAP ;
                           GET ;
                           IF_NONE { DROP ; PUSH string "NO_DATA" ; FAILWITH } { CDR ; SWAP ; PAIR } } ;
                     SWAP ;
                     DROP ;
                     DIG 4 ;
                     DROP ;
                     SWAP ;
                     CDR ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     NIL operation ;
                     PAIR } ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR } }
           { DIG 3 ;
             DROP ;
             DIG 3 ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 MEM ;
                 NOT ;
                 IF { DROP 2 ; PUSH string "INVALID_PARAM" ; FAILWITH }
                    { DUP ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CAR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      LEFT (pair (pair nat (big_map nat address)) nat) ;
                      LOOP_LEFT
                        { DUP ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          COMPARE ;
                          EQ ;
                          IF { RIGHT (pair (pair nat (big_map nat address)) nat) }
                             { DUP ;
                               CDR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               CDR ;
                               DIG 2 ;
                               DUP ;
                               DUG 3 ;
                               CAR ;
                               CAR ;
                               NONE address ;
                               SWAP ;
                               UPDATE ;
                               PUSH nat 1 ;
                               DIG 3 ;
                               CAR ;
                               CAR ;
                               ADD ;
                               PAIR ;
                               PAIR ;
                               LEFT (pair (pair nat (big_map nat address)) nat) } } ;
                      DIG 2 ;
                      DUP ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CDR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      PUSH bool False ;
                      SWAP ;
                      UPDATE ;
                      SWAP ;
                      CAR ;
                      PAIR ;
                      DIG 4 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      CAR ;
                      DIG 4 ;
                      NONE (pair nat (pair string (pair string (pair nat (map string string))))) ;
                      SWAP ;
                      UPDATE ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                      PAIR ;
                      PAIR ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      SWAP ;
                      CAR ;
                      CDR ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                      PAIR ;
                      PAIR } }
               { DUP ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 SUB ;
                 ISNAT ;
                 IF_NONE
                   { PUSH string "EMPTY_TOKEN_DEF_RANGE" ; FAILWITH }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     SIZE ;
                     SWAP ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "INVALID_OWNERS_LENGTH" ; FAILWITH } { UNIT } } ;
                 DROP ;
                 DUP ;
                 CAR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 CDR ;
                 COMPARE ;
                 GT ;
                 IF { DROP 2 ; PUSH string "USED_TOKEN_IDS" ; FAILWITH }
                    { DUP ;
                      CAR ;
                      CAR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      CDR ;
                      PAIR ;
                      NIL (pair address nat) ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      PAIR ;
                      SWAP ;
                      CAR ;
                      ITER { SWAP ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             DIG 3 ;
                             CDR ;
                             PAIR ;
                             CONS ;
                             PUSH nat 1 ;
                             DIG 2 ;
                             CAR ;
                             ADD ;
                             PAIR } ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CAR ;
                      SWAP ;
                      ITER { DUP ; DUG 2 ; CAR ; DIG 2 ; CDR ; SWAP ; SOME ; SWAP ; UPDATE } ;
                      DIG 2 ;
                      DUP ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      PUSH bool True ;
                      SWAP ;
                      UPDATE ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CDR ;
                      DIG 5 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      CAR ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CDR ;
                      CAR ;
                      DIG 6 ;
                      CAR ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      PAIR ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      SWAP ;
                      DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                      PAIR ;
                      PAIR } } ;
             NIL operation ;
             PAIR ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             CAR ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR } } }

