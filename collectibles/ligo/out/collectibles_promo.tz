{ parameter
    (or (or (unit %disburse_collectibles) (unit %refund_money))
        (or (unit %stop_promotion)
            (pair %tokens_received
               (list %batch
                  (pair (option %from_ address)
                        (list %txs (pair (option %to_ address) (pair (nat %token_id) (nat %amount))))))
               (address %operator)))) ;
  storage
    (or (or (pair %finished
               (pair (map %allocated_collectibles address (list nat))
                     (pair %def
                        (pair (address %collectible_fa2) (pair %money_token (address %fa2) (nat %id)))
                        (pair (nat %price) (address %promoter))))
               (map %money_deposits address nat))
            (pair %in_progress
               (pair (map %allocated_collectibles address (list nat)) (list %collectibles nat))
               (pair (pair %def
                        (pair (address %collectible_fa2) (pair %money_token (address %fa2) (nat %id)))
                        (pair (nat %price) (address %promoter)))
                     (map %money_deposits address nat))))
        (pair %initial
           (pair (address %collectible_fa2) (pair %money_token (address %fa2) (nat %id)))
           (pair (nat %price) (address %promoter)))) ;
  code { LAMBDA
           (pair (list (pair (option address) (pair nat nat))) address)
           unit
           { UNPAIR ;
             ITER { PUSH nat 0 ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    CDR ;
                    COMPARE ;
                    EQ ;
                    IF { DROP ; UNIT }
                       { CAR ;
                         IF_NONE
                           { UNIT }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             SWAP ;
                             COMPARE ;
                             EQ ;
                             IF { PUSH string "CANNOT_ACCEPT_TOKENS" ; FAILWITH } { UNIT } } } ;
                    DROP } ;
             DROP ;
             UNIT } ;
         LAMBDA
           (pair (pair (map address (list nat)) address) (pair address address))
           (pair (list operation) (map address (list nat)))
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DUP 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE
               { DROP 2 ; SWAP ; DROP ; NIL operation ; PAIR }
               { MAP { PUSH nat 1 ; SWAP ; PAIR ; SWAP ; DUP ; DUG 2 ; PAIR } ;
                 DIG 4 ;
                 CONTRACT %transfer
                   (list (pair (address %from_)
                               (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                 IF_NONE
                   { DROP ;
                     SWAP ;
                     DROP ;
                     PUSH string "CANNOT_INVOKE_COLLECTIBLE_FA2" ;
                     FAILWITH }
                   { PUSH mutez 0 ;
                     NIL (pair address (list (pair address (pair nat nat)))) ;
                     DIG 3 ;
                     DIG 5 ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS } ;
                 DUG 2 ;
                 NONE (list nat) ;
                 SWAP ;
                 UPDATE ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR } } ;
         LAMBDA
           (pair (pair (map address nat) (pair address nat)) (pair address address))
           (pair (list operation) (map address nat))
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DUP 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET ;
             IF_NONE
               { DROP 2 ; SWAP ; DROP ; NIL operation ; PAIR }
               { DUP 5 ;
                 CAR ;
                 CONTRACT %transfer
                   (list (pair (address %from_)
                               (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                 IF_NONE
                   { DROP ;
                     SWAP ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     PUSH string "CANNOT_INVOKE_MONEY_FA2" ;
                     FAILWITH }
                   { PUSH mutez 0 ;
                     NIL (pair address (list (pair address (pair nat nat)))) ;
                     NIL (pair address (pair nat nat)) ;
                     DIG 4 ;
                     DIG 8 ;
                     CDR ;
                     PAIR ;
                     DUP 6 ;
                     PAIR ;
                     CONS ;
                     DIG 5 ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS } ;
                 DUG 2 ;
                 NONE nat ;
                 SWAP ;
                 UPDATE ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR } } ;
         LAMBDA
           (pair address address)
           unit
           { UNPAIR ;
             COMPARE ;
             EQ ;
             IF { UNIT } { PUSH string "NOT_PROMOTER" ; FAILWITH } } ;
         DIG 4 ;
         UNPAIR ;
         IF_LEFT
           { DIG 2 ;
             DROP ;
             DIG 4 ;
             DROP ;
             IF_LEFT
               { DROP ;
                 SWAP ;
                 DROP ;
                 IF_LEFT
                   { IF_LEFT
                       { SELF_ADDRESS ;
                         SENDER ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         UNPAIR ;
                         DUP 3 ;
                         CDR ;
                         DIG 3 ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         LEFT (pair (pair (map address (list nat)) (list nat))
                                    (pair (pair (pair address (pair address nat)) (pair nat address)) (map address nat))) ;
                         LEFT (pair (pair address (pair address nat)) (pair nat address)) ;
                         SWAP ;
                         PAIR }
                       { SELF_ADDRESS ;
                         SENDER ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         UNPAIR ;
                         DUP 3 ;
                         CDR ;
                         DIG 3 ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         RIGHT
                           (pair (pair (map address (list nat)) (pair (pair address (pair address nat)) (pair nat address)))
                                 (map address nat)) ;
                         LEFT (pair (pair address (pair address nat)) (pair nat address)) ;
                         SWAP ;
                         PAIR } }
                   { DROP 2 ; PUSH string "PROMO_NOT_STARTED" ; FAILWITH } }
               { DROP ;
                 DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { IF_LEFT
                       { SELF_ADDRESS ;
                         SENDER ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CDR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         UNPAIR ;
                         SWAP ;
                         DIG 2 ;
                         CAR ;
                         PAIR ;
                         LEFT (pair (pair (map address (list nat)) (list nat))
                                    (pair (pair (pair address (pair address nat)) (pair nat address)) (map address nat))) ;
                         LEFT (pair (pair address (pair address nat)) (pair nat address)) ;
                         SWAP ;
                         PAIR }
                       { SELF_ADDRESS ;
                         SENDER ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         UNPAIR ;
                         SWAP ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         PAIR ;
                         RIGHT
                           (pair (pair (map address (list nat)) (pair (pair address (pair address nat)) (pair nat address)))
                                 (map address nat)) ;
                         LEFT (pair (pair address (pair address nat)) (pair nat address)) ;
                         SWAP ;
                         PAIR } }
                   { DROP 2 ; PUSH string "PROMO_NOT_STARTED" ; FAILWITH } } }
           { DIG 3 ;
             DROP ;
             DIG 3 ;
             DROP ;
             IF_LEFT
               { DROP ;
                 DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { IF_LEFT
                       { DROP 2 ; PUSH string "PROMO_FINISHED" ; FAILWITH }
                       { SENDER ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         GET ;
                         IF_NONE
                           { DUP ; CAR ; CDR }
                           { SWAP ; DUP ; DUG 2 ; CAR ; CDR ; ITER { CONS } } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         DIG 3 ;
                         SOME ;
                         DIG 4 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         UPDATE ;
                         PAIR ;
                         PAIR ;
                         LEFT (pair (pair (map address (list nat)) (list nat))
                                    (pair (pair (pair address (pair address nat)) (pair nat address)) (map address nat))) ;
                         LEFT (pair (pair address (pair address nat)) (pair nat address)) } }
                   { SENDER ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     EMPTY_MAP address nat ;
                     SWAP ;
                     EMPTY_MAP address (list nat) ;
                     PAIR ;
                     PAIR ;
                     LEFT (pair (pair (map address (list nat)) (list nat))
                                (pair (pair (pair address (pair address nat)) (pair nat address)) (map address nat))) ;
                     LEFT (pair (pair address (pair address nat)) (pair nat address)) } ;
                 NIL operation ;
                 PAIR }
               { DIG 2 ;
                 DROP ;
                 SWAP ;
                 IF_LEFT
                   { IF_LEFT
                       { DROP 3 ; PUSH string "PROMO_FINISHED" ; FAILWITH }
                       { DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DROP 3 ; PUSH string "PROMO_MONEY_TOKENS_EXPECTED" ; FAILWITH }
                            { CAR ;
                              ITER { DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     IF_NONE
                                       { SELF_ADDRESS ; DIG 2 ; CDR ; PAIR ; DUP 3 ; SWAP ; EXEC ; DROP }
                                       { DIG 2 ;
                                         CDR ;
                                         DIG 2 ;
                                         SWAP ;
                                         ITER { DUP ;
                                                DUG 2 ;
                                                CAR ;
                                                IF_NONE
                                                  { SWAP ; DROP }
                                                  { SELF_ADDRESS ;
                                                    SWAP ;
                                                    COMPARE ;
                                                    NEQ ;
                                                    IF { SWAP ; DROP }
                                                       { DUP ;
                                                         CDR ;
                                                         CAR ;
                                                         CAR ;
                                                         CDR ;
                                                         CDR ;
                                                         DUP 3 ;
                                                         CDR ;
                                                         CAR ;
                                                         COMPARE ;
                                                         NEQ ;
                                                         IF { DROP 2 ; PUSH string "PROMO_MONEY_TOKENS_EXPECTED" ; FAILWITH }
                                                            { SWAP ;
                                                              CDR ;
                                                              CDR ;
                                                              DUP 3 ;
                                                              DUP 3 ;
                                                              CDR ;
                                                              CDR ;
                                                              SWAP ;
                                                              DUP ;
                                                              DUG 2 ;
                                                              GET ;
                                                              IF_NONE { SWAP } { DIG 2 ; ADD } ;
                                                              DUP 3 ;
                                                              CDR ;
                                                              CDR ;
                                                              DUP 4 ;
                                                              CDR ;
                                                              CAR ;
                                                              CDR ;
                                                              CDR ;
                                                              GET ;
                                                              IF_NONE { PUSH nat 0 } {} ;
                                                              DIG 3 ;
                                                              PAIR ;
                                                              SWAP ;
                                                              DIG 2 ;
                                                              PAIR ;
                                                              PAIR ;
                                                              LEFT (pair (pair address nat)
                                                                         (pair (pair (pair (map address (list nat)) (list nat))
                                                                                     (pair (pair (pair address (pair address nat)) (pair nat address)) (map address nat)))
                                                                               nat)) ;
                                                              LOOP_LEFT
                                                                { DUP ;
                                                                  CDR ;
                                                                  CAR ;
                                                                  CAR ;
                                                                  CDR ;
                                                                  IF_CONS
                                                                    { DUP 3 ;
                                                                      CDR ;
                                                                      CAR ;
                                                                      CDR ;
                                                                      CAR ;
                                                                      CDR ;
                                                                      CAR ;
                                                                      DUP 4 ;
                                                                      CAR ;
                                                                      CDR ;
                                                                      SUB ;
                                                                      ISNAT ;
                                                                      IF_NONE
                                                                        { DROP 2 ;
                                                                          RIGHT
                                                                            (pair (pair address nat)
                                                                                  (pair (pair (pair (map address (list nat)) (list nat))
                                                                                              (pair (pair (pair address (pair address nat)) (pair nat address)) (map address nat)))
                                                                                        nat)) }
                                                                        { DUP 4 ;
                                                                          CDR ;
                                                                          CAR ;
                                                                          CDR ;
                                                                          CAR ;
                                                                          CDR ;
                                                                          CAR ;
                                                                          DUP 5 ;
                                                                          CDR ;
                                                                          CDR ;
                                                                          ADD ;
                                                                          DUP 5 ;
                                                                          CDR ;
                                                                          CAR ;
                                                                          UNPAIR ;
                                                                          CDR ;
                                                                          DUP 7 ;
                                                                          CDR ;
                                                                          CAR ;
                                                                          CAR ;
                                                                          CAR ;
                                                                          DUP 8 ;
                                                                          CDR ;
                                                                          CAR ;
                                                                          CAR ;
                                                                          CAR ;
                                                                          DUP 9 ;
                                                                          CAR ;
                                                                          CAR ;
                                                                          GET ;
                                                                          IF_NONE { NIL nat ; DIG 6 ; CONS } { DIG 6 ; CONS } ;
                                                                          SOME ;
                                                                          DUP 8 ;
                                                                          CAR ;
                                                                          CAR ;
                                                                          UPDATE ;
                                                                          PAIR ;
                                                                          PAIR ;
                                                                          DUP ;
                                                                          CDR ;
                                                                          DIG 4 ;
                                                                          DIG 2 ;
                                                                          CAR ;
                                                                          CAR ;
                                                                          PAIR ;
                                                                          PAIR ;
                                                                          PAIR ;
                                                                          SWAP ;
                                                                          DIG 2 ;
                                                                          CAR ;
                                                                          CAR ;
                                                                          PAIR ;
                                                                          PAIR ;
                                                                          LEFT (pair (pair address nat)
                                                                                     (pair (pair (pair (map address (list nat)) (list nat))
                                                                                                 (pair (pair (pair address (pair address nat)) (pair nat address)) (map address nat)))
                                                                                           nat)) } }
                                                                    { RIGHT
                                                                        (pair (pair address nat)
                                                                              (pair (pair (pair (map address (list nat)) (list nat))
                                                                                          (pair (pair (pair address (pair address nat)) (pair nat address)) (map address nat)))
                                                                                    nat)) } } ;
                                                              DUP ;
                                                              CDR ;
                                                              CAR ;
                                                              SWAP ;
                                                              DUP ;
                                                              DUG 2 ;
                                                              CDR ;
                                                              CAR ;
                                                              CDR ;
                                                              CDR ;
                                                              DUP 3 ;
                                                              CAR ;
                                                              CDR ;
                                                              SOME ;
                                                              DUP 4 ;
                                                              CAR ;
                                                              CAR ;
                                                              UPDATE ;
                                                              DUP 3 ;
                                                              CDR ;
                                                              CDR ;
                                                              SOME ;
                                                              DIG 3 ;
                                                              CDR ;
                                                              CAR ;
                                                              CDR ;
                                                              CAR ;
                                                              CDR ;
                                                              CDR ;
                                                              UPDATE ;
                                                              SWAP ;
                                                              DUP ;
                                                              DUG 2 ;
                                                              CDR ;
                                                              CAR ;
                                                              PAIR ;
                                                              SWAP ;
                                                              CAR ;
                                                              PAIR } } } } ;
                                         SWAP ;
                                         DROP } } ;
                              SWAP ;
                              DROP ;
                              PUSH nat 0 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CDR ;
                              SIZE ;
                              COMPARE ;
                              EQ ;
                              IF { DUP ;
                                   CDR ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   CAR ;
                                   DIG 2 ;
                                   CAR ;
                                   CAR ;
                                   PAIR ;
                                   PAIR ;
                                   LEFT (pair (pair (map address (list nat)) (list nat))
                                              (pair (pair (pair address (pair address nat)) (pair nat address)) (map address nat))) ;
                                   LEFT (pair (pair address (pair address nat)) (pair nat address)) }
                                 { RIGHT
                                     (pair (pair (map address (list nat)) (pair (pair address (pair address nat)) (pair nat address)))
                                           (map address nat)) ;
                                   LEFT (pair (pair address (pair address nat)) (pair nat address)) } } } }
                   { DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { DROP 3 ; PUSH string "PROMO_COLLECTIBLES_EXPECTED" ; FAILWITH }
                        { NIL nat ;
                          SWAP ;
                          CAR ;
                          ITER { DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 IF_NONE
                                   { PUSH bool False }
                                   { DUP 4 ;
                                     CDR ;
                                     CDR ;
                                     SWAP ;
                                     COMPARE ;
                                     EQ ;
                                     IF { PUSH bool True } { PUSH bool False } } ;
                                 IF { NIL nat ;
                                      DIG 2 ;
                                      CDR ;
                                      ITER { SWAP ;
                                             PUSH nat 0 ;
                                             DUP 3 ;
                                             CDR ;
                                             CDR ;
                                             COMPARE ;
                                             EQ ;
                                             IF { SWAP ; DROP }
                                                { PUSH nat 1 ;
                                                  DUP 3 ;
                                                  CDR ;
                                                  CDR ;
                                                  COMPARE ;
                                                  GT ;
                                                  IF { DROP 2 ; PUSH string "NON_NFT_RECEIVED" ; FAILWITH }
                                                     { SWAP ;
                                                       DUP ;
                                                       DUG 2 ;
                                                       CAR ;
                                                       IF_NONE
                                                         { SWAP ; DROP }
                                                         { SELF_ADDRESS ;
                                                           SWAP ;
                                                           COMPARE ;
                                                           EQ ;
                                                           IF { SWAP ; CDR ; CAR ; CONS } { SWAP ; DROP } } } } } ;
                                      ITER { CONS } }
                                    { SELF_ADDRESS ; DIG 2 ; CDR ; PAIR ; DUP 4 ; SWAP ; EXEC ; DROP } } ;
                          DIG 2 ;
                          DROP ;
                          EMPTY_MAP address nat ;
                          DIG 2 ;
                          PAIR ;
                          SWAP ;
                          EMPTY_MAP address (list nat) ;
                          PAIR ;
                          PAIR ;
                          RIGHT
                            (pair (pair (map address (list nat)) (pair (pair address (pair address nat)) (pair nat address)))
                                  (map address nat)) ;
                          LEFT (pair (pair address (pair address nat)) (pair nat address)) } } ;
                 NIL operation ;
                 PAIR } } } }

