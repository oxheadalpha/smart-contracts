{ parameter
    (or (or %admin (or (unit %confirm_admin) (bool %pause)) (address %set_admin))
        (or %assets
           (or %fA2
              (or (pair %balance_of
                     (list %requests (pair (address %owner) (nat %token_id)))
                     (contract %callback
                        (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                  (contract %token_metadata_registry address))
              (or (list %transfer
                     (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                  (list %update_operators
                     (or (pair %add_operator (address %owner) (address %operator))
                         (pair %remove_operator (address %owner) (address %operator))))))
           (contract %permissions_descriptor
              (pair (or %operator
                       (unit %no_transfer)
                       (or (unit %owner_transfer) (unit %owner_or_operator_transfer)))
                    (pair (or %receiver
                             (unit %owner_no_hook)
                             (or (unit %optional_owner_hook) (unit %required_owner_hook)))
                          (pair (or %sender
                                   (unit %owner_no_hook)
                                   (or (unit %optional_owner_hook) (unit %required_owner_hook)))
                                (option %custom (pair (string %tag) (option %config_api address))))))))) ;
  storage
    (pair (pair %admin (pair (address %admin) (bool %paused)) (option %pending_admin address))
          (pair %assets
             (pair (big_map %ledger nat address) (big_map %operators (pair address address) unit))
             (pair (pair %permissions_descriptor
                      (pair (option %custom (pair (option %config_api address) (string %tag)))
                            (or %operator
                               (or (unit %no_transfer) (unit %owner_or_operator_transfer))
                               (unit %owner_transfer)))
                      (pair (or %receiver
                               (or (unit %optional_owner_hook) (unit %owner_no_hook))
                               (unit %required_owner_hook))
                            (or %sender
                               (or (unit %optional_owner_hook) (unit %owner_no_hook))
                               (unit %required_owner_hook))))
                   (big_map %token_metadata
                      nat
                      (pair (nat %token_id)
                            (pair (string %symbol)
                                  (pair (string %name) (pair (nat %decimals) (map %extras string string))))))))) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
         LAMBDA
           (pair address address)
           (pair address address)
           { DUP ; CAR ; DIG 1 ; DUP ; DUG 2 ; CDR ; PAIR ; DIP { DROP } } ;
         LAMBDA
           (pair (pair (pair (list (pair (option address) (list (pair (pair nat (option address)) nat)))) address)
                       (lambda
                          (pair (option address) (list (pair (pair nat (option address)) nat)))
                          (list (option address))))
                 (pair (lambda
                          address
                          (or (contract
                                 (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address))
                              string))
                       bool))
           (list (contract
                    (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address)))
           { DUP ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             EMPTY_SET address ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CDR ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    CDR ;
                    SWAP ;
                    EXEC ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CAR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    ITER { SWAP ;
                           PAIR ;
                           DUP ;
                           CAR ;
                           DIG 1 ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           IF_NONE
                             { DUP }
                             { DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               PUSH bool True ;
                               SWAP ;
                               UPDATE ;
                               DIP { DROP } } ;
                           DIP { DROP 2 } } ;
                    DIP { DROP 2 } } ;
             DIP { DROP } ;
             NIL (contract
                    (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address)) ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    CDR ;
                    CAR ;
                    SWAP ;
                    EXEC ;
                    IF_LEFT
                      { DIG 1 ; DUP ; DUG 2 ; DIG 1 ; DUP ; DUG 2 ; CONS ; DIP { DROP } }
                      { DIG 4 ;
                        DUP ;
                        DUG 5 ;
                        CDR ;
                        CDR ;
                        IF { DUP ; FAILWITH } { DIG 1 ; DUP ; DUG 2 } ;
                        DIP { DROP } } ;
                    DIP { DROP 2 } } ;
             DIP { DROP 2 } } ;
         DUP ;
         LAMBDA
           (pair (lambda
                    (pair (pair (pair (list (pair (option address) (list (pair (pair nat (option address)) nat)))) address)
                                (lambda
                                   (pair (option address) (list (pair (pair nat (option address)) nat)))
                                   (list (option address))))
                          (pair (lambda
                                   address
                                   (or (contract
                                          (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address))
                                       string))
                                bool))
                    (list (contract
                             (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address))))
                 (pair (pair (pair (list (pair (option address) (list (pair (pair nat (option address)) nat)))) address)
                             (or (or unit unit) unit))
                       (pair (lambda
                                (pair (option address) (list (pair (pair nat (option address)) nat)))
                                (list (option address)))
                             (lambda
                                address
                                (or (contract
                                       (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address))
                                    string)))))
           (list (contract
                    (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address)))
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { PUSH bool False ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     PAIR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     PAIR ;
                     PAIR ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     SWAP ;
                     EXEC ;
                     DIP { DROP } }
                   { DROP ;
                     NIL (contract
                            (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address)) } ;
                 DIP { DROP } }
               { PUSH bool True ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 PAIR ;
                 PAIR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 SWAP ;
                 EXEC ;
                 DIP { DROP } } ;
             DIP { DROP 5 } } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (pair address bool) (option address))
           unit
           { DUP ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } ;
             DIP { DROP } } ;
         DIG 6 ;
         DUP ;
         DUG 7 ;
         CDR ;
         DIG 7 ;
         DUP ;
         DUG 8 ;
         CAR ;
         IF_LEFT
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     IF_NONE
                       { PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                       { DUP ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CAR ;
                              NONE address ;
                              SWAP ;
                              CDR ;
                              SENDER ;
                              PAIR ;
                              PAIR }
                            { PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } ;
                         DIP { DROP } } ;
                     DUP ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 2 } }
                   { DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     SWAP ;
                     EXEC ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DIP { DROP } ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 2 } } ;
                 DIP { DROP } }
               { DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 SOME ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DIP { DROP } ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 2 } } ;
             DIP { DROP 2 } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             CDR ;
             SWAP ;
             PAIR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             PAIR ;
             DIP { DROP 2 } }
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             IF { PUSH string "PAUSED" ; FAILWITH } { UNIT } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PAIR ;
             DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             IF_LEFT
               { DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DUP ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         MAP { DUP ; DIP { DROP } } ;
                         DUP ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         PAIR ;
                         DIP { DROP 2 } ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         MAP { DIG 2 ;
                               DUP ;
                               DUG 3 ;
                               CDR ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               GET ;
                               IF_NONE
                                 { DIG 19 ; DUP ; DUG 20 ; FAILWITH }
                                 { DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CAR ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   COMPARE ;
                                   EQ ;
                                   IF { PUSH nat 1 } { PUSH nat 0 } ;
                                   PAIR ;
                                   DIP { DROP } } ;
                               DUP ;
                               CDR ;
                               CDR ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               CAR ;
                               PAIR ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               PAIR ;
                               DUP ;
                               CAR ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               PAIR ;
                               DIP { DROP 3 } } ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         TRANSFER_TOKENS ;
                         DIP { DROP 3 } ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         NIL operation ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CONS ;
                         PAIR ;
                         DIP { DROP 3 } }
                       { DUP ;
                         PUSH mutez 0 ;
                         SELF ;
                         ADDRESS ;
                         TRANSFER_TOKENS ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         NIL operation ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CONS ;
                         PAIR ;
                         DIP { DROP 2 } } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT
                       { DUP ;
                         MAP { DUP ;
                               CDR ;
                               MAP { DUP ;
                                     CDR ;
                                     CAR ;
                                     DIG 1 ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CDR ;
                                     CDR ;
                                     PAIR ;
                                     PAIR ;
                                     DIP { DROP } } ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               PAIR ;
                               DIP { DROP } } ;
                         SENDER ;
                         DUP ;
                         LAMBDA
                           (pair address (pair address (big_map (pair address address) unit)))
                           unit
                           { DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DUP ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             COMPARE ;
                             EQ ;
                             IF { UNIT }
                                { DIG 1 ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  DIG 3 ;
                                  DUP ;
                                  DUG 4 ;
                                  DIG 2 ;
                                  DUP ;
                                  DUG 3 ;
                                  PAIR ;
                                  MEM ;
                                  IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } ;
                             DIP { DROP 3 } } ;
                         SWAP ;
                         APPLY ;
                         DIP { DROP } ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CAR ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         CDR ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CDR ;
                                CAR ;
                                DIG 1 ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                PAIR ;
                                DIG 3 ;
                                DUP ;
                                DUG 4 ;
                                CAR ;
                                CDR ;
                                SWAP ;
                                EXEC ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CAR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CDR ;
                                ITER { SWAP ;
                                       PAIR ;
                                       DUP ;
                                       CAR ;
                                       DIG 1 ;
                                       DUP ;
                                       DUG 2 ;
                                       CDR ;
                                       PUSH nat 0 ;
                                       DIG 1 ;
                                       DUP ;
                                       DUG 2 ;
                                       CAR ;
                                       CAR ;
                                       COMPARE ;
                                       EQ ;
                                       IF { DIG 1 ; DUP ; DUG 2 }
                                          { PUSH nat 1 ;
                                            DIG 1 ;
                                            DUP ;
                                            DUG 2 ;
                                            CAR ;
                                            CAR ;
                                            COMPARE ;
                                            NEQ ;
                                            IF { DIG 23 ; DUP ; DUG 24 ; FAILWITH }
                                               { DIG 1 ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 DIG 1 ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CDR ;
                                                 GET ;
                                                 IF_NONE
                                                   { DIG 24 ; DUP ; DUG 25 ; FAILWITH }
                                                   { DIG 5 ;
                                                     DUP ;
                                                     DUG 6 ;
                                                     CAR ;
                                                     DIG 1 ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     COMPARE ;
                                                     NEQ ;
                                                     IF { DIG 24 ; DUP ; DUG 25 ; FAILWITH }
                                                        { DIG 2 ;
                                                          DUP ;
                                                          DUG 3 ;
                                                          DIG 2 ;
                                                          DUP ;
                                                          DUG 3 ;
                                                          CAR ;
                                                          CDR ;
                                                          SOME ;
                                                          DIG 3 ;
                                                          DUP ;
                                                          DUG 4 ;
                                                          CDR ;
                                                          UPDATE } ;
                                                     DIP { DROP } } } } ;
                                       DIP { DROP 3 } } ;
                                DIP { DROP 3 } } ;
                         DIP { DROP } ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         PAIR ;
                         SENDER ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         MAP { DUP ;
                               CDR ;
                               MAP { DUP ;
                                     CDR ;
                                     DIG 1 ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     CDR ;
                                     SOME ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CAR ;
                                     CAR ;
                                     PAIR ;
                                     PAIR ;
                                     DIP { DROP } } ;
                               DUP ;
                               DIG 2 ;
                               DUP ;
                               DUG 3 ;
                               CAR ;
                               SOME ;
                               PAIR ;
                               DIP { DROP 2 } } ;
                         PAIR ;
                         DIP { DROP } ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         LAMBDA
                           address
                           (or (contract
                                  (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address))
                               string)
                           { DUP ;
                             CONTRACT %tokens_sent
                               (pair (list %batch
                                        (pair (option %from_ address)
                                              (list %txs (pair (option %to_ address) (pair (nat %token_id) (nat %amount))))))
                                     (address %operator)) ;
                             DUP ;
                             IF_NONE
                               { PUSH string "FA2_SENDER_HOOK_UNDEFINED" ;
                                 RIGHT
                                   (contract
                                      (pair (list %batch
                                               (pair (option %from_ address)
                                                     (list %txs (pair (option %to_ address) (pair (nat %token_id) (nat %amount))))))
                                            (address %operator))) }
                               { DUP ; LEFT string ; DIP { DROP } } ;
                             DIP { DROP 2 } } ;
                         LAMBDA
                           (pair (option address) (list (pair (pair nat (option address)) nat)))
                           (list (option address))
                           { NIL (option address) ; DIG 1 ; DUP ; DUG 2 ; CAR ; CONS ; DIP { DROP } } ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         PAIR ;
                         PAIR ;
                         DIG 22 ;
                         DUP ;
                         DUG 23 ;
                         SWAP ;
                         EXEC ;
                         LAMBDA
                           address
                           (or (contract
                                  (pair (list (pair (option address) (list (pair (option address) (pair nat nat))))) address))
                               string)
                           { DUP ;
                             CONTRACT %tokens_received
                               (pair (list %batch
                                        (pair (option %from_ address)
                                              (list %txs (pair (option %to_ address) (pair (nat %token_id) (nat %amount))))))
                                     (address %operator)) ;
                             DUP ;
                             IF_NONE
                               { PUSH string "FA2_RECEIVER_HOOK_UNDEFINED" ;
                                 RIGHT
                                   (contract
                                      (pair (list %batch
                                               (pair (option %from_ address)
                                                     (list %txs (pair (option %to_ address) (pair (nat %token_id) (nat %amount))))))
                                            (address %operator))) }
                               { DUP ; LEFT string ; DIP { DROP } } ;
                             DIP { DROP 2 } } ;
                         LAMBDA
                           (pair (option address) (list (pair (pair nat (option address)) nat)))
                           (list (option address))
                           { DUP ;
                             CDR ;
                             MAP { DUP ; CAR ; CDR ; DIP { DROP } } ;
                             DIP { DROP } } ;
                         PAIR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         PAIR ;
                         PAIR ;
                         DIG 23 ;
                         DUP ;
                         DUG 24 ;
                         SWAP ;
                         EXEC ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                CAR ;
                                DIG 1 ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                CONS ;
                                DIP { DROP } } ;
                         DIP { DROP 5 } ;
                         DUP ;
                         IF_CONS
                           { DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CDR ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             CAR ;
                             MAP { DUP ;
                                   CDR ;
                                   MAP { DUP ;
                                         CAR ;
                                         CAR ;
                                         DIG 1 ;
                                         DUP ;
                                         DUG 2 ;
                                         CDR ;
                                         PAIR ;
                                         DIG 1 ;
                                         DUP ;
                                         DUG 2 ;
                                         CAR ;
                                         CDR ;
                                         PAIR ;
                                         DIP { DROP } } ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   PAIR ;
                                   DUP ;
                                   DIP { DROP 2 } } ;
                             PAIR ;
                             DUP ;
                             DIP { DROP } ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             MAP { DUP ;
                                   PUSH mutez 0 ;
                                   DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   TRANSFER_TOKENS ;
                                   DIP { DROP } } ;
                             DIP { DROP 3 } }
                           { NIL operation } ;
                         DIP { DROP 5 } ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                         PAIR ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIP { DROP 5 } }
                       { DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         MAP { DUP ;
                               IF_LEFT
                                 { DUP ; LEFT (pair (address %owner) (address %operator)) ; DIP { DROP } }
                                 { DUP ; RIGHT (pair (address %owner) (address %operator)) ; DIP { DROP } } ;
                               DUP ;
                               IF_LEFT
                                 { DUP ;
                                   DIG 18 ;
                                   DUP ;
                                   DUG 19 ;
                                   SWAP ;
                                   EXEC ;
                                   LEFT (pair (address %operator) (address %owner)) ;
                                   DIP { DROP } }
                                 { DUP ;
                                   DIG 18 ;
                                   DUP ;
                                   DUG 19 ;
                                   SWAP ;
                                   EXEC ;
                                   RIGHT (pair (address %operator) (address %owner)) ;
                                   DIP { DROP } } ;
                               DIP { DROP 2 } } ;
                         SENDER ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                DIG 1 ;
                                DUP ;
                                DUG 2 ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                DIG 1 ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                IF_LEFT { DUP ; DIP { DROP } } { DUP ; DIP { DROP } } ;
                                CDR ;
                                COMPARE ;
                                EQ ;
                                IF { UNIT } { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                DIP { DROP } ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CAR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                DIG 1 ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                IF_LEFT
                                  { DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    UNIT ;
                                    SOME ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CAR ;
                                    DIG 3 ;
                                    DUP ;
                                    DUG 4 ;
                                    CDR ;
                                    PAIR ;
                                    UPDATE ;
                                    DIP { DROP } }
                                  { DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CDR ;
                                    PAIR ;
                                    NONE unit ;
                                    SWAP ;
                                    UPDATE ;
                                    DIP { DROP } } ;
                                DIP { DROP 5 } } ;
                         DIP { DROP 3 } ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP 2 } } ;
                     DIP { DROP } } ;
                 DIP { DROP 3 } }
               { DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 CAR ;
                 DUP ;
                 CDR ;
                 CDR ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DUP ; LEFT unit ; RIGHT unit ; DIP { DROP } }
                       { DUP ;
                         LEFT (or (unit %optional_owner_hook) (unit %required_owner_hook)) ;
                         DIP { DROP } } ;
                     DIP { DROP } }
                   { DUP ; RIGHT unit ; RIGHT unit ; DIP { DROP } } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DUP ; LEFT unit ; RIGHT unit ; DIP { DROP } }
                       { DUP ;
                         LEFT (or (unit %optional_owner_hook) (unit %required_owner_hook)) ;
                         DIP { DROP } } ;
                     DIP { DROP } }
                   { DUP ; RIGHT unit ; RIGHT unit ; DIP { DROP } } ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DUP ;
                         LEFT (or (unit %owner_transfer) (unit %owner_or_operator_transfer)) ;
                         DIP { DROP } }
                       { DUP ; RIGHT unit ; RIGHT unit ; DIP { DROP } } ;
                     DIP { DROP } }
                   { DUP ; LEFT unit ; RIGHT unit ; DIP { DROP } } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 IF_NONE
                   { NONE (pair string (option address)) }
                   { DUP ; CAR ; DIG 1 ; DUP ; DUG 2 ; CDR ; PAIR ; SOME ; DIP { DROP } } ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 DIP { DROP 2 } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 TRANSFER_TOKENS ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CONS ;
                 PAIR ;
                 DIP { DROP 5 } } ;
             DIP { DROP 2 } ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             CAR ;
             PAIR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             PAIR ;
             DIP { DROP 3 } } ;
         DIP { DROP 8 } } }

