{ parameter
    (or (or %tokens
           (list %mint_tokens (pair (address %owner) (nat %amount)))
           (list %burn_tokens (pair (address %owner) (nat %amount))))
        (or (or %admin (address %set_admin) (or (unit %confirm_admin) (bool %pause)))
            (or %assets
               (list %transfer
                  (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount)))))
               (or (pair %balance_of
                      (list %requests (pair (address %owner) (nat %token_id)))
                      (contract %callback
                         (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                   (list %update_operators
                      (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                          (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))))))) ;
  storage
    (pair (pair %admin (address %admin) (option %pending_admin address) (bool %paused))
          (pair %assets
             (big_map %ledger address nat)
             (big_map %operators (pair address address nat) unit)
             (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
             (nat %total_supply))
          (big_map %metadata string bytes)) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
         LAMBDA
           (pair address (big_map address nat))
           nat
           { UNPAIR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         LAMBDA
           (pair (pair (lambda (pair address (big_map address nat)) nat) string string)
                 (pair (list (pair (option address) (list (pair (option address) nat nat))))
                       (lambda (pair address address nat (big_map (pair address address nat) unit)) unit)
                       (big_map address nat)
                       (big_map (pair address address nat) unit)
                       (big_map nat (pair nat (map string bytes)))
                       nat))
           (pair (list operation)
                 (big_map address nat)
                 (big_map (pair address address nat) unit)
                 (big_map nat (pair nat (map string bytes)))
                 nat)
           { UNPAIR ;
             UNPAIR 3 ;
             DIG 3 ;
             UNPAIR 3 ;
             DUP 3 ;
             CAR ;
             SWAP ;
             ITER { SWAP ;
                    SENDER ;
                    SWAP ;
                    DUP 3 ;
                    CDR ;
                    ITER { SWAP ;
                           PUSH nat 0 ;
                           DUP 3 ;
                           GET 3 ;
                           COMPARE ;
                           NEQ ;
                           IF { DROP 2 ; DUP 7 ; FAILWITH }
                              { DUP 4 ;
                                CAR ;
                                IF_NONE
                                  {}
                                  { DUP 7 ;
                                    GET 3 ;
                                    DUP 4 ;
                                    GET 3 ;
                                    DUP 6 ;
                                    DUP 4 ;
                                    PAIR 4 ;
                                    DUP 7 ;
                                    SWAP ;
                                    EXEC ;
                                    DROP ;
                                    DUP 2 ;
                                    DUP 2 ;
                                    PAIR ;
                                    DUP 9 ;
                                    SWAP ;
                                    EXEC ;
                                    DUP 4 ;
                                    GET 4 ;
                                    SWAP ;
                                    SUB ;
                                    ISNAT ;
                                    IF_NONE
                                      { DROP 2 ; DUP 7 ; FAILWITH }
                                      { PUSH nat 0 ;
                                        DUP 2 ;
                                        COMPARE ;
                                        EQ ;
                                        IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                           { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } } ;
                                DUP 2 ;
                                CAR ;
                                IF_NONE
                                  { SWAP ; DROP }
                                  { DUP 2 ;
                                    DUP 2 ;
                                    PAIR ;
                                    DUP 9 ;
                                    SWAP ;
                                    EXEC ;
                                    DIG 3 ;
                                    GET 4 ;
                                    ADD ;
                                    PUSH nat 0 ;
                                    DUP 2 ;
                                    COMPARE ;
                                    EQ ;
                                    IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                       { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } } } ;
                    SWAP ;
                    DIG 2 ;
                    DROP 2 } ;
             SWAP ;
             DIG 3 ;
             DIG 4 ;
             DIG 5 ;
             DROP 4 ;
             UPDATE 1 ;
             NIL operation ;
             PAIR } ;
         DUP 4 ;
         DUP 4 ;
         DUP 4 ;
         PAIR 3 ;
         APPLY ;
         LAMBDA
           (list (pair address nat))
           nat
           { PUSH nat 0 ; SWAP ; ITER { CDR ; ADD } } ;
         LAMBDA
           (pair address (option address) bool)
           unit
           { CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } } ;
         DIG 6 ;
         UNPAIR ;
         IF_LEFT
           { DIG 5 ;
             DIG 7 ;
             DROP 2 ;
             DUP 2 ;
             CAR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DROP ;
             DUP 2 ;
             GET 3 ;
             SWAP ;
             IF_LEFT
               { DIG 5 ;
                 DROP ;
                 DUP ;
                 MAP { DUP ; CDR ; PUSH nat 0 ; DIG 2 ; CAR ; SOME ; PAIR 3 } ;
                 DUP 3 ;
                 LAMBDA
                   (pair address address nat (big_map (pair address address nat) unit))
                   unit
                   { DROP ; UNIT } ;
                 NIL (pair (option address) (list (pair (option address) nat nat))) ;
                 DIG 3 ;
                 NONE address ;
                 PAIR ;
                 CONS ;
                 PAIR 3 ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 UNPAIR ;
                 DIG 2 ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 SWAP ;
                 DIG 3 ;
                 GET 6 ;
                 ADD ;
                 UPDATE 6 }
               { DUP ;
                 MAP { NIL (pair (option address) nat nat) ;
                       DUP 2 ;
                       CDR ;
                       PUSH nat 0 ;
                       NONE address ;
                       PAIR 3 ;
                       CONS ;
                       SWAP ;
                       CAR ;
                       SOME ;
                       PAIR } ;
                 DUP 3 ;
                 LAMBDA
                   (pair address address nat (big_map (pair address address nat) unit))
                   unit
                   { DROP ; UNIT } ;
                 DIG 2 ;
                 PAIR 3 ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 UNPAIR ;
                 DIG 2 ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 DIG 3 ;
                 GET 6 ;
                 SUB ;
                 ISNAT ;
                 IF_NONE { DIG 3 ; FAILWITH } { DIG 4 ; DROP } ;
                 DIG 2 ;
                 SWAP ;
                 UPDATE 6 } ;
             SWAP ;
             DUG 2 ;
             UPDATE 3 }
           { DIG 3 ;
             DIG 6 ;
             DROP 2 ;
             IF_LEFT
               { DIG 3 ;
                 DIG 4 ;
                 DIG 5 ;
                 DROP 3 ;
                 DUP 2 ;
                 CAR ;
                 SWAP ;
                 IF_LEFT
                   { DUP 2 ; DIG 4 ; SWAP ; EXEC ; DROP ; SOME ; UPDATE 3 }
                   { IF_LEFT
                       { DIG 3 ;
                         DROP 2 ;
                         DUP ;
                         GET 3 ;
                         IF_NONE
                           { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                           { SENDER ;
                             SWAP ;
                             DUP 2 ;
                             COMPARE ;
                             EQ ;
                             IF { SWAP ; NONE address ; UPDATE 3 ; SWAP ; UPDATE 1 }
                                { DROP 2 ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } }
                       { DUP 2 ; DIG 4 ; SWAP ; EXEC ; DROP ; UPDATE 4 } } ;
                 NIL operation ;
                 DUG 2 ;
                 UPDATE 1 }
               { DIG 2 ;
                 DROP ;
                 DUP 2 ;
                 CAR ;
                 GET 4 ;
                 IF { PUSH string "PAUSED" ; FAILWITH } {} ;
                 DUP 2 ;
                 GET 3 ;
                 SWAP ;
                 IF_LEFT
                   { DIG 4 ;
                     DIG 5 ;
                     DROP 2 ;
                     MAP { DUP ;
                           CDR ;
                           MAP { DUP ; GET 4 ; DUP 2 ; GET 3 ; DIG 2 ; CAR ; SOME ; PAIR 3 } ;
                           SWAP ;
                           CAR ;
                           SOME ;
                           PAIR } ;
                     SWAP ;
                     LAMBDA
                       (pair address address nat (big_map (pair address address nat) unit))
                       unit
                       { UNPAIR 4 ;
                         DUP 2 ;
                         DUP 2 ;
                         COMPARE ;
                         EQ ;
                         IF { DROP 4 ; UNIT }
                            { DUG 3 ;
                              PAIR ;
                              DIG 2 ;
                              PAIR ;
                              MEM ;
                              IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } } ;
                     DIG 2 ;
                     PAIR 3 ;
                     DIG 2 ;
                     SWAP ;
                     EXEC }
                   { DIG 3 ;
                     DROP ;
                     IF_LEFT
                       { DUP ;
                         CAR ;
                         MAP { PUSH nat 0 ;
                               DUP 2 ;
                               CDR ;
                               COMPARE ;
                               NEQ ;
                               IF { DROP ; DUP 5 ; FAILWITH }
                                  { DUP 3 ; CAR ; DUP 2 ; CAR ; PAIR ; DUP 6 ; SWAP ; EXEC ; SWAP ; PAIR } } ;
                         DIG 4 ;
                         DIG 5 ;
                         DROP 2 ;
                         SWAP ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS }
                       { DIG 3 ;
                         DIG 4 ;
                         DROP 2 ;
                         SENDER ;
                         DUP 3 ;
                         GET 3 ;
                         DIG 2 ;
                         ITER { SWAP ;
                                DUP 3 ;
                                DUP 3 ;
                                IF_LEFT {} {} ;
                                CAR ;
                                COMPARE ;
                                EQ ;
                                IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                SWAP ;
                                IF_LEFT
                                  { SWAP ;
                                    UNIT ;
                                    SOME ;
                                    DUP 3 ;
                                    GET 4 ;
                                    DUP 4 ;
                                    GET 3 ;
                                    PAIR ;
                                    DIG 3 ;
                                    CAR ;
                                    PAIR ;
                                    UPDATE }
                                  { SWAP ;
                                    DUP 2 ;
                                    GET 4 ;
                                    DUP 3 ;
                                    GET 3 ;
                                    PAIR ;
                                    DIG 2 ;
                                    CAR ;
                                    PAIR ;
                                    NONE unit ;
                                    SWAP ;
                                    UPDATE } } ;
                         SWAP ;
                         DROP ;
                         UPDATE 3 ;
                         NIL operation } ;
                     PAIR } ;
                 UNPAIR ;
                 DUG 2 ;
                 UPDATE 3 } } ;
         SWAP ;
         PAIR } }

