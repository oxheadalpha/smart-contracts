{ parameter
    (or (or (or %admin (or (unit %confirm_admin) (bool %pause)) (address %set_admin))
            (or %assets
               (or (pair %balance_of
                      (list %requests (pair (address %owner) (nat %token_id)))
                      (contract %callback
                         (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                   (contract %token_metadata_registry address))
               (or (list %transfer
                      (pair (address %from_)
                            (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                   (list %update_operators
                      (or (pair %add_operator (address %owner) (address %operator))
                          (pair %remove_operator (address %owner) (address %operator)))))))
        (or %tokens
           (list %burn_tokens (pair (nat %amount) (address %owner)))
           (list %mint_tokens (pair (nat %amount) (address %owner))))) ;
  storage
    (pair (pair %admin (pair (address %admin) (bool %paused)) (option %pending_admin address))
          (pair %assets
             (pair (big_map %ledger address nat) (big_map %operators (pair address address) unit))
             (pair (big_map %token_metadata
                      nat
                      (pair (nat %token_id)
                            (pair (string %symbol)
                                  (pair (string %name) (pair (nat %decimals) (map %extras string string))))))
                   (nat %total_supply)))) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
         LAMBDA
           (pair address address)
           (pair address address)
           { DUP ; CAR ; SWAP ; CDR ; PAIR } ;
         LAMBDA
           (pair address (big_map address nat))
           nat
           { DUP ; CDR ; SWAP ; CAR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         PAIR ;
         PAIR ;
         LAMBDA
           (pair (pair (pair (lambda (pair address (big_map address nat)) nat) string) string)
                 (pair (pair (list (pair (option address) (list (pair (pair nat (option address)) nat))))
                             (lambda (pair address (big_map (pair address address) unit)) unit))
                       (pair (pair (big_map address nat) (big_map (pair address address) unit))
                             (pair (big_map nat (pair nat (pair string (pair string (pair nat (map string string))))))
                                   nat))))
           (pair (list operation)
                 (pair (pair (big_map address nat) (big_map (pair address address) unit))
                       (pair (big_map nat (pair nat (pair string (pair string (pair nat (map string string))))))
                             nat)))
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 3 ;
             DUP ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PAIR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             DIG 3 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CDR ;
                    DUP ;
                    CAR ;
                    IF_NONE
                      { UNIT }
                      { DIG 3 ;
                        DUP ;
                        DUG 4 ;
                        CDR ;
                        CAR ;
                        SWAP ;
                        PAIR ;
                        DIG 3 ;
                        DUP ;
                        DUG 4 ;
                        CAR ;
                        CDR ;
                        SWAP ;
                        EXEC } ;
                    DROP ;
                    SWAP ;
                    CAR ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    ITER { PUSH nat 0 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           COMPARE ;
                           NEQ ;
                           IF { DROP 2 ; DIG 5 ; DUP ; DUG 6 ; FAILWITH }
                              { DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CAR ;
                                IF_NONE
                                  { SWAP }
                                  { DUG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CAR ;
                                    CAR ;
                                    DIG 2 ;
                                    PAIR ;
                                    PAIR ;
                                    DUP ;
                                    CAR ;
                                    CAR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    DUP ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    PAIR ;
                                    DIG 8 ;
                                    DUP ;
                                    DUG 9 ;
                                    SWAP ;
                                    EXEC ;
                                    DIG 3 ;
                                    CAR ;
                                    CDR ;
                                    SWAP ;
                                    SUB ;
                                    ISNAT ;
                                    IF_NONE
                                      { DROP 2 ; DIG 5 ; DUP ; DUG 6 ; FAILWITH }
                                      { PUSH nat 0 ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        COMPARE ;
                                        EQ ;
                                        IF { DROP ; SWAP ; NONE nat ; SWAP ; UPDATE } { SOME ; DIG 2 ; UPDATE } } } ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                CDR ;
                                IF_NONE
                                  { SWAP ; DROP }
                                  { SWAP ;
                                    DIG 2 ;
                                    CAR ;
                                    CAR ;
                                    DIG 2 ;
                                    PAIR ;
                                    PAIR ;
                                    DUP ;
                                    CAR ;
                                    CAR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    DUP ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    PAIR ;
                                    DIG 7 ;
                                    DUP ;
                                    DUG 8 ;
                                    SWAP ;
                                    EXEC ;
                                    DIG 3 ;
                                    CAR ;
                                    CDR ;
                                    ADD ;
                                    PUSH nat 0 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    COMPARE ;
                                    EQ ;
                                    IF { DROP ; SWAP ; NONE nat ; SWAP ; UPDATE } { SOME ; DIG 2 ; UPDATE } } } } ;
                    SWAP ;
                    DROP } ;
             SWAP ;
             DROP ;
             DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             NIL operation ;
             DUG 2 ;
             DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (list (pair nat address))
           nat
           { PUSH nat 0 ;
             SWAP ;
             ITER { SWAP ; PAIR ; DUP ; CDR ; CAR ; SWAP ; CAR ; ADD } } ;
         LAMBDA
           (pair (pair address bool) (option address))
           unit
           { CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } } ;
         DIG 7 ;
         DUP ;
         DUG 8 ;
         CDR ;
         DIG 8 ;
         CAR ;
         IF_LEFT
           { DIG 3 ;
             DROP ;
             DIG 6 ;
             DROP ;
             IF_LEFT
               { DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 SWAP ;
                 IF_LEFT
                   { IF_LEFT
                       { DIG 3 ;
                         DROP 2 ;
                         DUP ;
                         CDR ;
                         IF_NONE
                           { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                           { SENDER ;
                             COMPARE ;
                             EQ ;
                             IF { CAR ; NONE address ; SWAP ; CDR ; SENDER ; PAIR ; PAIR }
                                { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } ;
                         NIL operation ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SOME ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR }
               { DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 IF { PUSH string "PAUSED" ; FAILWITH } { UNIT } ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     DIG 4 ;
                     DROP ;
                     IF_LEFT
                       { DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         MAP {} ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         MAP { PUSH nat 0 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               COMPARE ;
                               NEQ ;
                               IF { DROP ; DIG 5 ; DUP ; DUG 6 ; FAILWITH }
                                  { DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CDR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    PAIR ;
                                    DIG 6 ;
                                    DUP ;
                                    DUG 7 ;
                                    SWAP ;
                                    EXEC ;
                                    PAIR ;
                                    DUP ;
                                    CDR ;
                                    CDR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    SWAP ;
                                    CAR ;
                                    SWAP ;
                                    PAIR } } ;
                         DIG 2 ;
                         DROP ;
                         DIG 4 ;
                         DROP ;
                         DIG 4 ;
                         DROP ;
                         SWAP ;
                         CAR ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         PUSH mutez 0 ;
                         SELF ;
                         ADDRESS ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } }
                   { DIG 4 ;
                     DROP ;
                     DIG 5 ;
                     DROP ;
                     IF_LEFT
                       { DIG 4 ;
                         DROP ;
                         MAP { DUP ;
                               CDR ;
                               MAP { DUP ;
                                     CDR ;
                                     CAR ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     DIG 2 ;
                                     CDR ;
                                     CDR ;
                                     PAIR ;
                                     PAIR } ;
                               SWAP ;
                               CAR ;
                               PAIR } ;
                         MAP { DUP ;
                               CDR ;
                               MAP { DUP ;
                                     CDR ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     CDR ;
                                     SOME ;
                                     DIG 2 ;
                                     CAR ;
                                     CAR ;
                                     PAIR ;
                                     PAIR } ;
                               SWAP ;
                               CAR ;
                               SOME ;
                               PAIR } ;
                         SENDER ;
                         LAMBDA
                           (pair address (pair address (big_map (pair address address) unit)))
                           unit
                           { DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             SWAP ;
                             DUP ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             COMPARE ;
                             EQ ;
                             IF { DROP 3 ; UNIT }
                                { SWAP ;
                                  CDR ;
                                  DUG 2 ;
                                  PAIR ;
                                  MEM ;
                                  IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } } ;
                         SWAP ;
                         APPLY ;
                         DIG 2 ;
                         SWAP ;
                         DIG 2 ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC }
                       { DIG 3 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         MAP { IF_LEFT
                                 { LEFT (pair (address %owner) (address %operator)) }
                                 { RIGHT (pair (address %owner) (address %operator)) } ;
                               IF_LEFT
                                 { DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   SWAP ;
                                   EXEC ;
                                   LEFT (pair (address %operator) (address %owner)) }
                                 { DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   SWAP ;
                                   EXEC ;
                                   RIGHT (pair (address %operator) (address %owner)) } } ;
                         DIG 4 ;
                         DROP ;
                         SENDER ;
                         DIG 2 ;
                         CDR ;
                         DIG 2 ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                IF_LEFT {} {} ;
                                CDR ;
                                COMPARE ;
                                EQ ;
                                IF { UNIT } { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                DROP ;
                                SWAP ;
                                CAR ;
                                SWAP ;
                                IF_LEFT
                                  { SWAP ;
                                    UNIT ;
                                    SOME ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CAR ;
                                    DIG 3 ;
                                    CDR ;
                                    PAIR ;
                                    UPDATE }
                                  { DUP ; DUG 2 ; CAR ; DIG 2 ; CDR ; PAIR ; NONE unit ; SWAP ; UPDATE } } ;
                         SWAP ;
                         DROP ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } } ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR } }
           { DIG 5 ;
             DROP ;
             DIG 5 ;
             DROP ;
             DIG 6 ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             IF_LEFT
               { DUP ;
                 DUG 2 ;
                 MAP { NIL (pair (pair nat (option address)) nat) ;
                       PUSH nat 0 ;
                       NONE address ;
                       DIG 3 ;
                       DUP ;
                       DUG 4 ;
                       CAR ;
                       PAIR ;
                       PAIR ;
                       CONS ;
                       SWAP ;
                       CDR ;
                       SOME ;
                       PAIR } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 LAMBDA (pair address (big_map (pair address address) unit)) unit { DROP ; UNIT } ;
                 DIG 2 ;
                 PAIR ;
                 PAIR ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 CDR ;
                 CDR ;
                 SUB ;
                 ISNAT ;
                 IF_NONE { DIG 2 ; FAILWITH } { DIG 3 ; DROP } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR }
               { DIG 5 ;
                 DROP ;
                 DUP ;
                 DUG 2 ;
                 MAP { PUSH nat 0 ; SWAP ; DUP ; DUG 2 ; CDR ; SOME ; DIG 2 ; CAR ; PAIR ; PAIR } ;
                 NIL (pair (option address) (list (pair (pair nat (option address)) nat))) ;
                 SWAP ;
                 NONE address ;
                 PAIR ;
                 CONS ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 LAMBDA (pair address (big_map (pair address address) unit)) unit { DROP ; UNIT } ;
                 DIG 2 ;
                 PAIR ;
                 PAIR ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 DIG 3 ;
                 CDR ;
                 CDR ;
                 ADD ;
                 DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR } ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             CAR ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR } } }

