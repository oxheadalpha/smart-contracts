{ parameter
    (or (or (or %admin (or (unit %confirm_admin) (bool %pause)) (address %set_admin))
            (or %assets
               (or (pair %balance_of
                      (list %requests (pair (address %owner) (nat %token_id)))
                      (contract %callback
                         (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                   (contract %token_metadata_registry address))
               (or (list %transfer
                      (pair (address %from_)
                            (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))
                   (list %update_operators
                      (or (pair %add_operator (address %owner) (address %operator))
                          (pair %remove_operator (address %owner) (address %operator)))))))
        (or %tokens
           (list %burn_tokens (pair (nat %amount) (address %owner)))
           (list %mint_tokens (pair (nat %amount) (address %owner))))) ;
  storage
    (pair (pair %admin (pair (address %admin) (bool %paused)) (option %pending_admin address))
          (pair %assets
             (pair (big_map %ledger address nat) (big_map %operators (pair address address) unit))
             (pair (big_map %token_metadata
                      nat
                      (pair (nat %token_id)
                            (pair (string %symbol)
                                  (pair (string %name) (pair (nat %decimals) (map %extras string string))))))
                   (nat %total_supply)))) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
         LAMBDA
           (pair (address %owner) (address %operator))
           (pair (address %operator) (address %owner))
           { DUP ; CAR ; DIG 1 ; DUP ; DUG 2 ; CDR ; PAIR ; DIP { DROP } } ;
         LAMBDA
           (pair address (big_map address nat))
           nat
           { DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             GET ;
             IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
             DIP { DROP } } ;
         DUP ;
         LAMBDA
           (pair (lambda (pair address (big_map address nat)) nat)
                 (pair (pair address nat) (big_map address nat)))
           (big_map address nat)
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             SWAP ;
             EXEC ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             ADD ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             SOME ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             UPDATE ;
             DIP { DROP 6 } } ;
         SWAP ;
         APPLY ;
         DIP { DIP { DIP { DUP } ; SWAP } ; DUP ; DIP { PAIR } ; SWAP } ;
         SWAP ;
         LAMBDA
           (pair (pair (lambda (pair address (big_map address nat)) nat) string)
                 (pair (pair address nat) (big_map address nat)))
           (big_map address nat)
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DIP { DUP ; CDR ; SWAP ; CAR } ;
             DUP ;
             CAR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             SWAP ;
             EXEC ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             SUB ;
             ISNAT ;
             IF_NONE
               { DIG 5 ; DUP ; DUG 6 ; FAILWITH }
               { PUSH nat 0 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 COMPARE ;
                 EQ ;
                 IF { DIG 2 ; DUP ; DUG 3 ; DIG 4 ; DUP ; DUG 5 ; NONE nat ; SWAP ; UPDATE }
                    { DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      SOME ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      UPDATE } ;
                 DIP { DROP } } ;
             DIP { DROP 6 } } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (list (pair (nat %amount) (address %owner)))
           nat
           { PUSH nat 0 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CDR ;
                    CAR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CAR ;
                    ADD ;
                    DIP { DROP } } ;
             DIP { DROP } } ;
         LAMBDA
           (pair (pair (address %admin) (bool %paused)) (option %pending_admin address))
           unit
           { DUP ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } ;
             DIP { DROP } } ;
         DIG 8 ;
         DUP ;
         DUG 9 ;
         CDR ;
         DIG 9 ;
         DUP ;
         DUG 10 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         IF_NONE
                           { PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                           { DUP ;
                             SENDER ;
                             COMPARE ;
                             EQ ;
                             IF { DIG 3 ;
                                  DUP ;
                                  DUG 4 ;
                                  CAR ;
                                  NONE address ;
                                  SWAP ;
                                  PAIR ;
                                  DUP ;
                                  CDR ;
                                  SWAP ;
                                  CAR ;
                                  CDR ;
                                  SENDER ;
                                  PAIR ;
                                  PAIR }
                                { PUSH string "NOT_AN_ADMIN" ; FAILWITH } ;
                             DIP { DROP } } ;
                         DUP ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP 2 } }
                       { DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         SWAP ;
                         EXEC ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DIP { DROP } ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP 2 } } ;
                     DIP { DROP } }
                   { DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SOME ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DIP { DROP } ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 2 } } ;
                 DIP { DROP 2 } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 PAIR ;
                 DIP { DROP 2 } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 IF { PUSH string "PAUSED" ; FAILWITH } { UNIT } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DUP ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         MAP { DUP ; DIP { DROP } } ;
                         DUP ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         PAIR ;
                         DIP { DROP 2 } ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         MAP { PUSH nat 0 ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               COMPARE ;
                               NEQ ;
                               IF { DIG 19 ; DUP ; DUG 20 ; FAILWITH }
                                  { DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CDR ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    PAIR ;
                                    DIG 17 ;
                                    DUP ;
                                    DUG 18 ;
                                    SWAP ;
                                    EXEC ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    PAIR ;
                                    DUP ;
                                    CDR ;
                                    CDR ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    PAIR ;
                                    DUP ;
                                    CAR ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    PAIR ;
                                    DIP { DROP 3 } } ;
                               DIP { DROP } } ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         TRANSFER_TOKENS ;
                         DIP { DROP 3 } ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         NIL operation ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CONS ;
                         PAIR ;
                         DIP { DROP 3 } }
                       { DUP ;
                         PUSH mutez 0 ;
                         SELF ;
                         ADDRESS ;
                         TRANSFER_TOKENS ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         NIL operation ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CONS ;
                         PAIR ;
                         DIP { DROP 2 } } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT
                       { DUP ;
                         MAP { DUP ;
                               CDR ;
                               MAP { DUP ;
                                     CDR ;
                                     CAR ;
                                     DIG 1 ;
                                     DUP ;
                                     DUG 2 ;
                                     CAR ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CDR ;
                                     CDR ;
                                     PAIR ;
                                     PAIR ;
                                     DIP { DROP } } ;
                               DIG 1 ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               PAIR ;
                               DIP { DROP } } ;
                         DUP ;
                         MAP { DUP ;
                               CDR ;
                               MAP { PUSH nat 0 ;
                                     DIG 1 ;
                                     DUP ;
                                     DUG 2 ;
                                     CDR ;
                                     COMPARE ;
                                     NEQ ;
                                     IF { DIG 18 ; DUP ; DUG 19 ; FAILWITH }
                                        { DUP ;
                                          CDR ;
                                          DIG 1 ;
                                          DUP ;
                                          DUG 2 ;
                                          CAR ;
                                          CDR ;
                                          SOME ;
                                          DIG 2 ;
                                          DUP ;
                                          DUG 3 ;
                                          CAR ;
                                          CAR ;
                                          PAIR ;
                                          PAIR } ;
                                     DIP { DROP } } ;
                               DUP ;
                               DIG 2 ;
                               DUP ;
                               DUG 3 ;
                               CAR ;
                               SOME ;
                               PAIR ;
                               DIP { DROP 2 } } ;
                         SENDER ;
                         DUP ;
                         LAMBDA
                           (pair address (pair address (big_map (pair address address) unit)))
                           unit
                           { DUP ;
                             CAR ;
                             SWAP ;
                             CDR ;
                             DUP ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             DIG 1 ;
                             DUP ;
                             DUG 2 ;
                             COMPARE ;
                             EQ ;
                             IF { UNIT }
                                { DIG 1 ;
                                  DUP ;
                                  DUG 2 ;
                                  CDR ;
                                  DIG 3 ;
                                  DUP ;
                                  DUG 4 ;
                                  DIG 2 ;
                                  DUP ;
                                  DUG 3 ;
                                  PAIR ;
                                  MEM ;
                                  IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } ;
                             DIP { DROP 3 } } ;
                         SWAP ;
                         APPLY ;
                         DIP { DROP } ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         CAR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CAR ;
                         CDR ;
                         PAIR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                DUP ;
                                CAR ;
                                IF_NONE
                                  { UNIT }
                                  { DIG 3 ;
                                    DUP ;
                                    DUG 4 ;
                                    CDR ;
                                    CAR ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    PAIR ;
                                    DIG 4 ;
                                    DUP ;
                                    DUG 5 ;
                                    CAR ;
                                    CDR ;
                                    SWAP ;
                                    EXEC ;
                                    DIP { DROP } } ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CAR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CDR ;
                                ITER { SWAP ;
                                       PAIR ;
                                       DUP ;
                                       CAR ;
                                       DIG 1 ;
                                       DUP ;
                                       DUG 2 ;
                                       CDR ;
                                       PUSH nat 0 ;
                                       DIG 1 ;
                                       DUP ;
                                       DUG 2 ;
                                       CDR ;
                                       COMPARE ;
                                       NEQ ;
                                       IF { DIG 25 ; DUP ; DUG 26 ; FAILWITH }
                                          { DIG 4 ;
                                            DUP ;
                                            DUG 5 ;
                                            CAR ;
                                            IF_NONE
                                              { DIG 1 ; DUP ; DUG 2 }
                                              { DIG 2 ;
                                                DUP ;
                                                DUG 3 ;
                                                DIG 2 ;
                                                DUP ;
                                                DUG 3 ;
                                                CAR ;
                                                CAR ;
                                                DIG 2 ;
                                                DUP ;
                                                DUG 3 ;
                                                PAIR ;
                                                PAIR ;
                                                DIG 22 ;
                                                DUP ;
                                                DUG 23 ;
                                                SWAP ;
                                                EXEC ;
                                                DIP { DROP } } ;
                                            DIG 1 ;
                                            DUP ;
                                            DUG 2 ;
                                            CAR ;
                                            CDR ;
                                            IF_NONE
                                              { DUP }
                                              { DIG 1 ;
                                                DUP ;
                                                DUG 2 ;
                                                DIG 3 ;
                                                DUP ;
                                                DUG 4 ;
                                                CAR ;
                                                CAR ;
                                                DIG 2 ;
                                                DUP ;
                                                DUG 3 ;
                                                PAIR ;
                                                PAIR ;
                                                DIG 24 ;
                                                DUP ;
                                                DUG 25 ;
                                                SWAP ;
                                                EXEC ;
                                                DIP { DROP } } ;
                                            DIP { DROP } } ;
                                       DIP { DROP 3 } } ;
                                DIP { DROP 3 } } ;
                         DIP { DROP } ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP 5 } }
                       { DUP ;
                         MAP { DUP ;
                               IF_LEFT
                                 { DUP ; LEFT (pair (address %owner) (address %operator)) ; DIP { DROP } }
                                 { DUP ; RIGHT (pair (address %owner) (address %operator)) ; DIP { DROP } } ;
                               DUP ;
                               IF_LEFT
                                 { DUP ;
                                   DIG 17 ;
                                   DUP ;
                                   DUG 18 ;
                                   SWAP ;
                                   EXEC ;
                                   LEFT (pair (address %operator) (address %owner)) ;
                                   DIP { DROP } }
                                 { DUP ;
                                   DIG 17 ;
                                   DUP ;
                                   DUG 18 ;
                                   SWAP ;
                                   EXEC ;
                                   RIGHT (pair (address %operator) (address %owner)) ;
                                   DIP { DROP } } ;
                               DIP { DROP 2 } } ;
                         SENDER ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                DIG 1 ;
                                DUP ;
                                DUG 2 ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                DIG 1 ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                IF_LEFT { DUP ; DIP { DROP } } { DUP ; DIP { DROP } } ;
                                CDR ;
                                COMPARE ;
                                EQ ;
                                IF { UNIT } { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                DIP { DROP } ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CAR ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                DIG 1 ;
                                DUP ;
                                DUG 2 ;
                                CAR ;
                                IF_LEFT
                                  { DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    UNIT ;
                                    SOME ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CAR ;
                                    DIG 3 ;
                                    DUP ;
                                    DUG 4 ;
                                    CDR ;
                                    PAIR ;
                                    UPDATE ;
                                    DIP { DROP } }
                                  { DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    DIG 1 ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    CDR ;
                                    PAIR ;
                                    NONE unit ;
                                    SWAP ;
                                    UPDATE ;
                                    DIP { DROP } } ;
                                DIP { DROP 5 } } ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR ;
                         DIP { DROP 4 } } ;
                     DIP { DROP } } ;
                 DIP { DROP 2 } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 PAIR ;
                 DIP { DROP 3 } } ;
             DIP { DROP } }
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PAIR ;
             DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             IF_LEFT
               { DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 ITER { SWAP ;
                        PAIR ;
                        DUP ;
                        CDR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        CDR ;
                        PAIR ;
                        PAIR ;
                        DIG 15 ;
                        DUP ;
                        DUG 16 ;
                        SWAP ;
                        EXEC ;
                        DIP { DROP 2 } } ;
                 DIP { DROP } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 12 ;
                 DUP ;
                 DUG 13 ;
                 SWAP ;
                 EXEC ;
                 DUP ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CDR ;
                 SUB ;
                 ISNAT ;
                 DUP ;
                 IF_NONE { DIG 18 ; DUP ; DUG 19 ; FAILWITH } { DUP ; DIP { DROP } } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                 PAIR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 8 } }
               { DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 ITER { SWAP ;
                        PAIR ;
                        DUP ;
                        CDR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        DIG 1 ;
                        DUP ;
                        DUG 2 ;
                        CAR ;
                        DIG 2 ;
                        DUP ;
                        DUG 3 ;
                        CDR ;
                        PAIR ;
                        PAIR ;
                        DIG 16 ;
                        DUP ;
                        DUG 17 ;
                        SWAP ;
                        EXEC ;
                        DIP { DROP 2 } } ;
                 DIP { DROP } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 12 ;
                 DUP ;
                 DUG 13 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                 PAIR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CDR ;
                 ADD ;
                 DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP 7 } } ;
             DIP { DROP 2 } ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             CAR ;
             PAIR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             PAIR ;
             DIP { DROP 3 } } ;
         DIP { DROP 10 } } }

