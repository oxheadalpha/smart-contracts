{ parameter
    (or (or (or (pair %assert_is_operator
                   (address %fa2)
                   (pair %request
                      (pair (address %operator) (address %owner))
                      (or %tokens (unit %all_tokens) (set %some_tokens nat))))
                (unit %default))
            (or (pair %is_operator_response
                   (bool %is_operator)
                   (pair %operator
                      (pair (address %operator) (address %owner))
                      (or %tokens (unit %all_tokens) (set %some_tokens nat))))
                (pair %query (address %fa2) (address %owner))))
        (list %response
           (pair (nat %balance) (pair %request (address %owner) (nat %token_id))))) ;
  storage
    (or (unit %empty)
        (pair %state (nat %balance) (pair %request (address %owner) (nat %token_id)))) ;
  code { DUP ;
         CDR ;
         DIP { DUP } ;
         SWAP ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     CAR ;
                     CONTRACT %is_operator
                       (pair (contract %callback
                                (pair (bool %is_operator)
                                      (pair %operator
                                         (pair (address %operator) (address %owner))
                                         (or %tokens (unit %all_tokens) (set %some_tokens nat)))))
                             (pair %operator
                                (pair (address %operator) (address %owner))
                                (or %tokens (unit %all_tokens) (set %some_tokens nat)))) ;
                     IF_NONE
                       { PUSH string "bad address for get_entrypoint (%is_operator)" ; FAILWITH }
                       {} ;
                     SELF ;
                     ADDRESS ;
                     CONTRACT %is_operator_response
                       (pair (bool %is_operator)
                             (pair %operator
                                (pair (address %operator) (address %owner))
                                (or %tokens (unit %all_tokens) (set %some_tokens nat)))) ;
                     IF_NONE
                       { PUSH string "bad address for get_entrypoint (%is_operator_response)" ;
                         FAILWITH }
                       {} ;
                     DUP ;
                     DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                     PAIR ;
                     DIP { DIP { DUP } ; SWAP ; PUSH mutez 0 } ;
                     TRANSFER_TOKENS ;
                     DUP ;
                     NIL operation ;
                     SWAP ;
                     CONS ;
                     DIP { DIP 6 { DUP } ; DIG 6 } ;
                     PAIR ;
                     DIP { DROP 4 } }
                   { DIP 3 { DUP } ; DIG 3 ; NIL operation ; PAIR ; DIP { DROP } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     CAR ;
                     IF { UNIT } { PUSH string "not an operator response" ; FAILWITH } ;
                     DIP 4 { DUP } ;
                     DIG 4 ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 2 } }
                   { SELF ;
                     ADDRESS ;
                     CONTRACT %response
                       (list (pair (nat %balance) (pair %request (address %owner) (nat %token_id)))) ;
                     IF_NONE
                       { PUSH string "bad address for get_entrypoint (%response)" ; FAILWITH }
                       {} ;
                     DIP { DUP ;
                           CDR ;
                           PUSH nat 0 ;
                           SWAP ;
                           PAIR ;
                           NIL (pair (address %owner) (nat %token_id)) ;
                           SWAP ;
                           CONS } ;
                     PAIR ;
                     DIP { DUP } ;
                     SWAP ;
                     CAR ;
                     CONTRACT %balance_of
                       (pair (contract %callback
                                (list (pair (nat %balance) (pair %request (address %owner) (nat %token_id)))))
                             (list %requests (pair (address %owner) (nat %token_id)))) ;
                     IF_NONE
                       { PUSH string "bad address for get_entrypoint (%balance_of)" ; FAILWITH }
                       {} ;
                     DIP { DUP } ;
                     SWAP ;
                     DIP { DUP ; PUSH mutez 0 } ;
                     TRANSFER_TOKENS ;
                     DUP ;
                     NIL operation ;
                     SWAP ;
                     CONS ;
                     DIP { DIP 6 { DUP } ; DIG 6 } ;
                     PAIR ;
                     DIP { DROP 4 } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DUP ;
             IF_CONS
               { DUP ; DIP { DROP 2 } }
               { PUSH string "invalid response" ; FAILWITH } ;
             DUP ;
             RIGHT unit ;
             NIL operation ;
             PAIR ;
             DIP { DROP 2 } } ;
         DIP { DROP 2 } } }

