{ parameter
    (or (or %admin
           (or (or (list %add_implicit_owners key_hash)
                   (pair %burn_tokens
                      (list %batch (pair (nat %amount) (nat %token_id)))
                      (address %owner)))
               (or (pair %create_token (string %descriptor) (nat %token_id))
                   (pair %mint_tokens
                      (pair (list %batch (pair (nat %amount) (nat %token_id))) (bytes %data))
                      (address %owner))))
           (or (or (bool %pause) (list %remove_implicit_owners key_hash)) (address %set_admin)))
        (or %assets
           (or (or (address %add_operator)
                   (pair %balance_of
                      (list %balance_requests (pair (address %owner) (nat %token_id)))
                      (contract %balance_view (list (pair (pair (address %owner) (nat %token_id)) nat)))))
               (or (pair %is_operator
                      (pair %is_operator_request (address %operator) (address %owner))
                      (contract %is_operator_view (pair (pair (address %operator) (address %owner)) bool)))
                   (address %remove_operator)))
           (pair %transfer
              (pair (list %batch (pair (nat %amount) (nat %token_id))) (bytes %data))
              (pair (address %from_) (address %to_))))) ;
  storage
    (pair (pair %admin (pair (address %admin) (bool %paused)) (big_map %tokens nat string))
          (pair %assets
             (pair %balance_storage
                (big_map %balances nat nat)
                (pair %owners
                   (nat %owner_count)
                   (big_map %owners address (pair (nat %id) (bool %is_implicit)))))
             (big_map %operators address (set address)))) ;
  code { LAMBDA
           (pair (pair address bool)
                 (pair (nat %owner_count)
                       (big_map %owners address (pair (nat %id) (bool %is_implicit)))))
           (pair (pair %owner (nat %id) (bool %is_implicit))
                 (pair %owners
                    (nat %owner_count)
                    (big_map %owners address (pair (nat %id) (bool %is_implicit)))))
           { DUP ;
             CDR ;
             DUP ;
             CAR ;
             PUSH nat 1 ;
             ADD ;
             DUP ;
             DIP { DIP 2 { DUP } ; DIG 2 ; CAR ; CDR } ;
             PAIR ;
             DUP ;
             DIP { DIP { DUP } ;
                   SWAP ;
                   DIP { DIP 3 { DUP } ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         DIP { DUP ; SOME ; DIP { DIP 2 { DUP } ; DIG 2 ; CDR } } ;
                         UPDATE } ;
                   PAIR } ;
             PAIR ;
             DIP { DROP 4 } } ;
         DUP ;
         LAMBDA
           (pair (lambda
                    (pair (pair address bool)
                          (pair (nat %owner_count)
                                (big_map %owners address (pair (nat %id) (bool %is_implicit)))))
                    (pair (pair %owner (nat %id) (bool %is_implicit))
                          (pair %owners
                             (nat %owner_count)
                             (big_map %owners address (pair (nat %id) (bool %is_implicit))))))
                 (pair address
                       (pair (nat %owner_count)
                             (big_map %owners address (pair (nat %id) (bool %is_implicit))))))
           (pair (pair %owner (nat %id) (bool %is_implicit))
                 (pair %owners
                    (nat %owner_count)
                    (big_map %owners address (pair (nat %id) (bool %is_implicit)))))
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             DIP { DUP } ;
             SWAP ;
             CDR ;
             DIP { DUP } ;
             SWAP ;
             DIP { DUP ; CDR } ;
             GET ;
             IF_NONE
               { DIP { DUP } ;
                 SWAP ;
                 PUSH bool False ;
                 SWAP ;
                 PAIR ;
                 DIP { DUP } ;
                 PAIR ;
                 DIP { DIP 3 { DUP } ; DIG 3 } ;
                 EXEC }
               { DUP ; DIP { DIP { DUP } ; SWAP } ; PAIR ; DIP { DROP } } ;
             DIP { DROP 4 } } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair address
                 (pair (nat %owner_count)
                       (big_map %owners address (pair (nat %id) (bool %is_implicit)))))
           nat
           { DUP ;
             CAR ;
             DIP { DUP ; CDR ; CDR } ;
             GET ;
             IF_NONE
               { PUSH string "No such owner" ; FAILWITH }
               { DUP ; CAR ; DIP { DROP } } ;
             DIP { DROP } } ;
         LAMBDA
           (pair nat nat)
           nat
           { DUP ;
             CDR ;
             DUP ;
             PUSH nat 4294967295 ;
             SWAP ;
             COMPARE ;
             GT ;
             IF { PUSH string "provided token ID is out of allowed range" ; FAILWITH }
                { DUP ;
                  DIP { DIP { DUP } ; SWAP ; CAR ; PUSH nat 4294967296 ; SWAP ; MUL } ;
                  ADD } ;
             DIP { DROP 2 } } ;
         LAMBDA
           (pair nat (big_map nat nat))
           nat
           { DUP ;
             CAR ;
             DIP { DUP ; CDR } ;
             GET ;
             IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
             DIP { DROP } } ;
         LAMBDA
           key_hash
           address
           { DUP ; IMPLICIT_ACCOUNT ; DUP ; ADDRESS ; DIP { DROP 2 } } ;
         DIP 6 { DUP } ;
         DIG 6 ;
         CDR ;
         DIP 7 { DUP } ;
         DIG 7 ;
         CAR ;
         IF_LEFT
           { DUP ;
             DIP { DIP { DUP } ;
                   SWAP ;
                   CAR ;
                   DIP { DIP { DUP } ; SWAP ; CDR ; CAR } ;
                   PAIR } ;
             PAIR ;
             DUP ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "operation requires admin privileges" ; FAILWITH }
                { DIP { DUP } ;
                  SWAP ;
                  CAR ;
                  IF_LEFT
                    { DUP ;
                      IF_LEFT
                        { DUP ;
                          IF_LEFT
                            { DUP ;
                              DIP { DIP 3 { DUP } ; DIG 3 ; CDR } ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              DIP { DUP } ;
                              SWAP ;
                              CAR ;
                              DIP { DUP ; CDR } ;
                              ITER { SWAP ;
                                     PAIR ;
                                     DUP ;
                                     CAR ;
                                     DIP { DUP } ;
                                     SWAP ;
                                     CDR ;
                                     DIP { DIP 11 { DUP } ; DIG 11 } ;
                                     EXEC ;
                                     DUP ;
                                     DIP { DIP { DUP } ; SWAP ; CDR } ;
                                     GET ;
                                     IF_NONE
                                       { DUP ;
                                         PUSH bool True ;
                                         SWAP ;
                                         PAIR ;
                                         DIP { DIP { DUP } ; SWAP } ;
                                         PAIR ;
                                         DIP { DIP 17 { DUP } ; DIG 17 } ;
                                         EXEC ;
                                         DUP ;
                                         CDR ;
                                         DIP { DROP } }
                                       { DUP ;
                                         CDR ;
                                         IF { DIP 2 { DUP } ; DIG 2 }
                                            { PUSH string "originated owner with the same address already exists" ;
                                              FAILWITH } ;
                                         DIP { DROP } } ;
                                     DIP { DROP 3 } } ;
                              DIP { DUP } ;
                              SWAP ;
                              CAR ;
                              DIP { DUP } ;
                              PAIR ;
                              DIP { DROP 3 } ;
                              DIP 4 { DUP } ;
                              DIG 4 ;
                              CAR ;
                              DIP { DUP } ;
                              PAIR ;
                              NIL operation ;
                              PAIR ;
                              DIP { DROP 2 } }
                            { DUP ;
                              DIP { DIP 3 { DUP } ; DIG 3 ; CDR } ;
                              PAIR ;
                              DUP ;
                              CAR ;
                              DIP { DUP } ;
                              SWAP ;
                              CDR ;
                              DIP { DUP } ;
                              SWAP ;
                              CDR ;
                              DIP { DUP ; CDR } ;
                              PAIR ;
                              DIP { DIP 13 { DUP } ; DIG 13 } ;
                              EXEC ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              CAR ;
                              DIP { DIP { DUP } ; SWAP ; CAR } ;
                              ITER { SWAP ;
                                     PAIR ;
                                     DUP ;
                                     CAR ;
                                     DIP { DUP } ;
                                     SWAP ;
                                     CDR ;
                                     DIP 3 { DUP } ;
                                     DIG 3 ;
                                     DIP { DUP ; CDR } ;
                                     PAIR ;
                                     DIP { DIP 16 { DUP } ; DIG 16 } ;
                                     EXEC ;
                                     DUP ;
                                     DIP { DIP 2 { DUP } ; DIG 2 } ;
                                     GET ;
                                     IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
                                     DIP { DIP { DUP } ; SWAP ; CAR } ;
                                     SUB ;
                                     ISNAT ;
                                     IF_NONE
                                       { PUSH string "Insufficient funds" ; FAILWITH }
                                       { DUP ;
                                         PUSH nat 0 ;
                                         SWAP ;
                                         COMPARE ;
                                         EQ ;
                                         IF { DIP { DUP } ;
                                              SWAP ;
                                              DIP { DIP 3 { DUP } ; DIG 3 ; NONE nat } ;
                                              UPDATE }
                                            { DIP { DUP } ;
                                              SWAP ;
                                              DIP { DUP ; SOME ; DIP { DIP 3 { DUP } ; DIG 3 } } ;
                                              UPDATE } ;
                                         DIP { DROP } } ;
                                     DIP { DROP 4 } } ;
                              DUP ;
                              DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                              PAIR ;
                              DIP { DROP 5 } ;
                              DIP 4 { DUP } ;
                              DIG 4 ;
                              CAR ;
                              DIP { DUP } ;
                              PAIR ;
                              NIL operation ;
                              PAIR ;
                              DIP { DROP 2 } } ;
                          DIP { DROP } }
                        { DUP ;
                          IF_LEFT
                            { DUP ;
                              DIP { DIP 3 { DUP } ; DIG 3 ; CAR } ;
                              PAIR ;
                              DUP ;
                              CAR ;
                              DIP { DUP } ;
                              SWAP ;
                              CDR ;
                              DIP { DUP } ;
                              SWAP ;
                              CDR ;
                              DIP { DUP ; CDR } ;
                              GET ;
                              IF_NONE
                                { DUP ;
                                  CAR ;
                                  CAR ;
                                  DIP { DUP ; CAR ; CDR } ;
                                  PAIR ;
                                  DIP { DIP { DUP } ;
                                        SWAP ;
                                        CDR ;
                                        DIP { DIP { DUP } ; SWAP ; CAR ; SOME ; DIP { DUP ; CDR } } ;
                                        UPDATE } ;
                                  PAIR }
                                { PUSH string "token already exists" ; FAILWITH } ;
                              DIP { DROP 3 } ;
                              DUP ;
                              DIP { DIP 4 { DUP } ; DIG 4 ; CDR } ;
                              PAIR ;
                              NIL operation ;
                              PAIR ;
                              DIP { DROP 2 } }
                            { DUP ;
                              DIP { DIP 3 { DUP } ; DIG 3 ; CAR } ;
                              PAIR ;
                              DIP { DIP 3 { DUP } ; DIG 3 ; CDR } ;
                              PAIR ;
                              DUP ;
                              CAR ;
                              CAR ;
                              DIP { DUP } ;
                              SWAP ;
                              CDR ;
                              DIP { DUP } ;
                              SWAP ;
                              CDR ;
                              DIP { DUP ; CDR } ;
                              PAIR ;
                              DIP { DIP 14 { DUP } ; DIG 14 } ;
                              EXEC ;
                              DIP 2 { DUP } ;
                              DIG 2 ;
                              DIP { DUP ; CAR ; CDR } ;
                              PAIR ;
                              DUP ;
                              CAR ;
                              DIP { DUP } ;
                              SWAP ;
                              CDR ;
                              IF { NIL operation }
                                 { DUP ;
                                   CDR ;
                                   CONTRACT %multi_token_receiver
                                     (pair (pair (list %batch (pair (nat %amount) (nat %token_id))) (bytes %data))
                                           (pair (option %from_ address) (address %operator))) ;
                                   IF_NONE
                                     { PUSH string "bad address for get_entrypoint (%multi_token_receiver)" ;
                                       FAILWITH }
                                     {} ;
                                   DIP { DUP } ;
                                   SWAP ;
                                   CAR ;
                                   CAR ;
                                   DIP { DIP { DUP } ; SWAP ; CAR ; CDR } ;
                                   PAIR ;
                                   DIP { SENDER ; NONE address ; PAIR } ;
                                   PAIR ;
                                   DUP ;
                                   DIP { DIP { DUP } ; SWAP ; PUSH mutez 0 } ;
                                   TRANSFER_TOKENS ;
                                   DUP ;
                                   NIL operation ;
                                   SWAP ;
                                   CONS ;
                                   DIP { DROP 3 } } ;
                              DIP { DROP 2 } ;
                              DIP 3 { DUP } ;
                              DIG 3 ;
                              DIP { DIP { DUP } ; SWAP ; CAR ; CAR } ;
                              PAIR ;
                              DIP { DIP 4 { DUP } ;
                                    DIG 4 ;
                                    CAR ;
                                    CDR ;
                                    CDR ;
                                    DIP { DIP 2 { DUP } ; DIG 2 ; CAR } ;
                                    PAIR } ;
                              PAIR ;
                              DUP ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIP { DUP ; CDR ; CDR } ;
                              ITER { SWAP ;
                                     PAIR ;
                                     DUP ;
                                     CAR ;
                                     DIP { DUP } ;
                                     SWAP ;
                                     CDR ;
                                     DUP ;
                                     CDR ;
                                     DIP { DIP 3 { DUP } ; DIG 3 ; CDR ; CAR } ;
                                     PAIR ;
                                     DUP ;
                                     CAR ;
                                     DIP { DUP ; CDR } ;
                                     GET ;
                                     IF_NONE { PUSH string "token does not exist" ; FAILWITH } { DROP ; UNIT } ;
                                     DIP { DROP } ;
                                     DIP 4 { DUP } ;
                                     DIG 4 ;
                                     CAR ;
                                     CDR ;
                                     DIP { DIP { DUP } ; SWAP ; CDR } ;
                                     PAIR ;
                                     DIP { DIP 19 { DUP } ; DIG 19 } ;
                                     EXEC ;
                                     DUP ;
                                     DIP { DIP 3 { DUP } ; DIG 3 } ;
                                     PAIR ;
                                     DIP { DIP 19 { DUP } ; DIG 19 } ;
                                     EXEC ;
                                     DIP { DUP } ;
                                     SWAP ;
                                     DIP { DUP ;
                                           DIP { DIP 3 { DUP } ; DIG 3 ; CAR } ;
                                           ADD ;
                                           SOME ;
                                           DIP { DIP 4 { DUP } ; DIG 4 } } ;
                                     UPDATE ;
                                     DIP { DROP 6 } } ;
                              DIP { DROP ; DUP } ;
                              SWAP ;
                              DIP { DUP ; DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ; PAIR } ;
                              PAIR ;
                              DIP { DROP 6 } ;
                              DUP ;
                              CAR ;
                              DIP { DIP 4 { DUP } ; DIG 4 ; CAR ; DIP { DUP ; CDR } ; PAIR } ;
                              PAIR ;
                              DIP { DROP 2 } } ;
                          DIP { DROP } } ;
                      DIP { DROP } }
                    { DUP ;
                      IF_LEFT
                        { DUP ;
                          IF_LEFT
                            { DUP ;
                              DIP { DIP 3 { DUP } ; DIG 3 ; CAR } ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              CAR ;
                              DIP { DIP { DUP } ; SWAP ; CAR } ;
                              PAIR ;
                              DIP { DUP ; CDR } ;
                              PAIR ;
                              DIP { DROP 2 ; DIP 3 { DUP } ; DIG 3 ; CDR } ;
                              PAIR ;
                              NIL operation ;
                              PAIR ;
                              DIP { DROP } }
                            { DUP ;
                              DIP { DIP 3 { DUP } ; DIG 3 ; CDR } ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              DIP { DUP } ;
                              SWAP ;
                              CAR ;
                              DIP { DUP ; CDR } ;
                              ITER { SWAP ;
                                     PAIR ;
                                     DUP ;
                                     CAR ;
                                     DIP { DUP } ;
                                     SWAP ;
                                     CDR ;
                                     DIP { DIP 11 { DUP } ; DIG 11 } ;
                                     EXEC ;
                                     DUP ;
                                     DIP { DIP { DUP } ; SWAP ; CDR } ;
                                     GET ;
                                     IF_NONE
                                       { DIP { DUP } ; SWAP }
                                       { DUP ;
                                         CDR ;
                                         NOT ;
                                         IF { PUSH string "trying to remove non-implicit account" ; FAILWITH }
                                            { DIP 4 { DUP } ;
                                              DIG 4 ;
                                              CDR ;
                                              CAR ;
                                              DIP { DIP { DUP } ;
                                                    SWAP ;
                                                    DIP { DIP 4 { DUP } ;
                                                          DIG 4 ;
                                                          CDR ;
                                                          CDR ;
                                                          NONE (pair (nat %id) (bool %is_implicit)) } ;
                                                    UPDATE } ;
                                              PAIR } ;
                                         DIP { DROP } } ;
                                     DIP { DROP 3 } } ;
                              DIP { DUP } ;
                              SWAP ;
                              CAR ;
                              DIP { DUP } ;
                              PAIR ;
                              DIP { DROP 3 } ;
                              DIP 4 { DUP } ;
                              DIG 4 ;
                              CAR ;
                              DIP { DUP } ;
                              PAIR ;
                              NIL operation ;
                              PAIR ;
                              DIP { DROP 2 } } ;
                          DIP { DROP } }
                        { DUP ;
                          DIP { DIP 2 { DUP } ; DIG 2 ; CAR } ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          DIP { DUP } ;
                          SWAP ;
                          CAR ;
                          DIP { DUP ; CAR ; CDR } ;
                          PAIR ;
                          DIP { DUP ; CDR } ;
                          PAIR ;
                          DIP { DROP 2 ; DIP 2 { DUP } ; DIG 2 ; CDR } ;
                          PAIR ;
                          NIL operation ;
                          PAIR ;
                          DIP { DROP } } ;
                      DIP { DROP } } } ;
             DIP { DROP 2 } ;
             DUP ;
             CDR ;
             DIP { DUP } ;
             SWAP ;
             CAR ;
             DIP { DUP ;
                   CAR ;
                   DIP { DUP ; CDR ; DIP { DIP 3 { DUP } ; DIG 3 ; CDR ; CDR } ; PAIR } ;
                   PAIR } ;
             PAIR ;
             DIP { DROP 3 } }
           { DIP { DUP } ;
             SWAP ;
             CAR ;
             CAR ;
             CDR ;
             IF { PUSH string "contract is paused" ; FAILWITH }
                { DUP ;
                  DIP { DIP { DUP } ; SWAP ; CDR } ;
                  PAIR ;
                  DUP ;
                  CDR ;
                  DIP { DUP } ;
                  SWAP ;
                  CAR ;
                  IF_LEFT
                    { DUP ;
                      IF_LEFT
                        { DUP ;
                          IF_LEFT
                            { DUP ;
                              DIP { DIP 3 { DUP } ; DIG 3 } ;
                              PAIR ;
                              DUP ;
                              CAR ;
                              DIP { DUP } ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SENDER ;
                              GET ;
                              IF_NONE
                                { DUP ;
                                  CAR ;
                                  CDR ;
                                  CDR ;
                                  SENDER ;
                                  PAIR ;
                                  DUP ;
                                  CAR ;
                                  DUP ;
                                  DIP { DIP { DUP } ; SWAP ; CDR } ;
                                  GET ;
                                  IF_NONE
                                    { DUP ;
                                      CONTRACT %multi_token_receiver
                                        (pair (pair (list %batch (pair (nat %amount) (nat %token_id))) (bytes %data))
                                              (pair (option %from_ address) (address %operator))) ;
                                      IF_NONE
                                        { PUSH string "bad address for get_entrypoint (%multi_token_receiver)" ;
                                          FAILWITH }
                                        {} ;
                                      DROP ;
                                      UNIT }
                                    { DROP ; UNIT } ;
                                  DIP { DROP 2 } ;
                                  DIP 2 { DUP } ;
                                  DIG 2 ;
                                  DIP { EMPTY_SET address ; PUSH bool True } ;
                                  UPDATE ;
                                  DIP { DROP } }
                                { DIP 2 { DUP } ;
                                  DIG 2 ;
                                  DIP { DUP ; PUSH bool True } ;
                                  UPDATE ;
                                  DIP { DROP } } ;
                              DUP ;
                              SOME ;
                              DIP { DIP { DUP } ; SWAP ; CDR } ;
                              SENDER ;
                              UPDATE ;
                              DIP { DROP 4 } ;
                              DIP 4 { DUP } ;
                              DIG 4 ;
                              CAR ;
                              DIP { DUP } ;
                              PAIR ;
                              NIL operation ;
                              PAIR ;
                              DIP { DROP 2 } }
                            { DUP ;
                              DIP { DIP 3 { DUP } ; DIG 3 ; CAR } ;
                              PAIR ;
                              DUP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              MAP { DUP ;
                                    DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                                    PAIR ;
                                    DUP ;
                                    CAR ;
                                    DIP { DUP } ;
                                    SWAP ;
                                    CDR ;
                                    DIP { DUP } ;
                                    SWAP ;
                                    CAR ;
                                    DIP { DIP { DUP } ; SWAP ; CDR } ;
                                    PAIR ;
                                    DIP { DUP ; CDR } ;
                                    PAIR ;
                                    DUP ;
                                    CAR ;
                                    CAR ;
                                    DIP { DUP ; CDR } ;
                                    PAIR ;
                                    DIP { DIP 17 { DUP } ; DIG 17 } ;
                                    EXEC ;
                                    DUP ;
                                    DIP { DIP { DUP } ; SWAP ; CAR ; CDR } ;
                                    PAIR ;
                                    DIP { DIP 17 { DUP } ; DIG 17 } ;
                                    EXEC ;
                                    DIP { DROP 2 } ;
                                    DUP ;
                                    DIP { DIP { DUP } ; SWAP ; CAR } ;
                                    PAIR ;
                                    DIP { DIP 15 { DUP } ; DIG 15 } ;
                                    EXEC ;
                                    DIP { DROP 4 ; DUP } ;
                                    SWAP ;
                                    DIP { DUP } ;
                                    PAIR ;
                                    DIP { DROP 2 } } ;
                              DUP ;
                              DIP { DIP { DUP } ; SWAP ; CDR ; PUSH mutez 0 } ;
                              TRANSFER_TOKENS ;
                              DIP { DROP 3 } ;
                              DUP ;
                              NIL operation ;
                              SWAP ;
                              CONS ;
                              DIP { DIP 4 { DUP } ; DIG 4 } ;
                              PAIR ;
                              DIP { DROP 2 } } ;
                          DIP { DROP } }
                        { DUP ;
                          IF_LEFT
                            { DUP ;
                              DIP { DIP 3 { DUP } ; DIG 3 ; CDR } ;
                              PAIR ;
                              DUP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              DUP ;
                              DIP { DUP ;
                                    CDR ;
                                    DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                                    GET ;
                                    IF_NONE
                                      { PUSH bool False }
                                      { DIP { DUP } ; SWAP ; CAR ; DIP { DUP } ; MEM ; DIP { DROP } } } ;
                              PAIR ;
                              DIP { DIP { DUP } ; SWAP ; CDR ; PUSH mutez 0 } ;
                              TRANSFER_TOKENS ;
                              DIP { DROP 3 } ;
                              DUP ;
                              NIL operation ;
                              SWAP ;
                              CONS ;
                              DIP { DIP 4 { DUP } ; DIG 4 } ;
                              PAIR ;
                              DIP { DROP 2 } }
                            { DUP ;
                              DIP { DIP 3 { DUP } ; DIG 3 ; CDR } ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              DUP ;
                              SENDER ;
                              GET ;
                              IF_NONE
                                { NONE (set address) }
                                { DIP 2 { DUP } ;
                                  DIG 2 ;
                                  CAR ;
                                  DIP { DUP ; PUSH bool False } ;
                                  UPDATE ;
                                  DUP ;
                                  SIZE ;
                                  PUSH nat 0 ;
                                  SWAP ;
                                  COMPARE ;
                                  EQ ;
                                  IF { NONE (set address) } { DUP ; SOME } ;
                                  DIP { DROP 2 } } ;
                              DUP ;
                              DIP { DIP { DUP } ; SWAP } ;
                              SENDER ;
                              UPDATE ;
                              DIP { DROP 3 } ;
                              DIP 4 { DUP } ;
                              DIG 4 ;
                              CAR ;
                              DIP { DUP } ;
                              PAIR ;
                              NIL operation ;
                              PAIR ;
                              DIP { DROP 2 } } ;
                          DIP { DROP } } ;
                      DIP { DROP } }
                    { DUP ;
                      DUP ;
                      CDR ;
                      CAR ;
                      DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      DUP ;
                      SENDER ;
                      COMPARE ;
                      EQ ;
                      IF { UNIT }
                         { DUP ;
                           DIP { DIP { DUP } ; SWAP ; CDR } ;
                           GET ;
                           IF_NONE { PUSH bool False } { DUP ; SENDER ; MEM ; DIP { DROP } } ;
                           IF { UNIT }
                              { PUSH string "operator not approved to transfer tokens" ; FAILWITH } } ;
                      DIP { DROP 2 ; DUP } ;
                      SWAP ;
                      DIP { DIP 3 { DUP } ; DIG 3 ; CAR } ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      DIP { DUP } ;
                      SWAP ;
                      CDR ;
                      DIP { DUP } ;
                      SWAP ;
                      CDR ;
                      CDR ;
                      DIP { DUP ; CDR } ;
                      PAIR ;
                      DIP { DIP 14 { DUP } ; DIG 14 } ;
                      EXEC ;
                      DIP 2 { DUP } ;
                      DIG 2 ;
                      DIP { DUP ; CAR ; CDR } ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      DIP { DUP } ;
                      SWAP ;
                      CDR ;
                      IF { NIL operation }
                         { DUP ;
                           CDR ;
                           CDR ;
                           CONTRACT %multi_token_receiver
                             (pair (pair (list %batch (pair (nat %amount) (nat %token_id))) (bytes %data))
                                   (pair (option %from_ address) (address %operator))) ;
                           IF_NONE
                             { PUSH string "bad address for get_entrypoint (%multi_token_receiver)" ;
                               FAILWITH }
                             {} ;
                           DIP { DUP } ;
                           SWAP ;
                           CAR ;
                           CAR ;
                           DIP { DIP { DUP } ; SWAP ; CAR ; CDR } ;
                           PAIR ;
                           DIP { DIP { DUP } ; SWAP ; CDR ; CAR ; SOME ; SENDER ; SWAP ; PAIR } ;
                           PAIR ;
                           DIP { DUP ; PUSH mutez 0 } ;
                           TRANSFER_TOKENS ;
                           DUP ;
                           NIL operation ;
                           SWAP ;
                           CONS ;
                           DIP { DROP 2 } } ;
                      DIP { DROP 2 } ;
                      DIP 3 { DUP } ;
                      DIG 3 ;
                      CDR ;
                      CAR ;
                      DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                      PAIR ;
                      DIP { DIP 15 { DUP } ; DIG 15 } ;
                      EXEC ;
                      DIP 4 { DUP } ;
                      DIG 4 ;
                      CAR ;
                      CAR ;
                      DIP { DIP 3 { DUP } ; DIG 3 ; CAR } ;
                      ITER { SWAP ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             DIP 2 { DUP } ;
                             DIG 2 ;
                             DIP { DUP ; CDR } ;
                             PAIR ;
                             DIP { DIP 17 { DUP } ; DIG 17 } ;
                             EXEC ;
                             DIP 5 { DUP } ;
                             DIG 5 ;
                             CAR ;
                             CAR ;
                             DIP { DIP { DUP } ; SWAP ; CDR } ;
                             PAIR ;
                             DIP { DIP 18 { DUP } ; DIG 18 } ;
                             EXEC ;
                             DIP { DUP } ;
                             SWAP ;
                             DIP { DUP } ;
                             PAIR ;
                             DIP { DIP 2 { DUP } ;
                                   DIG 2 ;
                                   CAR ;
                                   DIP { DIP 3 { DUP } ; DIG 3 ; CAR } ;
                                   PAIR } ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             CAR ;
                             DIP { DUP } ;
                             SWAP ;
                             CAR ;
                             CDR ;
                             DIP 2 { DUP } ;
                             DIG 2 ;
                             CDR ;
                             CAR ;
                             DIP 3 { DUP } ;
                             DIG 3 ;
                             CDR ;
                             CDR ;
                             DIP 3 { DUP } ;
                             DIG 3 ;
                             DIP { DUP } ;
                             PAIR ;
                             DIP { DIP 23 { DUP } ; DIG 23 } ;
                             EXEC ;
                             DUP ;
                             DIP { DIP 2 { DUP } ; DIG 2 } ;
                             SUB ;
                             ISNAT ;
                             IF_NONE
                               { PUSH string "Insufficient balance" ; FAILWITH }
                               { DUP ;
                                 PUSH nat 0 ;
                                 SWAP ;
                                 COMPARE ;
                                 EQ ;
                                 IF { DIP 5 { DUP } ;
                                      DIG 5 ;
                                      DIP { DIP 2 { DUP } ; DIG 2 ; NONE nat } ;
                                      UPDATE }
                                    { DIP 5 { DUP } ;
                                      DIG 5 ;
                                      DIP { DUP ; SOME ; DIP { DIP 2 { DUP } ; DIG 2 } } ;
                                      UPDATE } ;
                                 DIP 5 { DUP } ;
                                 DIG 5 ;
                                 DIP { DUP } ;
                                 PAIR ;
                                 DIP { DIP 26 { DUP } ; DIG 26 } ;
                                 EXEC ;
                                 DUP ;
                                 DIP { DIP 5 { DUP } ; DIG 5 } ;
                                 ADD ;
                                 DIP 7 { DUP } ;
                                 DIG 7 ;
                                 DIP { DUP ; SOME ; DIP { DIP 2 { DUP } ; DIG 2 } } ;
                                 UPDATE ;
                                 DIP { DROP 4 } } ;
                             DIP { DROP 10 } } ;
                      DIP 2 { DUP } ;
                      DIG 2 ;
                      DIP { DUP ; DIP { DIP 3 { DUP } ; DIG 3 ; CDR } ; PAIR } ;
                      PAIR ;
                      DIP { DROP 7 } ;
                      DUP ;
                      CAR ;
                      DIP { DUP ; CDR ; DIP { DIP 4 { DUP } ; DIG 4 ; CDR } ; PAIR } ;
                      PAIR ;
                      DIP { DROP 4 } } ;
                  DIP { DROP 2 } ;
                  DUP ;
                  CAR ;
                  DIP { DIP 2 { DUP } ; DIG 2 ; CAR ; DIP { DUP ; CDR } ; PAIR } ;
                  PAIR ;
                  DIP { DROP } } ;
             DIP { DROP } } ;
         DIP { DROP 8 } } }
