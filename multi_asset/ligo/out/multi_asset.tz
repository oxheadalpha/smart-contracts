{ parameter
    (or (or (or %admin (bool %pause) (address %set_admin))
            (or %assets
               (or %fa2
                  (or (or (pair %balance_of
                             (list %balance_requests
                                (pair (address %owner) (or %token_id (nat %multi) (unit %single))))
                             (contract %balance_view
                                (list (pair (nat %balance)
                                            (pair %request (address %owner) (or %token_id (nat %multi) (unit %single)))))))
                          (contract %get_permissions_policy
                             (list (or (or (address %allowances_config)
                                           (pair %custom_config (address %entrypoint) (string %tag)))
                                       (or (address %operators_config) (address %whitelist_config))))))
                      (or (pair %token_descriptor
                             (contract %token_descriptor_view
                                (list (pair (pair %descriptor
                                               (pair (nat %decimals) (map %extras string string))
                                               (pair (string %name) (string %symbol)))
                                            (or %token_id (nat %multi) (unit %single)))))
                             (list %token_ids (or (nat %multi) (unit %single))))
                          (pair %total_supply
                             (list %token_ids (or (nat %multi) (unit %single)))
                             (contract %total_supply_view
                                (list (pair (nat %supply) (or %token_id (nat %multi) (unit %single))))))))
                  (list %transfer
                     (pair (pair (nat %amount) (address %from_))
                           (pair (address %to_) (or %token_id (nat %multi) (unit %single))))))
               (pair %set_transfer_hook
                  (list %config
                     (or (or (address %allowances_config)
                             (pair %custom_config (address %entrypoint) (string %tag)))
                         (or (address %operators_config) (address %whitelist_config))))
                  (address %hook))))
        (or %tokens
           (or (list %burn_tokens
                  (pair (pair (nat %amount) (address %owner)) (or %token_id (nat %multi) (unit %single))))
               (pair %create_token
                  (pair %descriptor
                     (pair (nat %decimals) (map %extras string string))
                     (pair (string %name) (string %symbol)))
                  (nat %token_id)))
           (list %mint_tokens
              (pair (pair (nat %amount) (address %owner)) (or %token_id (nat %multi) (unit %single)))))) ;
  storage
    (pair (pair %admin (address %admin) (bool %paused))
          (pair %assets
             (pair (pair %balance_storage
                      (big_map %balances nat nat)
                      (pair %owners (nat %owner_count) (big_map %owners address nat)))
                   (option %hook
                      (pair (list %config
                               (or (or (address %allowances_config)
                                       (pair %custom_config (address %entrypoint) (string %tag)))
                                   (or (address %operators_config) (address %whitelist_config))))
                            (address %hook))))
             (big_map %token_storage
                nat
                (pair (pair %descriptor
                         (pair (nat %decimals) (map %extras string string))
                         (pair (string %name) (string %symbol)))
                      (nat %total_supply))))) ;
  code { LAMBDA
           (pair (address %0) (pair %1 (nat %owner_count) (big_map %owners address nat)))
           nat
           { DUP ;
             DUP ;
             CAR ;
             DIP { DUP ; CDR ; CDR } ;
             GET ;
             IF_NONE
               { PUSH string "No such owner" ; FAILWITH }
               { DUP ; DIP { DROP } } ;
             DIP { DROP 2 } } ;
         LAMBDA
           (or (nat %multi) (unit %single))
           nat
           { DUP ;
             IF_LEFT
               { DUP ; DIP { DROP } }
               { PUSH string "Multi token_id is expected" ; FAILWITH } ;
             DIP { DROP } } ;
         DUP ;
         LAMBDA
           (pair (nat %0) (nat %1))
           nat
           { DUP ;
             DUP ;
             CDR ;
             DUP ;
             PUSH nat 4294967295 ;
             SWAP ;
             COMPARE ;
             GT ;
             IF { PUSH string "provided token ID is out of allowed range" ; FAILWITH }
                { DUP ;
                  DIP { DIP { DUP } ; SWAP ; CAR ; PUSH nat 4294967296 ; SWAP ; MUL } ;
                  ADD } ;
             DIP { DROP 3 } } ;
         DUP ;
         DIP { PAIR } ;
         SWAP ;
         LAMBDA
           nat
           (lambda (big_map nat nat) nat)
           { DUP ;
             PUSH (lambda (pair nat (big_map nat nat)) nat)
                  { {} ;
                    { { DUP ; CAR ; SWAP ; CDR } ; DIP { {} } } ;
                    {} ;
                    { { { { DIP { DUP } ; SWAP } ; DIP { { DUP ; DIP { {} } } } } ;
                        GET } ;
                      IF_NONE { PUSH nat 0 } { { DUP ; DIP { DROP } } } } ;
                    {} ;
                    DIP { DROP } ;
                    { DIP { DROP } } } ;
             SWAP ;
             APPLY ;
             DIP { DROP } } ;
         DUP ;
         DIP { PAIR } ;
         SWAP ;
         LAMBDA
           (pair (pair (lambda nat (lambda (big_map nat nat) nat))
                       (pair (lambda (pair (nat %0) (nat %1)) nat) (lambda (or (nat %multi) (unit %single)) nat)))
                 (pair (pair (address %0) (or %1 (nat %multi) (unit %single)))
                       (pair (nat %2)
                             (pair %3
                                (big_map %balances nat nat)
                                (pair %owners (nat %owner_count) (big_map %owners address nat))))))
           (pair (big_map %balances nat nat)
                 (pair %owners (nat %owner_count) (big_map %owners address nat)))
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DIP { DUP ; CDR ; SWAP ; CAR ; DIP { DUP ; CDR ; SWAP ; CAR } } ;
             DUP ;
             DUP ;
             CDR ;
             CDR ;
             DIP { DUP } ;
             SWAP ;
             CAR ;
             CDR ;
             DIP { DIP 5 { DUP } ; DIG 5 } ;
             EXEC ;
             DIP 2 { DUP } ;
             DIG 2 ;
             CAR ;
             CAR ;
             DIP { DIP { DUP } ; SWAP ; CDR } ;
             PAIR ;
             DUP ;
             CAR ;
             DIP { DUP } ;
             SWAP ;
             CDR ;
             DIP { DUP } ;
             SWAP ;
             DIP { DUP ; CDR } ;
             GET ;
             IF_NONE
               { DIP { DUP } ;
                 SWAP ;
                 DIP { DUP } ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 PUSH nat 1 ;
                 ADD ;
                 DUP ;
                 DIP { DUP ;
                       DIP { DIP 2 { DUP } ;
                             DIG 2 ;
                             CAR ;
                             DIP { DUP ; SOME ; DIP { DIP { DUP } ; SWAP ; CDR } } ;
                             UPDATE } ;
                       PAIR } ;
                 PAIR ;
                 DIP { DROP 3 } }
               { DUP ; DIP { DIP { DUP } ; SWAP } ; PAIR ; DIP { DROP } } ;
             DIP { DROP 3 } ;
             DUP ;
             CAR ;
             DIP { DIP { DUP } ; SWAP } ;
             PAIR ;
             DIP { DIP 6 { DUP } ; DIG 6 } ;
             EXEC ;
             DIP 3 { DUP } ;
             DIG 3 ;
             CAR ;
             DIP { DUP ; DIP { DIP 6 { DUP } ; DIG 6 } ; EXEC } ;
             EXEC ;
             DUP ;
             DIP { DIP 5 { DUP } ; DIG 5 ; CDR ; CAR } ;
             ADD ;
             DIP 2 { DUP } ;
             DIG 2 ;
             DIP { DUP ; SOME ; DIP { DIP 5 { DUP } ; DIG 5 ; CAR } } ;
             UPDATE ;
             DIP { DIP 3 { DUP } ; DIG 3 ; CDR } ;
             PAIR ;
             DIP { DROP 11 } } ;
         SWAP ;
         APPLY ;
         DIP { DIP { DIP { DIP { DUP } ; DUP ; DIP { PAIR } ; SWAP } ;
                     DUP ;
                     DIP { PAIR } ;
                     SWAP } ;
               DUP ;
               DIP { PAIR } ;
               SWAP } ;
         SWAP ;
         LAMBDA
           (pair (pair (lambda nat (lambda (big_map nat nat) nat))
                       (pair (lambda (pair (nat %0) (nat %1)) nat)
                             (pair (lambda (or (nat %multi) (unit %single)) nat)
                                   (lambda
                                      (pair (address %0) (pair %1 (nat %owner_count) (big_map %owners address nat)))
                                      nat))))
                 (pair (pair (address %0) (or %1 (nat %multi) (unit %single)))
                       (pair (nat %2)
                             (pair %3
                                (big_map %balances nat nat)
                                (pair %owners (nat %owner_count) (big_map %owners address nat))))))
           (pair (big_map %balances nat nat)
                 (pair %owners (nat %owner_count) (big_map %owners address nat)))
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DIP { DUP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   DIP { DUP ; CDR ; SWAP ; CAR ; DIP { DUP ; CDR ; SWAP ; CAR } } } ;
             DUP ;
             DUP ;
             CDR ;
             CDR ;
             DIP { DUP } ;
             SWAP ;
             CAR ;
             CDR ;
             DIP { DIP 5 { DUP } ; DIG 5 } ;
             EXEC ;
             DIP 2 { DUP } ;
             DIG 2 ;
             CAR ;
             CAR ;
             DIP { DIP { DUP } ; SWAP ; CDR } ;
             PAIR ;
             DIP { DIP 7 { DUP } ; DIG 7 } ;
             EXEC ;
             DUP ;
             DIP { DIP { DUP } ; SWAP } ;
             PAIR ;
             DIP { DIP 6 { DUP } ; DIG 6 } ;
             EXEC ;
             DIP 3 { DUP } ;
             DIG 3 ;
             CAR ;
             DIP { DUP ; DIP { DIP 6 { DUP } ; DIG 6 } ; EXEC } ;
             EXEC ;
             DUP ;
             DIP { DIP 5 { DUP } ; DIG 5 ; CDR ; CAR } ;
             SUB ;
             ISNAT ;
             IF_NONE
               { PUSH string "Insufficient balance" ; FAILWITH }
               { DUP ;
                 PUSH nat 0 ;
                 SWAP ;
                 COMPARE ;
                 EQ ;
                 IF { DIP 2 { DUP } ;
                      DIG 2 ;
                      DIP { DIP 5 { DUP } ; DIG 5 ; CAR ; NONE nat } ;
                      UPDATE }
                    { DIP 2 { DUP } ;
                      DIG 2 ;
                      DIP { DUP ; SOME ; DIP { DIP 5 { DUP } ; DIG 5 ; CAR } } ;
                      UPDATE } ;
                 DIP { DROP } } ;
             DIP 5 { DUP } ;
             DIG 5 ;
             CDR ;
             DIP { DUP } ;
             SWAP ;
             PAIR ;
             DIP { DROP 12 } } ;
         SWAP ;
         APPLY ;
         DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ;
         SWAP ;
         LAMBDA
           (pair (pair %0
                    (list %batch
                       (pair (pair (nat %amount) (option %from_ address))
                             (pair (option %to_ address) (or %token_id (nat %multi) (unit %single)))))
                    (address %operator))
                 (pair %1
                    (pair (pair %balance_storage
                             (big_map %balances nat nat)
                             (pair %owners (nat %owner_count) (big_map %owners address nat)))
                          (option %hook
                             (pair (list %config
                                      (or (or (address %allowances_config)
                                              (pair %custom_config (address %entrypoint) (string %tag)))
                                          (or (address %operators_config) (address %whitelist_config))))
                                   (address %hook))))
                    (big_map %token_storage
                       nat
                       (pair (pair %descriptor
                                (pair (nat %decimals) (map %extras string string))
                                (pair (string %name) (string %symbol)))
                             (nat %total_supply)))))
           operation
           { DUP ;
             DUP ;
             CDR ;
             CAR ;
             CDR ;
             IF_NONE
               { PUSH string "transfer hook is not set" ; FAILWITH }
               { DUP ;
                 CDR ;
                 CONTRACT
                   (pair (list %batch
                            (pair (pair (nat %amount) (option %from_ address))
                                  (pair (option %to_ address) (or %token_id (nat %multi) (unit %single)))))
                         (address %operator)) ;
                 IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                 DIP 2 { DUP } ;
                 DIG 2 ;
                 CAR ;
                 DIP { DUP ; PUSH mutez 0 } ;
                 TRANSFER_TOKENS ;
                 DIP { DROP 2 } } ;
             DIP { DROP 2 } } ;
         SWAP ;
         LAMBDA
           (pair (lambda (or (nat %multi) (unit %single)) nat)
                 (pair (or %0 (nat %multi) (unit %single))
                       (big_map %1
                          nat
                          (pair (pair %descriptor
                                   (pair (nat %decimals) (map %extras string string))
                                   (pair (string %name) (string %symbol)))
                                (nat %total_supply)))))
           (pair (pair %descriptor
                    (pair (nat %decimals) (map %extras string string))
                    (pair (string %name) (string %symbol)))
                 (nat %total_supply))
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             DUP ;
             CAR ;
             DIP { DIP 2 { DUP } ; DIG 2 } ;
             EXEC ;
             DUP ;
             DIP { DIP { DUP } ; SWAP ; CDR } ;
             GET ;
             IF_NONE
               { PUSH string "token id not found" ; FAILWITH }
               { DUP ; DIP { DROP } } ;
             DIP { DROP 4 } } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (address %admin) (bool %paused))
           unit
           { DUP ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "operation requires admin privileges" ; FAILWITH }
                { UNIT } ;
             DIP { DROP } } ;
         DIP 9 { DUP } ;
         DIG 9 ;
         DUP ;
         CDR ;
         DIP { DUP } ;
         SWAP ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIP 2 { DUP } ;
                 DIG 2 ;
                 CAR ;
                 DIP { DIP 4 { DUP } ; DIG 4 } ;
                 EXEC ;
                 DIP { DUP } ;
                 SWAP ;
                 DIP { DIP 3 { DUP } ; DIG 3 ; CAR } ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "operation requires admin privileges" ; FAILWITH }
                    { DIP { DUP } ;
                      SWAP ;
                      CAR ;
                      IF_LEFT
                        { DUP ;
                          DIP { DIP { DUP } ; SWAP } ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          DIP { DUP } ;
                          SWAP ;
                          CAR ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          DIP { DROP } ;
                          NIL operation ;
                          PAIR ;
                          DIP { DROP } }
                        { DUP ;
                          DIP { DIP { DUP } ; SWAP } ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          DIP { DUP } ;
                          SWAP ;
                          CAR ;
                          SWAP ;
                          CDR ;
                          SWAP ;
                          PAIR ;
                          DIP { DROP } ;
                          NIL operation ;
                          PAIR ;
                          DIP { DROP } } } ;
                 DIP { DROP 2 } ;
                 DUP ;
                 CAR ;
                 DIP { DIP 4 { DUP } ;
                       DIG 4 ;
                       DIP { DUP } ;
                       SWAP ;
                       CDR ;
                       SWAP ;
                       CDR ;
                       SWAP ;
                       PAIR } ;
                 PAIR ;
                 DIP { DROP 3 } }
               { DIP 2 { DUP } ;
                 DIG 2 ;
                 CAR ;
                 CDR ;
                 IF { PUSH string "contract is paused" ; FAILWITH } { UNIT } ;
                 DIP { DUP } ;
                 SWAP ;
                 DIP { DIP 3 { DUP } ; DIG 3 ; CDR } ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIP { DUP } ;
                 SWAP ;
                 CAR ;
                 IF_LEFT
                   { DUP ;
                     DIP { DIP { DUP } ; SWAP } ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     DIP { DUP } ;
                     SWAP ;
                     CAR ;
                     IF_LEFT
                       { DUP ;
                         IF_LEFT
                           { DUP ;
                             IF_LEFT
                               { DUP ;
                                 DIP { DIP 3 { DUP } ; DIG 3 ; CAR ; CAR } ;
                                 PAIR ;
                                 DUP ;
                                 CAR ;
                                 DUP ;
                                 CAR ;
                                 MAP { DUP ;
                                       DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                                       PAIR ;
                                       DUP ;
                                       CAR ;
                                       DIP { DUP } ;
                                       SWAP ;
                                       CDR ;
                                       DIP { DUP } ;
                                       SWAP ;
                                       CDR ;
                                       DIP { DIP 26 { DUP } ; DIG 26 } ;
                                       EXEC ;
                                       DIP 2 { DUP } ;
                                       DIG 2 ;
                                       CAR ;
                                       DIP { DUP } ;
                                       PAIR ;
                                       DIP { DIP { DUP } ; SWAP ; CDR } ;
                                       PAIR ;
                                       DUP ;
                                       CAR ;
                                       CAR ;
                                       DIP { DUP ; CDR } ;
                                       PAIR ;
                                       DIP { DIP 29 { DUP } ; DIG 29 } ;
                                       EXEC ;
                                       DUP ;
                                       DIP { DIP { DUP } ; SWAP ; CAR ; CDR } ;
                                       PAIR ;
                                       DIP { DIP 28 { DUP } ; DIG 28 } ;
                                       EXEC ;
                                       DIP { DROP 2 } ;
                                       DIP 2 { DUP } ;
                                       DIG 2 ;
                                       CAR ;
                                       DIP { DUP ; DIP { DIP 26 { DUP } ; DIG 26 } ; EXEC } ;
                                       EXEC ;
                                       DIP { DROP 5 } ;
                                       DUP ;
                                       DIP { DIP { DUP } ; SWAP } ;
                                       PAIR ;
                                       DIP { DROP 2 } } ;
                                 DUP ;
                                 DIP { DIP { DUP } ; SWAP ; CDR ; PUSH mutez 0 } ;
                                 TRANSFER_TOKENS ;
                                 DIP { DROP 3 } ;
                                 DUP ;
                                 NIL operation ;
                                 SWAP ;
                                 CONS ;
                                 DIP { DIP 4 { DUP } ; DIG 4 } ;
                                 PAIR ;
                                 DIP { DROP 2 } }
                               { DUP ;
                                 DIP { DIP 3 { DUP } ; DIG 3 } ;
                                 PAIR ;
                                 DUP ;
                                 CDR ;
                                 CAR ;
                                 CDR ;
                                 IF_NONE
                                   { PUSH string "Transfer hook is not set" ; FAILWITH }
                                   { DUP ;
                                     CAR ;
                                     DIP { DIP { DUP } ; SWAP ; CAR ; PUSH mutez 0 } ;
                                     TRANSFER_TOKENS ;
                                     DIP { DROP } } ;
                                 DIP { DROP } ;
                                 DUP ;
                                 NIL operation ;
                                 SWAP ;
                                 CONS ;
                                 DIP { DIP 4 { DUP } ; DIG 4 } ;
                                 PAIR ;
                                 DIP { DROP 2 } } ;
                             DIP { DROP } }
                           { DUP ;
                             IF_LEFT
                               { DUP ;
                                 DUP ;
                                 CDR ;
                                 MAP { DUP ;
                                       DIP { DIP 5 { DUP } ; DIG 5 ; CDR } ;
                                       PAIR ;
                                       DIP { DIP 16 { DUP } ; DIG 16 } ;
                                       EXEC ;
                                       DUP ;
                                       CAR ;
                                       DIP { DIP { DUP } ; SWAP } ;
                                       PAIR ;
                                       DIP { DROP 2 } } ;
                                 DUP ;
                                 DIP { DIP { DUP } ; SWAP ; CAR ; PUSH mutez 0 } ;
                                 TRANSFER_TOKENS ;
                                 DUP ;
                                 NIL operation ;
                                 SWAP ;
                                 CONS ;
                                 DIP { DIP 6 { DUP } ; DIG 6 } ;
                                 PAIR ;
                                 DIP { DROP 4 } }
                               { DUP ;
                                 DUP ;
                                 CAR ;
                                 MAP { DUP ;
                                       DIP { DIP 5 { DUP } ; DIG 5 ; CDR } ;
                                       PAIR ;
                                       DIP { DIP 16 { DUP } ; DIG 16 } ;
                                       EXEC ;
                                       DUP ;
                                       CDR ;
                                       DIP { DIP { DUP } ; SWAP } ;
                                       PAIR ;
                                       DIP { DROP 2 } } ;
                                 DUP ;
                                 DIP { DIP { DUP } ; SWAP ; CDR ; PUSH mutez 0 } ;
                                 TRANSFER_TOKENS ;
                                 DUP ;
                                 NIL operation ;
                                 SWAP ;
                                 CONS ;
                                 DIP { DIP 6 { DUP } ; DIG 6 } ;
                                 PAIR ;
                                 DIP { DROP 4 } } ;
                             DIP { DROP } } ;
                         DIP { DROP } }
                       { DUP ;
                         DUP ;
                         MAP { DUP ;
                               CAR ;
                               CAR ;
                               DIP { DUP ; CAR ; CDR ; SOME } ;
                               PAIR ;
                               DIP { DUP ; CDR ; CAR ; SOME ; DIP { DUP ; CDR ; CDR } ; PAIR } ;
                               PAIR ;
                               DIP { DROP } } ;
                         DUP ;
                         SENDER ;
                         SWAP ;
                         PAIR ;
                         DIP { DROP } ;
                         DUP ;
                         DIP { DIP 3 { DUP } ; DIG 3 } ;
                         PAIR ;
                         DIP { DIP 15 { DUP } ; DIG 15 } ;
                         EXEC ;
                         DIP 2 { DUP } ;
                         DIG 2 ;
                         DIP { DIP 4 { DUP } ; DIG 4 ; CAR ; CAR } ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         DIP { DUP ; CDR } ;
                         ITER { SWAP ;
                                PAIR ;
                                DUP ;
                                DUP ;
                                CDR ;
                                DUP ;
                                CAR ;
                                CDR ;
                                DIP { DUP ; CDR ; CDR } ;
                                PAIR ;
                                DIP { DUP ; CAR ; CAR ; DIP { DIP { DUP } ; SWAP ; CAR } ; PAIR } ;
                                PAIR ;
                                DIP { DIP 21 { DUP } ; DIG 21 } ;
                                EXEC ;
                                DIP { DUP } ;
                                SWAP ;
                                CDR ;
                                CAR ;
                                DIP { DIP { DUP } ; SWAP ; CDR ; CDR } ;
                                PAIR ;
                                DIP { DIP { DUP } ; SWAP ; CAR ; CAR ; DIP { DUP } ; PAIR } ;
                                PAIR ;
                                DIP { DIP 23 { DUP } ; DIG 23 } ;
                                EXEC ;
                                DUP ;
                                DIP { DROP 5 } } ;
                         DIP { DROP ; DUP } ;
                         SWAP ;
                         NIL operation ;
                         SWAP ;
                         CONS ;
                         DIP { DIP 5 { DUP } ;
                               DIG 5 ;
                               DIP { DUP } ;
                               SWAP ;
                               DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                               PAIR ;
                               PAIR } ;
                         PAIR ;
                         DIP { DROP 5 } } ;
                     DIP { DROP 3 } }
                   { DIP { DUP } ;
                     SWAP ;
                     DIP { DUP } ;
                     SWAP ;
                     SOME ;
                     DIP { DUP ; CDR ; SWAP ; CAR ; CAR } ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP } } ;
                 DIP { DROP 2 } ;
                 DUP ;
                 CAR ;
                 DIP { DIP 4 { DUP } ;
                       DIG 4 ;
                       DIP { DUP } ;
                       SWAP ;
                       CDR ;
                       SWAP ;
                       CAR ;
                       PAIR } ;
                 PAIR ;
                 DIP { DROP 3 } } ;
             DIP { DROP } }
           { DIP { DUP } ;
             SWAP ;
             CAR ;
             DIP { DIP 3 { DUP } ; DIG 3 } ;
             EXEC ;
             DIP { DUP } ;
             SWAP ;
             DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
             PAIR ;
             DUP ;
             CDR ;
             DIP { DUP } ;
             SWAP ;
             CAR ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     DIP { DIP 2 { DUP } ; DIG 2 } ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIP { DUP } ;
                     SWAP ;
                     CDR ;
                     DIP { DUP } ;
                     SWAP ;
                     MAP { DUP ;
                           CAR ;
                           CAR ;
                           DIP { DUP ; CAR ; CDR ; SOME } ;
                           PAIR ;
                           DIP { DUP ; CDR ; NONE address ; PAIR } ;
                           PAIR ;
                           DIP { DROP } } ;
                     DUP ;
                     SENDER ;
                     SWAP ;
                     PAIR ;
                     DIP { DROP } ;
                     DUP ;
                     DIP { DIP { DUP } ; SWAP } ;
                     PAIR ;
                     DIP { DIP 14 { DUP } ; DIG 14 } ;
                     EXEC ;
                     DIP 3 { DUP } ;
                     DIG 3 ;
                     DIP { DIP 2 { DUP } ; DIG 2 ; CAR ; CAR } ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIP { DUP ; CDR } ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            DUP ;
                            CDR ;
                            DUP ;
                            CAR ;
                            CDR ;
                            DIP { DUP ; CDR } ;
                            PAIR ;
                            DIP { DUP ; CAR ; CAR ; DIP { DIP { DUP } ; SWAP ; CAR } ; PAIR } ;
                            PAIR ;
                            DIP { DIP 20 { DUP } ; DIG 20 } ;
                            EXEC ;
                            DIP { DROP 3 } } ;
                     DIP { DROP } ;
                     DIP 4 { DUP } ;
                     DIG 4 ;
                     DIP { DIP 3 { DUP } ; DIG 3 ; CDR } ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIP { DUP ; CDR } ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            DUP ;
                            CAR ;
                            DIP { DUP } ;
                            SWAP ;
                            CDR ;
                            DUP ;
                            CDR ;
                            DIP { DIP 26 { DUP } ; DIG 26 } ;
                            EXEC ;
                            DUP ;
                            DIP { DIP 2 { DUP } ; DIG 2 } ;
                            GET ;
                            IF_NONE
                              { PUSH string "token id not found" ; FAILWITH }
                              { DUP ;
                                CDR ;
                                DIP { DIP 2 { DUP } ; DIG 2 ; CAR ; CAR } ;
                                SUB ;
                                ISNAT ;
                                IF_NONE
                                  { PUSH string "total supply is less than zero" ; FAILWITH }
                                  { DUP ; DIP { DROP } } ;
                                DIP 2 { DUP } ;
                                DIG 2 ;
                                DIP { DIP { DUP } ;
                                      SWAP ;
                                      CAR ;
                                      DIP { DUP } ;
                                      PAIR ;
                                      SOME ;
                                      DIP { DIP 4 { DUP } ; DIG 4 } } ;
                                UPDATE ;
                                DIP { DROP 2 } } ;
                            DIP { DROP 5 } } ;
                     DIP { DROP } ;
                     DIP 2 { DUP } ;
                     DIG 2 ;
                     NIL operation ;
                     SWAP ;
                     CONS ;
                     DIP { DIP 4 { DUP } ;
                           DIG 4 ;
                           DIP 2 { DUP } ;
                           DIG 2 ;
                           DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                           PAIR ;
                           PAIR ;
                           CAR ;
                           DIP { DUP } ;
                           PAIR } ;
                     PAIR ;
                     DIP { DROP 8 } }
                   { DUP ;
                     DIP { DIP 2 { DUP } ; DIG 2 ; CDR } ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIP { DUP } ;
                     SWAP ;
                     CDR ;
                     DIP { DUP } ;
                     SWAP ;
                     CDR ;
                     DIP { DUP } ;
                     GET ;
                     IF_NONE
                       { DIP { DUP } ;
                         SWAP ;
                         CDR ;
                         DIP { DIP { DUP } ;
                               SWAP ;
                               CAR ;
                               PUSH nat 0 ;
                               SWAP ;
                               PAIR ;
                               SOME ;
                               DIP { DUP } } ;
                         UPDATE }
                       { PUSH string "token already exists" ; FAILWITH } ;
                     DIP { DROP 3 } ;
                     DIP 3 { DUP } ;
                     DIG 3 ;
                     CAR ;
                     DIP { DUP } ;
                     PAIR ;
                     NIL operation ;
                     PAIR ;
                     DIP { DROP 2 } } ;
                 DIP { DROP } }
               { DUP ;
                 DIP { DIP { DUP } ; SWAP } ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIP { DUP } ;
                 SWAP ;
                 CDR ;
                 DIP { DUP } ;
                 SWAP ;
                 MAP { DUP ;
                       CAR ;
                       CAR ;
                       NONE address ;
                       SWAP ;
                       PAIR ;
                       DIP { DUP ; CAR ; CDR ; SOME ; DIP { DUP ; CDR } ; PAIR } ;
                       PAIR ;
                       DIP { DROP } } ;
                 DUP ;
                 SENDER ;
                 SWAP ;
                 PAIR ;
                 DIP { DROP } ;
                 DUP ;
                 DIP { DIP { DUP } ; SWAP } ;
                 PAIR ;
                 DIP { DIP 13 { DUP } ; DIG 13 } ;
                 EXEC ;
                 DIP 3 { DUP } ;
                 DIG 3 ;
                 DIP { DIP 2 { DUP } ; DIG 2 ; CAR ; CAR } ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIP { DUP ; CDR } ;
                 ITER { SWAP ;
                        PAIR ;
                        DUP ;
                        DUP ;
                        CDR ;
                        DUP ;
                        CAR ;
                        CDR ;
                        DIP { DUP ; CDR } ;
                        PAIR ;
                        DIP { DUP ; CAR ; CAR ; DIP { DIP { DUP } ; SWAP ; CAR } ; PAIR } ;
                        PAIR ;
                        DIP { DIP 20 { DUP } ; DIG 20 } ;
                        EXEC ;
                        DIP { DROP 3 } } ;
                 DIP { DROP } ;
                 DIP 4 { DUP } ;
                 DIG 4 ;
                 DIP { DIP 3 { DUP } ; DIG 3 ; CDR } ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIP { DUP ; CDR } ;
                 ITER { SWAP ;
                        PAIR ;
                        DUP ;
                        DUP ;
                        CAR ;
                        DIP { DUP } ;
                        SWAP ;
                        CDR ;
                        DUP ;
                        CDR ;
                        DIP { DIP 25 { DUP } ; DIG 25 } ;
                        EXEC ;
                        DUP ;
                        DIP { DIP 2 { DUP } ; DIG 2 } ;
                        GET ;
                        IF_NONE
                          { PUSH string "token id not found" ; FAILWITH }
                          { DUP ;
                            CDR ;
                            DIP { DIP 2 { DUP } ; DIG 2 ; CAR ; CAR } ;
                            ADD ;
                            DIP 2 { DUP } ;
                            DIG 2 ;
                            DIP { DIP { DUP } ;
                                  SWAP ;
                                  CAR ;
                                  DIP { DUP } ;
                                  PAIR ;
                                  SOME ;
                                  DIP { DIP 4 { DUP } ; DIG 4 } } ;
                            UPDATE ;
                            DIP { DROP 2 } } ;
                        DIP { DROP 5 } } ;
                 DIP { DROP } ;
                 DIP 2 { DUP } ;
                 DIG 2 ;
                 NIL operation ;
                 SWAP ;
                 CONS ;
                 DIP { DIP 4 { DUP } ;
                       DIG 4 ;
                       DIP 2 { DUP } ;
                       DIG 2 ;
                       DIP { DUP ; CDR ; SWAP ; CAR ; CDR } ;
                       PAIR ;
                       PAIR ;
                       CAR ;
                       DIP { DUP } ;
                       PAIR } ;
                 PAIR ;
                 DIP { DROP 8 } } ;
             DIP { DROP 2 } ;
             DUP ;
             CAR ;
             DIP { DIP 3 { DUP } ;
                   DIG 3 ;
                   DIP { DUP } ;
                   SWAP ;
                   CDR ;
                   SWAP ;
                   CAR ;
                   PAIR } ;
             PAIR ;
             DIP { DROP 3 } } ;
         DIP { DROP 12 } } }

