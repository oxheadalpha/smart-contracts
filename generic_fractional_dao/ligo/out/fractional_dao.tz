{ parameter
    (or (lambda %flush_expired unit (list operation))
        (or (pair %set_voting_period (nat %old_period) (nat %new_period))
            (or (pair %set_voting_threshold (nat %old_threshold) (nat %new_threshold))
                (or (pair %vote
                       (lambda %lambda unit (list operation))
                       (option %permit (pair (key %key) (signature %signature))))
                    (or %fa2
                       (list %transfer
                          (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount)))))
                       (or (pair %balance_of
                              (list %requests (pair (address %owner) (nat %token_id)))
                              (contract %callback
                                 (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                           (list %update_operators
                              (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                                  (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))))))))) ;
  storage
    (pair (pair %ownership_token
             (big_map %ledger address nat)
             (big_map %operators (pair address address nat) unit)
             (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
             (nat %total_supply))
          (nat %voting_threshold)
          (nat %voting_period)
          (nat %vote_count)
          (big_map %pending_proposals
             bytes
             (pair (nat %vote_amount) (set %voters address) (timestamp %timestamp)))
          (big_map %metadata string bytes)) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         LAMBDA
           (pair address (big_map address nat))
           nat
           { UNPAIR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         LAMBDA
           (pair (pair nat (set address) timestamp) nat)
           bool
           { UNPAIR ;
             SWAP ;
             INT ;
             SWAP ;
             GET 4 ;
             NOW ;
             SUB ;
             COMPARE ;
             GT ;
             IF { PUSH bool True } { PUSH bool False } } ;
         DIG 3 ;
         UNPAIR ;
         IF_LEFT
           { DIG 3 ;
             DIG 4 ;
             DROP 2 ;
             PACK ;
             DUP 2 ;
             GET 9 ;
             DUP 2 ;
             GET ;
             IF_NONE
               { DROP 3 ; PUSH string "PROPOSAL_DOES_NOT_EXIST" ; FAILWITH }
               { DUP 3 ;
                 GET 5 ;
                 SWAP ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 IF { DUP 2 ;
                      DIG 2 ;
                      GET 9 ;
                      DIG 2 ;
                      NONE (pair nat (set address) timestamp) ;
                      SWAP ;
                      UPDATE ;
                      UPDATE 9 }
                    { DROP 2 ; PUSH string "NOT_EXPIRED" ; FAILWITH } } ;
             NIL operation }
           { IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DIG 4 ;
                 DROP 3 ;
                 SELF_ADDRESS ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "UNVOTED_CALL" ; FAILWITH } ;
                 DUP 2 ;
                 GET 5 ;
                 DUP 2 ;
                 CAR ;
                 COMPARE ;
                 NEQ ;
                 IF { DROP 2 ; PUSH string "INVALID_OLD_PERIOD" ; FAILWITH }
                    { PUSH nat 300 ;
                      DUP 2 ;
                      CDR ;
                      COMPARE ;
                      LT ;
                      IF { DROP 2 ; PUSH string "PERIOD_TOO_SHORT" ; FAILWITH }
                         { CDR ; UPDATE 5 } } ;
                 NIL operation }
               { IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DROP 3 ;
                     SELF_ADDRESS ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "UNVOTED_CALL" ; FAILWITH } ;
                     DUP 2 ;
                     GET 3 ;
                     DUP 2 ;
                     CAR ;
                     COMPARE ;
                     NEQ ;
                     IF { DROP 2 ; PUSH string "INVALID_OLD_THRESHOLD" ; FAILWITH }
                        { DUP 2 ;
                          CAR ;
                          GET 6 ;
                          DUP 2 ;
                          CDR ;
                          COMPARE ;
                          GT ;
                          IF { DROP 2 ; PUSH string "THRESHOLD_EXCEEDS_TOTAL_SUPPLY" ; FAILWITH }
                             { CDR ; UPDATE 3 } } ;
                     NIL operation }
                   { IF_LEFT
                       { DIG 3 ;
                         DIG 4 ;
                         DROP 2 ;
                         DUP ;
                         CDR ;
                         IF_NONE
                           { SENDER }
                           { DUP 2 ;
                             CAR ;
                             DUP 4 ;
                             GET 7 ;
                             PAIR ;
                             SELF_ADDRESS ;
                             CHAIN_ID ;
                             PAIR ;
                             PAIR ;
                             PACK ;
                             DUP 2 ;
                             CDR ;
                             DUP 3 ;
                             CAR ;
                             CHECK_SIGNATURE ;
                             IF { CAR ; HASH_KEY ; IMPLICIT_ACCOUNT ; ADDRESS }
                                { DROP ; PUSH string "MISSIGNED" ; FAILWITH } } ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         DUP 2 ;
                         GET ;
                         IF_NONE { PUSH string "NOT_VOTER" ; FAILWITH } {} ;
                         DUP 3 ;
                         CAR ;
                         PACK ;
                         DUP 5 ;
                         GET 9 ;
                         DUP 2 ;
                         GET ;
                         IF_NONE
                           { DIG 5 ;
                             DROP ;
                             NOW ;
                             EMPTY_SET address ;
                             DIG 4 ;
                             PUSH bool True ;
                             SWAP ;
                             UPDATE ;
                             DIG 3 ;
                             PAIR 3 }
                           { DUP 6 ;
                             GET 5 ;
                             DUP 2 ;
                             PAIR ;
                             DIG 7 ;
                             SWAP ;
                             EXEC ;
                             IF { DIG 2 ; DIG 3 ; DROP 3 ; PUSH string "EXPIRED" ; FAILWITH }
                                { DUP ;
                                  GET 3 ;
                                  DUP 5 ;
                                  MEM ;
                                  IF { DIG 2 ; DIG 3 ; DROP 3 ; PUSH string "DUP_VOTE" ; FAILWITH }
                                     { DUP ;
                                       DIG 3 ;
                                       DUP 3 ;
                                       CAR ;
                                       ADD ;
                                       UPDATE 1 ;
                                       SWAP ;
                                       GET 3 ;
                                       DIG 3 ;
                                       PUSH bool True ;
                                       SWAP ;
                                       UPDATE ;
                                       UPDATE 3 } } } ;
                         DUP 4 ;
                         GET 3 ;
                         DUP 2 ;
                         CAR ;
                         COMPARE ;
                         LT ;
                         IF { DIG 2 ;
                              DROP ;
                              DUP 3 ;
                              DUP 4 ;
                              GET 9 ;
                              DIG 2 ;
                              SOME ;
                              DIG 3 ;
                              UPDATE ;
                              UPDATE 9 ;
                              PUSH nat 1 ;
                              DIG 2 ;
                              GET 7 ;
                              ADD ;
                              UPDATE 7 ;
                              NIL operation }
                            { DROP ;
                              UNIT ;
                              DIG 2 ;
                              CAR ;
                              SWAP ;
                              EXEC ;
                              DUP 3 ;
                              DUP 4 ;
                              GET 9 ;
                              DIG 3 ;
                              NONE (pair nat (set address) timestamp) ;
                              SWAP ;
                              UPDATE ;
                              UPDATE 9 ;
                              PUSH nat 1 ;
                              DIG 3 ;
                              GET 7 ;
                              ADD ;
                              UPDATE 7 ;
                              SWAP } }
                       { DIG 2 ;
                         DROP ;
                         DUP 2 ;
                         CAR ;
                         SWAP ;
                         IF_LEFT
                           { MAP { DUP ;
                                   CDR ;
                                   MAP { DUP ; GET 4 ; DUP 2 ; GET 3 ; DIG 2 ; CAR ; SOME ; PAIR 3 } ;
                                   SWAP ;
                                   CAR ;
                                   SOME ;
                                   PAIR } ;
                             DUP 2 ;
                             CAR ;
                             SWAP ;
                             ITER { SWAP ;
                                    SENDER ;
                                    SWAP ;
                                    DUP 3 ;
                                    CDR ;
                                    ITER { SWAP ;
                                           PUSH nat 0 ;
                                           DUP 3 ;
                                           GET 3 ;
                                           COMPARE ;
                                           NEQ ;
                                           IF { DROP 2 ; DUP 6 ; FAILWITH }
                                              { DUP 4 ;
                                                CAR ;
                                                IF_NONE
                                                  {}
                                                  { DUP 4 ;
                                                    DUP 2 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    IF {}
                                                       { DUP 6 ;
                                                         GET 3 ;
                                                         DUP 4 ;
                                                         GET 3 ;
                                                         DUP 6 ;
                                                         PAIR ;
                                                         DUP 3 ;
                                                         PAIR ;
                                                         MEM ;
                                                         IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } ;
                                                    DUP 2 ;
                                                    DUP 2 ;
                                                    PAIR ;
                                                    DUP 9 ;
                                                    SWAP ;
                                                    EXEC ;
                                                    DUP 4 ;
                                                    GET 4 ;
                                                    SWAP ;
                                                    SUB ;
                                                    ISNAT ;
                                                    IF_NONE
                                                      { DROP 2 ; PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH }
                                                      { PUSH nat 0 ;
                                                        DUP 2 ;
                                                        COMPARE ;
                                                        EQ ;
                                                        IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                                           { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } } ;
                                                DUP 2 ;
                                                CAR ;
                                                IF_NONE
                                                  { SWAP ; DROP }
                                                  { DUP 2 ;
                                                    DUP 2 ;
                                                    PAIR ;
                                                    DUP 9 ;
                                                    SWAP ;
                                                    EXEC ;
                                                    DIG 3 ;
                                                    GET 4 ;
                                                    ADD ;
                                                    PUSH nat 0 ;
                                                    DUP 2 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    IF { DROP ; NONE nat ; SWAP ; UPDATE }
                                                       { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } } } ;
                                    SWAP ;
                                    DIG 2 ;
                                    DROP 2 } ;
                             DIG 3 ;
                             DIG 4 ;
                             DROP 2 ;
                             UPDATE 1 ;
                             NIL operation }
                           { IF_LEFT
                               { DUP ;
                                 CAR ;
                                 MAP { PUSH nat 0 ;
                                       DUP 2 ;
                                       CDR ;
                                       COMPARE ;
                                       NEQ ;
                                       IF { DROP ; DUP 5 ; FAILWITH }
                                          { DUP 3 ; CAR ; DUP 2 ; CAR ; PAIR ; DUP 6 ; SWAP ; EXEC ; SWAP ; PAIR } } ;
                                 DIG 4 ;
                                 DIG 5 ;
                                 DROP 2 ;
                                 SWAP ;
                                 CDR ;
                                 PUSH mutez 0 ;
                                 DIG 2 ;
                                 TRANSFER_TOKENS ;
                                 SWAP ;
                                 NIL operation ;
                                 DIG 2 ;
                                 CONS }
                               { DIG 3 ;
                                 DIG 4 ;
                                 DROP 2 ;
                                 SENDER ;
                                 DUP 3 ;
                                 GET 3 ;
                                 DIG 2 ;
                                 ITER { SWAP ;
                                        DUP 3 ;
                                        DUP 3 ;
                                        IF_LEFT {} {} ;
                                        CAR ;
                                        COMPARE ;
                                        EQ ;
                                        IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                                        SWAP ;
                                        IF_LEFT
                                          { SWAP ;
                                            UNIT ;
                                            SOME ;
                                            DUP 3 ;
                                            GET 4 ;
                                            DUP 4 ;
                                            GET 3 ;
                                            PAIR ;
                                            DIG 3 ;
                                            CAR ;
                                            PAIR ;
                                            UPDATE }
                                          { SWAP ;
                                            DUP 2 ;
                                            GET 4 ;
                                            DUP 3 ;
                                            GET 3 ;
                                            PAIR ;
                                            DIG 2 ;
                                            CAR ;
                                            PAIR ;
                                            NONE unit ;
                                            SWAP ;
                                            UPDATE } } ;
                                 SWAP ;
                                 DROP ;
                                 UPDATE 3 ;
                                 NIL operation } } ;
                         DUG 2 ;
                         UPDATE 1 ;
                         SWAP } } } } ;
         PAIR } }

